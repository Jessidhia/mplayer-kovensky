#!/usr/bin/env python

import os
from os import path
import sys
from optparse import OptionParser
from subprocess import check_call

from script.helpers import run_command, GitWrapper

option_helptext = \
"""# Place each option on its own line. Empty lines and lines starting with '#'
# are ignored. The options do not need quoting, so you can have for example
# --extra-libs=-lfoo -lbar
# (and NOT --extra-libs='-lfoo -lbar').
"""

mplayer_options = \
"""# You can place options for MPlayer configure in this file.

""" + option_helptext

libav_options = \
"""# You can place options for libav configure in this file.

""" + option_helptext

common_options = \
"""# You can place options common for both MPlayer and libav configure in
# this file. This mainly makes sense for generic things like --cc.

""" + option_helptext

libass_options = \
"""# You can place options for libass configure in this file.

""" + option_helptext

def create_helpfile(filename, text):
    if not path.exists(filename):
        f = open(filename, 'w')
        f.write(text)
        f.close()

def main():
    usage = 'usage: %prog [options]'
    parser = OptionParser(usage=usage)
    parser.add_option('-s', '--shallow', action='store_true',
                      help='only shallow git clone (uses less bandwidth)')
    parser.set_defaults(shallow=False)
    opts, args = parser.parse_args()
    if args:
        parser.print_help()
        sys.exit(1)

    create_helpfile('mplayer_options', mplayer_options)
    create_helpfile('libav_options', libav_options)
    create_helpfile('common_options', common_options)
    create_helpfile('libass_options', common_options)

    os.chdir('..')
    git = GitWrapper()
    git.shallow = opts.shallow

    check_call('git submodule init'.split())
    git.submodule_clone('build/libav')
    git.submodule_clone('build/libass')
main()
