.\" sync with en/mplayer.1 rev. 30822
.\" Encoding: UTF-8
.\" Reminder of hard terms which need better/final solution later:
.\"   /capture; playtree in parent list; colorkey; retrace; desync; downmix;
.\"   wrapper script ... shellescapes; keyframe; deblock; dering;
.\"   encoding audio rate; alphamap; upsampling; sweep;
.\"   aligned buffers; instancenumber;
.\"
.\" MPlayer (C) 2000-2010 MPlayer 团队
.\" 本(英文)手册页由 Gabucino, Diego Biurrun, Jonas Jermann 编写
.\" 视频滤镜、通用编解码器选项、特定编解码器专用选项三个章节由
.\" JRaSH <jrash06 AT 163.com>重新翻译
.\" 参于翻译本中文手册页的有:
.\"   JRaSH <jrash06 AT 163.com>,
.\"   Lu Ran <hephooey@fastmail.fm>, Sheldon Jin <jinsh2 AT yahoo.com>,
.
.\" --------------------------------------------------------------------------
.\" 宏定义
.\" --------------------------------------------------------------------------
.
.\" 定义子选项缩进
.nr SS 5
.\" 添加新子选项
.de IPs
.IP "\\$1" \n(SS
..
.\" 一级子选项开始, 结束用 .RE
.de RSs
.RS 10
..
.\" 二级子选项开始
.de RSss
.PD 0
.RS \n(SS+3
..
.\" 二级子选项结束
.de REss
.RE
.PD 1
..
.
.\" --------------------------------------------------------------------------
.\" 名称
.\" --------------------------------------------------------------------------
.
.TH MPlayer 1 "2009-03-25" "MPlayer 项目" "电影播放器"
.
.SH 名称
mplayer  \- 影视播放器
.br
mencoder \- 影视编解码器
.
.\" --------------------------------------------------------------------------
.\" 概要
.\" --------------------------------------------------------------------------
.
.SH 总览
.na
.nh
.B mplayer
[选项] [文件|URL|播放列表|\-]
.
.br
.B mplayer
[选项] 文件1
[分选项] [文件2] [分选项]
.
.br
.B mplayer
[选项]
{文件和选项组}
[组专用的分选项]
.
.br
.B mplayer
[dvd|dvdnav]://[标题|[开始标题]\-结束标题][/设备]
[选项]
.
.br
.B mplayer
vcd://曲目[/设备]
.
.br
.B mplayer
tv://[频道][/输入ID]
[选项]
.
.br
.B mplayer
radio://[频道|频率][/捕捉设备]
[选项]
.
.br
.B mplayer
pvr://
[选项]
.
.br
.B mplayer
dvb://[卡号@]频道
[选项]
.
.br
.B mplayer
mf://[文件掩码|@列表文件]
[\-mf 选项] [选项]
.
.br
.B mplayer
[cdda|cddb]://曲目[\-结束曲目][:速度][/设备]
[选项]
.
.br
.B mplayer
cue://文件[:曲目]
[选项]
.
.br
.B mplayer
[file|mms[t]|http|http_proxy|rt[s]p|ftp|udp|unsv|icyx|noicyx|smb]://
[用户名:密码@]URL[:端口] [选项]
.
.br
.B mplayer
sdp://文件
[选项]
.
.br
.B mplayer
mpst://主机[:端口]/URL
[选项]
.
.br
.B mplayer
tivo://主机/[list|llist|fsid]
[选项]
.
.br
.B gmplayer
[选项]
[\-skin\ 外观模板]
.
.br
.B mencoder
[选项] 文件
[文件|URL|\-] [\-o 文件 | file://文件 | smb://[用户名:密码@]主机/文件路径]
.
.br
.B mencoder
[选项] 文件1
[分选项] [文件2] [分选项]
.ad
.hy
.
.\" --------------------------------------------------------------------------
.\" 描述
.\" --------------------------------------------------------------------------
.
.SH 描述
.B mplayer
是一个 LINUX 下的电影播放器 (也能运行在许多其它的平台和 CPU 架构, 请参阅文档)。
通过许多原生的和可执行的编解码器的支持, 它能播放绝大部分的 MPEG/\:VOB, AVI,
ASF/\:WMA/\:WMV, RM, QT/\:MOV/\:MP4, Ogg/\:OGM, MKV, VIVO, FLI, NuppelVideo,
yuv4mpeg, FILM 和 RoQ 文件。
你还能观看 VCD、SVCD、DVD、3ivx、DivX 3/4/5、WMV 甚至 H.264 格式的电影。
.PP
MPlayer 广泛地支持音视频输出驱动。
它不仅可以使用 X11, Xv, DGA, OpenGL, SVGAlib, fbdev, AAlib, libcaca,
DirectFB, Quartz, Mac OS X CoreVideo, 也能使用 GGI, SDL (及它们的所有驱动),
所有 VESA 兼容显卡上的 VESA (甚至不需要 X11), 某些低级的
显卡相关的驱动 (如 Matrox, 3dfx 及 ATI) 和一些硬件 MPEG 解码器卡,
比如 Siemens DVB, Hauppauge PVR (IVTV), DXR2 和 DXR3/\:Hollywood+。
它们中绝大多数支持软件或硬件缩放, 所以你可以享受全屏电影。
.PP
MPlayer 具有 OSD(屏上显示) 功能显示状态信息, 有
抗锯齿带阴影的漂亮大字幕和键盘控制的可视反馈。
支持的字体包括欧洲语种/\:ISO8859\-1,2 (匈牙利语, 英语, 捷克语等等),
西里尔语和韩语, 可以播放 12 种格式的字幕文件 (MicroDVD, SubRip, OGM,
SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS
及我们自己的: MPsub) 和 DVD 字幕 (SPU 流, VOBsub 及隐藏式 CC 字幕)。
.PP
.B mencoder
(MPlayer 的电影编解码器) 是一个简单的电影编解码器, 其设计为将
MPlayer 可播放的电影(见上所述)编码成其他的 MPlayer 可播放格式(见下面)。
其编码成的 MPEG-4 (DivX/Xvid), 是 libavcodec 编解码器的一种和
使用 1, 2 或 3-passes(通) 的 PCM/\:MP3/\:VBRMP3 音频。
此外还具有流复制的能力, 拥有强大的(过滤器)插件系统(裁剪,
扩展, 反转, 后处理, 旋转, 缩放, 降噪声, RGB/\:YUV 转换)等。
.PP
.B gmplayer
其与 MPlayer 具有相同的选项，然而这些选项可能无法全部正常工作，因为与经由 GUI 所作
的配置（保存在 gui.conf 中）有冲突。
特别是有些选项的设置可能被 gui.conf 中的设置覆盖，而另一些可能最终永久保存在
gui.conf 中。
.PP
本手册页最后有用法示例, 能让你迅速上手。
.PP
.B 也请参阅 HTML 文档!
.
.
.\" --------------------------------------------------------------------------
.\" 交互式控制
.\" --------------------------------------------------------------------------
.
.SH "交互式控制"
MPlayer 有个完全可配置的, 命令驱动的控制层,
让你通过键盘, 鼠标, 操纵杆或遥控器(需使用 LIRC)来控制 MPlayer。
参见 \-input 选项定制控制层的方法。
.
.TP
.B 键盘控制
.PD 0
.RS
.IPs "<\- 和 \->"
后退/\:快进 10 秒。
.IPs "up 和 down"
快进/\:后退 1 分。
.IPs "pgup 和 pgdown"
快进/\:后退 10 分。
.IPs "[ 和 ]"
减少/增加当前回放速度 10%。
.IPs "{ 和 }"
减半/加倍当前回放速度。
.IPs "backspace"
重置正常回放速度.
.IPs "< 和 >"
在播放列表中后退/\:快进。
.IPs "ENTER"
在播放列表中快进, 甚至越过末尾。
.IPs "HOME 和 END"
下一个/\:前一个父列表中的播放树项。
.IPs "INS 和 DEL (仅用于 ASX 播放列表)"
下一个/\:前一个供选择的源。
.IPs "p / SPACE"
暂停 (再按取消暂停)。
.IPs ".\ \ \ \ "
步进。
按一下暂停回放, 每按一下就播放一帧(直到按其它键取消步进)。
.IPs "q / ESC"
停止播放和退出。
.IPs "U\ \ \ \ "
暂停播放（并且当未使用 \-idle 时退出）。
.IPs "+ 和 \-"
调整音频延迟增加/减少 0.1 秒。
.IPs "/ 和 *"
降低/\:提高音量。
.IPs "9 和 0"
降低/\:提高音量。
.IPs "( 和 )"
调整有利用于左/\:右声道的声音平衡。
.IPs "m\ \ \ \ "
静音。
.IPs "_ (仅用于 MPEG-TS、AVI 和 libav 库格式)"
循环可用的像轨。
.IPs "# (仅用于 DVD、MPEG、Matroska、AVI 和 libav 库格式)"
循环可用的音轨。
.IPs "TAB（仅用于 MPEG-TS 和 libav 库格式）"
循环可用的节目。
.IPs "f\ \ \ \ "
切换全屏 (也请参见 \-fs)。
.IPs "T\ \ \ \ "
切换顶置 (也请参见 \-ontop)。
.IPs "w 和 e"
降低/\:提高摇移范围。
.IPs "o\ \ \ \ "
循环 OSD 状态: 无 / 搜索条 / 搜索条 + 计时器 / 搜索条 + 计时器 + 总时间。
.IPs "d\ \ \ \ "
循环丢帧状态: 无 / 跳过显示 / 跳过解码。
(请参见 \-framedrop 和 \-hardframedrop)。
.IPs "v\ \ \ \ "
切换显示字幕。
.IPs "j\ \ \ \ "
循环可用的字幕。
.IPs "y 和 g"
在字幕列表中步进/步退。
.IPs "F\ \ \ \ "
切换显示 "锁定的字幕"。
.IPs "a\ \ \ \ "
切换对齐字幕: 上 / 中 / 下。
.IPs "x 和 z"
调整字幕延迟增加/减少 0.1 秒。
.IPs "r 和 t"
上/下调整字幕位置。
.IPs "i (仅用于 \-edlout 模式)"
设置 EDL 的开头或末尾并写入指定的文件。
.IPs "s (仅用于 \-vf 截屏)"
截屏。
.IPs "S (仅用于 \-vf 截屏)"
开始/停止截屏。
.IPs "I\ \ \ \ "
用 OSD 显示文件名。
.IPs "! 和 @"
寻到前一章节/后一章节的开始处。
.IPs "D（仅用于\-vo xvmc, \-vo vdpau，\-vf yadif, \-vf kerndeint）"
激活/禁用解隔行扫描过滤器。
.IPs "A"
在可用的 DVD 视角间循环切换。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于硬件加速视频输出(xv, (x)vidix, (x)mga, 等),
软件均衡器(\-vf eq or \-vf eq2), 或者色调过滤器(\-vf hue)。)
.RE
.PP
.PD 0
.RS
.IPs "1 和 2"
调整对比度。
.IPs "3 和 4"
调整亮度。
.IPs "5 和 6"
调整色调。
.IPs "7 和 8"
调整饱和度。
.RE
.PD 1
.PP
.RS
（以下按键仅在使用 quartz 或 corevideo 视频输出驱动时有效。）
.RE
.PP
.PD 0
.RS
.IPs "command + 0"
半尺寸。
.IPs "command + 1"
原始尺寸。
.IPs "command + 2"
双倍尺寸。
.IPs "command + f"
切换全屏 (也请参见 \-fs)。
.IPs "command + [ 和 command + ]"
设置窗口的 alpha。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于 sdl 视频输出驱动。)
.RE
.PP
.PD 0
.RS
.IPs "c\ \ \ \ "
切换可用的全屏模式。
.IPs "n\ \ \ \ "
原始尺寸。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于多媒体键盘。)
.RE
.PP
.PD 0
.RS
.IPs PAUSE
暂停。
.IPs "STOP\ "
停止并退出。
.IPs "PREVIOUS 和 NEXT"
后退/\:快进 1 分。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于已编译支持 GUI 并优先于以前的定义。)
.RE
.PP
.PD 0
.RS
.IPs ENTER
开始播放。
.IPs "ESC\ \ "
停止播放。
.IPs "l\ \ \ \ "
加载文件。
.IPs "t\ \ \ \ "
加载字幕。
.IPs "c\ \ \ \ "
打开皮肤浏览器。
.IPs "p\ \ \ \ "
打开播放列表。
.IPs "r\ \ \ \ "
打开首选项。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于已编译支持 TV 或 DVB 的输入并优先于以前的定义。)
.RE
.PP
.PD 0
.RS
.IPs "h 和 k"
选择上一个/\:下一个频道。
.IPs "n\ \ \ \ "
改变制式。
.IPs "u\ \ \ \ "
改变频道列表。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于已编译支持 dvdnav: 用于导航菜单)
.RE
.PP
.PD 0
.RS
.IPs "keypad 8"
选择上。
.IPs "keypad 2"
选择下。
.IPs "keypad 4"
选择左。
.IPs "keypad 6"
选择右。
.IPs "keypad 5"
返回主菜单。
.IPs "keypad 7"
返回最近的菜单(先后次序是: 章节->标题->根)。
.IPs "keypad ENTER"
确定。
.RE
.PD 1
.PP
.RS
.
（以下按键只有当编译时启用对于电视字幕的支持（teletext）时才有效：这些按键用于控制电
视字幕，数据可能来自模拟电视输入或是 MPEG 传输流。）
.RE
.PP
.PD 0
.RS
.IPs "X\\\\"
打开/\:关闭电视字幕。
.IPs "Q和W"
切换至下一个/\:上一个电视字幕页面。
.RE
.PD 1
.PP
.RS
.
.TP
.B 鼠标控制
.PD 0
.RS
.IPs "button 3 和 button 4"
后退/\:快进 1 分。
.IPs "button 5 和 button 6"
降低/\:提高音量。
.RE
.PD 1
.
.TP
.B 操纵杆
.PD 0
.RS
.IPs "left 和 right"
后退/\:快进 10 秒。
.IPs "up 和 down"
快进/\:后退 1 分。
.IPs "button 1"
暂停。
.IPs "button 2"
循环 OSD 状态: 无 / 搜索条 / 搜索条 + 计时器 / 搜索条 + 计时器 + 总时间。
.IPs "button 3 和 button 4"
降低/\:提高音量。
.RE
.PD 1
.
.
.\" --------------------------------------------------------------------------
.\" 用法
.\" --------------------------------------------------------------------------
.
.SH "用法"
每个 "flag" 选项有个相反的 "noflag" 选项对应, 如: 选项 \-fs 相反的是 \-nofs。
.PP
如果某选项标为: (仅用于 XXX), 就仅适用于与选项 XXX 联合使用或者已编译进 XXX。
.PP
.I 注意:
子选项解析器(例如用于 \-ao pcm 子选项)支持
一种特殊的字符串转义(string-escaping)意欲和外部的 GUI 一起使用。
.br
其格式如下:
.br
%n%string_of_length_n
.br
.I 示例:
.br
mplayer \-ao pcm:file=%10%C:test.wav test.avi
.br
或在脚本中:
.br
mplayer \-ao pcm:file=%`expr length "$NAME"`%"$NAME" test.avi
.PP
.
.\" --------------------------------------------------------------------------
.\" 配置文件
.\" --------------------------------------------------------------------------
.
.SH "配置文件"
你可以把所有选项放在配置文件中, 每次 MPlayer/MEncoder 运行时都会读取它们。
系统范围的配置文件 "mplayer.conf" 位于你的配置目录
(例如: /etc/\:mplayer 或者 /usr/\:local/\:etc/\:mplayer)中,
用户指定的配置文件是 "~/\:.mplayer/\:config"。
MEncoder 的配置文件是 "mencoder.conf" 位于你的配置目录
(例如: /etc/\:mplayer 或者 /usr/\:local/\:etc/\:mplayer)中,
用户指定的配置文件是 "~/\:.mplayer/\:mencoder.conf"。
用户指定的选项优先于系统范围的选项, 而命令行选项优先于以上两者。
配置文件的语法是 "option=<值>", 任何 "#" 后面的都认为是注释。
启用没有参数值的选项可以把参数设为 "yes" 或者 "1" 或者 "true",
而如果要停用就把它们设置为 "no" 或者 "0" 或者 "false"。
甚至子选项也可以如此设定选项。
.PP
你也可以编写每个媒体文件专用的配置文件。
如果要给名叫‘movie.avi’的一个文件设置一个配置文件，则创建一个名为‘movie.avi.conf’的文件，
其中存放了该媒体文件专用的选项，并将其放到 ~/.mplayer/。
只要给出了 \-use\-filedir\-conf 选项（或是通行命令行，或是在全局配置文件中），你也可以把配置文
件放到与所播放的媒体文件相同的目录下。
如果在媒体文件所在目录下找到其专用的配置文件，则不会从 ~/.maplyer 目录下加载任何媒体文件专用的
配置。
另外，\-use\-filedir\-conf 选项启用了目录专用的配置文件。
对于该选项，MPlayer 首先尝试所播放文件的目录下加载 mplayer.conf，然后尝试加载任何存在的媒体文件
专用的配置。
.PP
.I MPLAYER 配置文件示例:
.sp 1
.nf
# 默认使用 Matrox 驱动。
vo=xmga
# 我喜欢在看片子的时候练习倒立。
flip=yes
# 解码/编码多个 PNG 文件,
# 开始于 mf://文件掩码
mf=type=png:fps=25
# 怪异的负片图像好酷。
vf=eq2=1.0:\-0.8
.fi
.PP
.I "MENCODER 配置文件示例:"
.sp 1
.nf
# 产生 MEncoder 输出到默认的文件名。
o=encoded.avi
# 下面四行使 mencoder tv:// 立刻开始捕捉。
oac=pcm=yes
ovc=lavc=yes
lavcopts=vcodec=mjpeg
tv=driver=v4l2:input=1:width=768:height=576:device=/dev/video0:audiorate=48000
# 较复杂的默认编码选项设置
lavcopts=vcodec=mpeg4:autoaspect=1
lameopts=aq=2:vbr=4
ovc=lavc=1
oac=lavc=1
passlogfile=pass1stats.log
noautoexpand=1
subfont-autoscale=3
subfont-osd-scale=6
subfont-text-scale=4
subalign=2
subpos=96
spuaa=20
.fi
.
.\" --------------------------------------------------------------------------
.\" 配置集
.\" --------------------------------------------------------------------------
.
.SH "配置集"
为了方便操作不同的配置文件, 可以在配置文件中定义配置集。
配置集以放在方括号中的名称开始, 如: "[my-profile]"。
所有跟随的选项成为配置集的一部分。
描述(通过 \-profile help 显示)定义于 profile-desc 选项。
要结束该配置集, 使用别的名称开始即可
或使用配置集名称 "default" 继续正常的选项。
.fi
.PP
.I "MPLAYER 配置集示例："
.sp 1
.nf

[protocol.dvd]
profile-desc="用于 dvd:// 媒体流的配置集"
vf=pp=hb/vb/dr/al/fd
alang=en

[protocol.dvdnav]
profile-desc="用于 dvdnav:// 媒体流的配置集"
profile=protocol.dvd
mouse-movements=yes
nocache=yes

[extension.flv]
profile-desc="用于 .flv 文件的配置集"
flip=yes

[vo.pnm]
outdir=/tmp

[ao.alsa]
device=spdif
.fi
.PP
.I "MENCODER 配置集示例："
.sp 1
.nf

[mpeg4]
profile-desc="MPEG4 编码"
ovc=lacv=yes
lavcopts=vcodec=mpeg4:vbitrate=1200

[mpeg4\-hq]
profile-desc="高质量 MPEG4 编码"
profile=mpeg4
lavcopts=mbd=2:trell=yes:v4mv=yes
.fi
.
.\" --------------------------------------------------------------------------
.\" 选项
.\" --------------------------------------------------------------------------
.
.SH "通用选项"
.
.TP
.B \-codecs\-file <文件名>（也请参见 \-afm，\-ac，\-vfm，\-vc）
重载标准的搜索路径并使用指定的文件代替内置的 codecs.conf。
.
.TP
.B \-include <配置文件>
指定配置文件在默认的配置文件后面解析。
.
.TP
.B \-list\-options
打印所有可用的选项。
.
.TP
.B \-msgcharset <字符集>
转换控制台消息为指定的字符集(默认是自动侦测: autodetect)。
文字的字符集编码用选项 \-\-charset 指定配置。
设置为 "noconv" 以停用转换 (为了如: iconv 问题)。
.br
.I 注意:
选项在命令行解析完成后生效。
环境变量 MPLAYER_CHARSET 能帮你去除开头几行混乱的输出。
.
.TP
.B \-msgcolor
在支持 ANSI 彩色标准的终端上启用彩色控制屏幕。
.
.TP
.B \-msglevel <all=<级别>:<模块>=<级别>:...>
直接对各个模块控制冗赘度。
此 "all" 模块改变所有模块(虽然没有在命令行中显式指定)的冗赘级别。
查看所有模块的列表请参见于 "\-msglevel help"。
.br
.I 注意:
有些消息在解析命令行之前就打印出来，因而不受 \-msglevel 影响。
要控制这些消息的话，你得使用 MPLAYER_VERBOSE 环境变量，参见下面的解释以获取详细信息。
.br
可用级别:
.PD 0
.RSs
.IPs "\-1"
完全沉默
.IPs " 0"
仅致命消息
.IPs " 1"
错误消息
.IPs " 2"
警告消息
.IPs " 3"
简短提示
.IPs " 4"
信息消息
.IPs " 5"
状态消息（默认值）
.IPs " 6"
冗赘消息
.IPs " 7"
调试级别 2
.IPs " 8"
调试级别 3
.IPs " 9"
调试级别 4
.RE
.PD 1
.
.TP
.B \-msgmodule
在每条控制屏幕消息前加上模块名。
.
.TP
.B \-noconfig <若干选项>
不解析所选的配置文件。
.br
.I 注意：
如果命令行中指定了 \-include 或 \-use\-filedir\-conf 选项，
那么这些选项将优先生效。
.sp 1
可用选项有：
.PD 0
.RSs
.IPs "all\ \ "
所有的配置文件
.IPs "gui（仅仅是 GUI）"
GUI 的配置文件
.IPs system
系统配置文件
.IPs "user\ "
用户配置文件
.RE
.PD 1
.
.TP
.B "\-quiet\ "
使得控制台消息少输出; 特别地, 阻止状态行
(即 A:   0.7 V:   0.6 A-V:  0.068 ...)的显示。
对慢机器或者不能正确处理回车符(即 \\r)的旧机器特别有用。
.
.TP
.B \-priority <优先>（仅适用于 Windows 和 OS/2）
根据 Windows 和 OS/2 下可用的预定义优先级设置 MPlayer 的进程优先级。
可能的 <优先> 值为:
.RSs
idle|belownormal|normal|abovenormal|high|realtime
.RE
.sp 1
.RS
.I 警告:
使用 realtime(实时) 优先级会引起系统锁住。
.RE
.
.TP
.B \-profile <配置轮廓1,配置轮廓2,...>
使用给定的配置轮廓, \-profile help 显示定义的配置轮廓列表。
.
.TP
.B \-really\-quiet (也请参见 \-quiet)
显示比 \-quiet 更少的输出和状态信息。
同时禁止图形界面错误消息对话框。
.
.TP
.B \-show\-profile <配置轮廓>
显示配置轮廓的描述和内容。
.
.TP
.B \-use\-filedir\-conf
在文件播放时的相同目录之下寻找该特定文件的配置文件。
.br
.I 警告:
播放未经信任的媒体可能有危险。
.
.TP
.B "\-v\ \ \ \ \ "
提高冗赘级别, 对命令行中发现的各个 \-v 提高一级。
.
.
.
.SH "播放器选项（仅适用于MPLAYER）"
.
.TP
.B \-autoq <质量> (和 \-vf [s]pp 一起使用)
依据可用的 CPU 空闲时间动态改变后期处理的级别。
你指定的数字可能是已使用中的最高级别。通常你可以使用有点高的级别数字。
为此你必须使用不带参数的 \-vf [s]pp 选项。
.
.TP
.B \-autosync <因子>
基于音频延迟的检测逐步调整 A/V 同步。
指定 \-autosync 0, 也就是默认值, 将导致帧计时完全基于音频延迟的检测。
指定 \-autosync 1 也是一样, 但会微妙地改变所使用的 A/V 修正算法。
对那些视频帧率不均匀, 但用 \-nosound 可以正常播放的电影,
设置大于 1 的整数值一般会有所帮助。
这个值越大, 计时方法越接近于 \-nosound。
对于某些音频延迟检测实现不完善的声卡驱动, 试试用 \-autosync\ 30 来平滑此问题。
使用这个值时, 如果出现 A/V 同步大偏移, 只需要 1, 2 秒时间就可以搞定。
对于所有的声卡驱动, 对突然的 A/V 偏移, 在反应时间上有延迟,
这应该是打开此选项的唯一副作用。
.
.TP
.B \-benchmark
在终端打印一些回放后的 CPU 使用率和丢帧数的统计信息。
与 \-nosound 和 \-vo null 联合使用可用来仅仅评测视频编解码器.
.br
.I 注意:
使用此参数仅仅回放视频时, MPlayer 也将忽略帧持续期(frame duration)
(你可以认为那是不定帧率)。
.
.TP
.B \-colorkey <号码>
改变 colorkey 为你所选的 RGB 值。
0x000000 是黑色而 0xffffff 是白色。
仅被视频输出驱动 cvidix, fbdev, svga, vesa, winvidix, xmga, xvidix,
xover, xv (参见 \-vo xv:ck), xvmc (参见 \-vo xv:ck) 和 directx 支持。
.
.TP
.B \-nocolorkey
停用 colorkeying。
仅被视频输出驱动 cvidix, fbdev, svga, vesa, winvidix, xmga, xvidix,
xover, xv (参见 \-vo xv:ck), xvmc (参见 \-vo xv:ck) 和 directx 支持。
.
.TP
.B \-correct\-pts（处于测试阶段）
切换 MPlayer 到试验模式,
其中视频帧的时戳计算不同, 且支持视频过滤器添加新的帧或修改已有的时戳。
可以看到更精确的时戳, 例如通过 \-ass 选项修改播放字幕与镜头同步。
没有 \-correct\-pts, 字幕同步典型地会被某些帧关闭。
此选项不能与某些分路器和编解码器一起正常工作。
.
.TP
.B \-crash\-debug（调试代码）
一旦崩溃或 SIGTRAP 自动联上 gdb 调试程序。
此支持必须已编译进配置 \-\-enable\-crash\-debug。
.
.TP
.B \-doubleclick\-time
以毫秒为单位的时间值，用以判定两次连续的按键动作是否为一次双击动作（默认值：
300）。
设为0则让你的窗体系统判断什么样动作的是双击（仅当 \-vo directx 时）。
.br
.I 注意：
你会体验到不同的效果，这取决于你绑定了 MOUSE_BTN0_DBL 还是
MOUSE_BTN0\-MOUSE_BTN0_DBL。
.
.TP
.B \-edlout <文件名>
新建文件并写入 EDL(编辑决定列表) 记录。
回放时, 用户击 "i" 键标记跳过块的开始结束处。
这提供了用户一个以后能精调 EDL (记录)项的开始点。
详情请参见 http://www.mplayerhq.hu/\:DOCS/\:HTML/\:en/\:edl.html。
.
.TP
.B \-enqueue (仅用于 GUI)
将命令行中给定的文件排入播放列表但不立刻播放。
.
.TP
.B \-fixed\-vo
为多个文件锁定一个固定的视频系统 (对所有的文件(反)初始化仅一次)。
这样, 对所有文件只打开一个窗口。
目前 fixed-vo 兼容的驱动有: gl, gl2, mga, svga, x11, xmga,
xv, xvidix 和 dfbmga。
.
.TP
.B \-framedrop（也请参见 \-hardframedrop，未使用 \-nocorrect\-pts 时只可用于实验）
跳过显示一些帧从而在慢的机器上保持 A/V 同步。
视频滤镜不会应用到这些帧上。对于 B-帧 甚至解码也完全跳过。
.
.TP
.B \-(no)gui
启用或停用 GUI 接口(默认取决于可执行文件名)。
仅能作为命令行第一个参数。不能作为选项写入配置文件。
.
.TP
.B \-h, \-help, \-\-help
显示简短的选项概要。
.
.TP
.B \-hardframedrop（未使用 \-nocorrect\-pts 时只可用于实验）
更加密集的丢帧（中断解码过程）。将导致图像失真！
注意，libmpeg2 解码器尤其可能在使用该选项后崩溃，所以请考虑使用
“\-vc ffmpeg12,”。
.
.TP
.B \-heartbeat\-cmd
在播放的时候每隔 30 秒通过 system() 调用（即通过 shell 调用）执行的命令。
.sp 1
.I 注意：
MPlayer 执行此命令时不加以检查，所以你有责任确保该命令不造成任何安全问题（例
如，如果“.”就像在 Windows 中那样是在你的路径中，则确保使用完整路径）。
并且该选项只有在播放视频时有效（即没有使用 \-novideo，但可以使用 \-vo null）。
.sp 1
该选项可能被“误用”以禁用不提供对于适当的 X API 接口的支持的屏幕保护程序。
如果你觉得这太复杂了，请要求屏幕保护程序的作者提供对于适当的 X API 的支持。
（另参见 \-stop\-xscreensaver）
.sp 1
.I 用于 xscreensaver 的示例：
mplayer \-heartbeat\-cmd "xscreensaver\-command \-deactivate" file
.sp 1
.I 用于 GNOME screensaver 的示例：
mplayer \-heartbeat\-cmd "gnome\-screensaver\-command \-p" file
.RE
.PD 1
.
.TP
.B \-identify
是 \-msglevel identify=4 的简写形式。使用便于解析的格式显示文件参数。
同时打印更为详细的关于字幕和音轨的语言与 ID 号的信息。
在某些情形下，使用 \-msglevel identify=6 能得到更多的信息。
例如，对于一张 DVD 碟片，该选项能列出每个标题的章节和时长，以及一个碟片 ID 号。
将此选项与 \-frames 0 一起使用能禁止所有输出。
封装脚本 TOOLS/\:midentify.sh 禁止 MPlayer 的其它输出，
并且（很可能）shellescapes（脚本转义）了文件名。
.
.TP
.B \-idle (也请参见 \-slave)
当没有文件播放时, 让 MPlayer 空闲等待而不是退出。
一般在 slave 模式时有用, 能通过输入命令控制 MPlayer。
.
.TP
.B \-input <命令>
此选项可以用来配置输入系统的某些部分。路径相对于 ~/.mplayer/。
.br
.I 注意:
自动重复功能目前只有游戏操纵杆支持。
.sp 1
可用的命令有:
.sp 1
.PD 0
.RSs
.IPs conf=<文件名>
指定输入配置文件而不是默认的 ~/\:.mplayer/\:input.conf。
如果没有给出完全路径名, 将假设是 ~/\:.mplayer/\:<文件名>。
.IPs ar-dev=<设备>
用作为苹果 IR 遥控器的设置（默认值是自动侦测，仅用于 Linux）。
.IPs ar-delay
在开始自动重复一个键之前等待多少毫秒 (0 代表停用)。
.IPs ar-rate
自动重复数是每秒重复多少次按键。
.IPs (no)default-bindings
默认情况下使用 MPlayer 自带的键位设置。
.IPs keylist
列出所有可以被绑定于命令的键。
.IPs cmdlist
列出所有可以被绑定于键的命令。
.IPs js-dev
指定使用的操纵杆设备(默认是: /dev/\:input/\:js0)。
.IPs file=<文件名>
从给定文件中读取命令。
一般结合 FIFO 时有用。
.br
.I 注意:
当给定文件是 FIFO 时 MPlayer 打开两个端头, 这样你就可以做
几次 ‘echo "seek 10" > mp_pipe’ 而管道仍保持有效。
.RE
.PD 1
.
.TP
.B \-key\-fifo\-size <2\-65000>
指定 FIFO 大小供缓冲按键事件（默认值：7）。
n 大小的 FIFO 能容纳 (n\-1) 缓冲事件。
如果太小会丢失一些事件
(导致 "鼠标键卡住" 或类似效果)。
如果太大, MPlayer 处理缓冲的事件时可能看上去挂住了。
为得到同以前一样的行为效果而引入此选项,
对 Linux 设置为 2 或对 Windows 为 1024。
.
.TP
.B \-lircconf <文件名> (仅适用于 LIRC)
为 LIRC 指定配置文件(默认是: ~/.lircrc)。
.
.TP
.B \-list\-properties
打印可用的属性列表。
.
.TP
.B \-loop <数>
重复回放电影 <数> 遍。
0 表示重复不断。
.
.TP
.B \-menu （仅用于OSD菜单）
打开 OSD 菜单支持。.
.
.TP
.B \-menu\-cfg <文件名> （仅用于OSD菜单）
使用另一种的 menu.conf。
.
.TP
.B \-menu\-chroot <路径>（仅用于OSD菜单）
将文件选择菜单的根目录更改为一个特定位置。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs \-menu\-chroot /home"
将限制文件选择菜单查找/\:home以及其下的目录（即不可能访问 /，但可以访问
/home/user_name）。
.RE
.PD 1
.
.TP
.B \-menu\-keepdir（仅用于OSD菜单）
文件浏览器从最近浏览位置开始浏览，而不是当前目录。
.
.TP
.B \-menu\-root <参数值> (仅适用于 OSD 菜单)
指定主菜单。
.
.TP
.B \-menu\-startup (仅适用于 OSD 菜单)
在 MPlayer 启动时显示主菜单。
.
.TP
.B \-mouse\-movements
允许 MPlayer 接收来自视频输出驱动的指针事件。
必须选择 DVD 菜单中的按钮。
支持基于 X11 的视频输出（x11、xv、xvmc等）以及 gl、gl2、direct3d 和 corevideo 的视频输出
.
.TP
.B \-noar
关闭对于 AppleIR 的支持。
.
.TP
.B \-noconsolecontrols
阻止 MPlayer 读取标准输入的键盘事件。
读取标准输入的数据时有用。命令行中发现 \- 会自动启用。
会遇到不得不手动设置的情形, 比如你
打开 /dev/\:stdin (或者你系统中等价的设备), 在播放列表中使用 stdin
或者意欲以后通过 slave 命令的 loadfile 或 loadlist 从 stdin 读取。
.
.TP
.B \-nojoystick
关闭支持操纵杆。
.
.TP
.B \-nolirc
关闭支持 LIRC。
.
.TP
.B \-nomouseinput
停用鼠标键 按/\:放 输入 (mozplayerxp 的上下文菜单依赖此选项)。
.
.TP
.B \-rtc (仅适用 RTC)
打开使用 Linux 的 RTC (实时钟 \- /dev/\:rtc) 作为计时机制。
唤醒过程每 1/1024 秒核查当前时间。
除非现代 Linux 内核配置为桌面应用, 因为当使用正常的定时睡眠时,
已唤醒相似精度的过程。
.
.TP
.B \-playing\-msg <字符串>
开始回放前打印出字符串。
支持以下的扩展:
.RSs
.IPs ${NAME}
扩展为属性 NAME 的值。
.IPs ?(NAME:TEXT)
仅当属性 NAME 可用时扩展 TEXT（文字）。
.IPs ?(!NAME:TEXT)
仅当属性 NAME 不可用时扩展 TEXT（文字）。
Expand TEXT only if the property NAME is not available.
.RE
.
.TP
.B \-playlist <文件名>
根据播放列表播放文件(ASX, Winamp, SMIL, 或者
one-file-per-line(每行一个文件) 格式)。
.br
.I 注意:
此选项作为条目仅应用于播放列表的元素以后, 会找到选项。
.br
FIXME: 需要彻底理清并建立文档。
.
.TP
.B \-rtc\-device <设备>
为 RTC 计时使用指定的设备。
.
.TP
.B \-shuffle
以随机顺序播放文件。
.
.TP
.B \-skin <名> (仅用于 GUI)
从默认皮肤目录
/usr/\:local/\:share/\:mplayer/\:skins/\: 或 ~/.mplayer/\:skins/
下的, 作为参数的给定目录中装载皮肤。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-skin fittyfene"
尝试 /usr/\:local/\:share/\:mplayer/\:skins/\:fittyfene
然后是 ~/.mplayer/\:skins/\:fittyfene。
.RE
.PD 1
.
.TP
.B \-slave (也请参见 \-input)
切换到 slave 模式, MPlayer 为其他程序在后台运行。
MPlayer 从标准输入读取以新行 (\\n) 分隔开的命令行,
而不再截获键盘事件。
.br
.I 注意:
请参见 \-input cmdlist 的命令列表和 DOCS/tech/slave.txt 中的描述。
另外，该选项并非用来禁用其它的输入，例如通过视频窗口。要使用其它方法实现那种效果，例如
\-input nodefault\-binds:conf=/dev/null。
.
.TP
.B \-softsleep
通过不断核查当前时间来测定帧的时间,
而不是请求内核在适当的时刻唤醒 MPlayer。
对于内核计时器精度不高且不能使用 RTC 时有用, 代价是较高的 CPU 消耗。
.
.TP
.B \-sstep <数>
每帧后跳过 <数> 秒。
影片的正常帧率仍被保留, 所以回放加速了。
既然 MPlayer 仅能搜寻到下一个 keyframe, 加速过程可能不精准。
.
.
.
.SH "分离器/媒体流选项"
.
.TP
.B \-a52drc <级别>
选择 AC-3 音频流的动态范围压缩(DRC)级别。
<级别> 是 0 到 1 的浮点数, 其中 0 表示无压缩,
(默认值) 1 表示全压缩 (使得响亮的通路更安静或相反)。
此选项仅当 AC-3 流包含所需范围的压缩信息时显示效果。
.
.TP
.B \-aid <代码> (也请参见 \-alang)
选择音频频道 (MPEG: 0\-31, AVI/\:OGM: 1\-99, ASF/\:RM: 0\-127,
VOB(AC-3): 128\-159, VOB(LPCM): 160\-191, MPEG-TS 17\-8190)。
MPlayer 在 verbose (\-v) 模式下会打印可用的音频代码。
当播放 MPEG-TS 流时, MPlayer/\:MEncoder 用第一个程序
播放已选择的(如果有的话)音频流。
.
.TP
.B \-ausid <代码>（也请参见 \-alang）
选择子音频流的频道。
当前有效的取值范围为 0x55..0x75，并且当由原生流分解器（而不是 libavformat）时处理时，
只适用于MPEG-TS。
由于媒体类型信息在媒体流中的嵌入方式有异或其在流中缺失，媒体类型可能无法正确识别，但当
多个子流存在时，音频流会正确分解出来。
当使用 \-identify 运行时，MPlayer 打印出可用的子流的代码。
.
.TP
.B \-alang <语言代码[,语言代码,...]> (也请参见 \-aid)
指定使用音频语言的优先级列表。
不同的容器格式使用不同的语言代号。DVDs 使用 ISO 639\-1 的
两字符语言代号, Matroska、MPEG-TS 和 NUT 使用 ISO 639\-2 的
三字符语言代号, 而 OGM 使用任意格式标识符。
MPlayer 在 verbose (\-v) 模式下会打印可用的语言。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "mplayer dvd://1 \-alang hu,en"
选择 DVD 上的匈牙利语音轨播放而英语在没有匈牙利语时备用。
.IPs "mplayer \-alang jpn example.mkv"
播放日语 Matroska 文件。
.RE
.PD 1
.
.TP
.B \-audio\-demuxer <[+]名称> (仅用于 \-audiofile)
锁定用于 \-audiofile 的音频分路器类型。
在名称前使用 "+" 锁定类型, 跳过某些核查!
按照 \-audio\-demuxer help 打印出来的指定分路器类型。
为了向后兼容, 也接受定义在 libmpdemux/\:demuxer.h 的分路器标识。
\-audio\-demuxer audio 或 \-audio\-demuxer 17 锁定 MP3。
.
.TP
.B \-audiofile <文件名>
在看电影时播放外部音频文件(WAV, MP3 或 Ogg Vorbis)。
.
.TP
.B \-audiofile\-cache <千字节>
对 \-audiofile 的文件流启用缓存, 使用指定大小的内存。
.
.TP
.B \-reuse\-socket （仅适用于udp://）
允许SOCKET在关闭后立即被其它进程重新利用。
.
.TP
.B \-bandwidth <字节值> (仅适用于网络)
指定网络流的最大带宽(用于服务器可以以不同带宽传送内容的情况)。
当你以慢速连接观看现场流媒体时有用。
对于 Real RTSP 流, 也用来设置最大的传送带宽
以容许较快的缓存填充和流转储。
.
.TP
.B \-cache <千字节>
此选项指定用多少内存(以 kBytes 为单位)作为播放文件或 URL 的预缓冲。
对速度慢的媒体特别有用。
.
.TP
.B \-nocache
关闭缓冲。
.
.TP
.B \-cache\-min <百分数>
当缓冲填充到总数的 <百分数> 时开始回放。
.
.TP
.B \-cache\-seek\-min <百分数>
如果查寻到的位置处于从当前位置算起的缓存大小的 <百分数> 之内,
MPlayer 等待填充缓存到此位置而不是执行流查寻(默认是: 50)。
.
.TP
.B \-cdda <选项1:选项2> (仅适用于 CDDA)
此选项用来调整 MPlayer 的 CD 音频读取特性。
.sp 1
可用选项有:
.RSs
.IPs speed=<参数值>
设定 CD 转速。
.IPs paranoia=<0\-2>
设定谨慎级别。
0 以外的值可能会打断除了第一个音轨的任何回放。
.RSss
0: 关闭检测 (默认)
.br
1: 只进行重叠检测
.br
2: 完全数据修正和校检
.REss
.IPs generic-dev=<参数值>
使用指定的通用 SCSI 设备。
.IPs sector-size=<参数值>
单位读取量。
.IPs overlap=<参数值>
锁定校检时的最小重叠搜索为 <参数值> 个扇区。
.IPs toc-bias
假定 TOC 报告中第1音轨的起始偏移量为 LBA 0。
有些东芝光驱需要这样来修正音轨边界。
.IPs toc-offset=<参数值>
报告音轨时在扇区数上再加上 <参数值> 个扇区。可能是负数。
.IPs (no)skip
(不)接受不完整的数据重建。
.RE
.
.TP
.B \-cdrom\-device <设备路径>
指定 CD-ROM 设备 (默认是: /dev/\:cdrom)。
.
.TP
.B \-channels <数字> (也请参见 \-af channels)
请求播放的声道数 (默认是: 2)。
MPlayer 要求解码器把音频解码到指定数量的声道。
然后由解码器来实现这个要求。
此选项通常只有在播放带 AC-3 音频(比如 DVD)的视频时才显得重要。
在那时默认使用 liba52 解码并把音频正确地混合到需要的声道数。
为了直接控制输出声道数独立于解码声道数, 使用声道过滤器。
.br
.I 注意:
此选项可以被解码器(仅适用于 AC-3), 过滤镜(环绕立体声), 和音频
输出驱动(至少 OSS 可以)接受。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs 2
立体声
.IPs 4
环绕立体声
.IPs 6
5.1 全声道输出
.IPs 8
7.1 全声道输出
.RE
.PD 1
.
.TP
.B \-chapter <场景标识>[\-<末尾场景标识>] (仅适用于 dvd:// 和 dvdnav://)
指定从哪个场景开始播放。也可以指定在哪个场景结束播放 (默认值为: 1)。
.
.TP
.B \-cookies (仅适用于网络)
HTTP 请求时发送 cookies。
.
.TP
.B \-cookies\-file <文件名> (仅适用于网络)
从 <文件名> 中读取 HTTP cookies (默认是: ~/.mozilla/ 和 ~/.netscape/)
而跳过从默认位置读取。
假定文件是 Netscape 格式。
.
.TP
.B \-delay <数>
音频延迟数秒 (正或负的浮点数)
.br
负值延迟音频，而正值延迟视频。
注意这与MEncoder的\-audio\-delay选项正好相反。
.br
.I 注意:
当和 MEncoder 一起用时, 并不保证能与 \-ovc copy 一起工作正常;
请使用 \-audio\-delay。
.
.TP
.B \-ignore\-start
忽略 AVI 文件中指定的流开始时间。
对于 MPlayer, 用 \-audio\-delay 选项编码的文件废除了流延迟。
在编码时期, 此选项防止 MEncoder 转送原流的开始时间到新的文件;
但是 \-audio\-delay 选项并不受影响。
注意 MEncoder 有时会自动调整流开始时间以补偿预期的解码延迟,
所以没有测试之前不要使用此选项进行编码。
.
.TP
.B \-demuxer <[+]类型名>
锁定分路器类型。
在名称前使用 "+" 锁定类型, 跳过某些核查!
按照 \-demuxer help 打印出来的指定分路器类型。
为了向后兼容, 也接受定义在 libmpdemux/\:demuxer.h 的分路器标识。
.
.TP
.B \-dumpaudio (仅用于 MPlayer)
转储原始的音频压缩流到 ./stream.dump (用于 MPEG/\:AC-3,
对大多数其它情形, 转储的文件不可播放)。
如果你在命令行中指定多于其中 \-dumpaudio, \-dumpvideo, \-dumpstream
的一个, 只有最后一个生效。
.
.TP
.B \-dumpfile <文件名> (仅用于 MPlayer)
指定 MPlayer 应该转储到的文件。
应该与 \-dumpaudio / \-dumpvideo / \-dumpstream 一起使用。
.
.TP
.B \-dumpstream (仅用于 MPlayer)
转储原始流到 ./stream.dump。
从 DVD 或网络上抓取的时候有用。
如果你在命令行中指定多于其中 \-dumpaudio, \-dumpvideo, \-dumpstream
的一个, 只有最后一个生效。
.
.TP
.B \-dumpvideo (仅用于 MPlayer)
转储原始流到 ./stream.dump (不是十分有用)。
如果你在命令行中指定多于其中 \-dumpaudio, \-dumpvideo, \-dumpstream
的一个, 只有最后一个生效。
.
.TP
.B \-dvbin <选项> (仅用于 DVB)
为了替代默认的值, 把下面的参数传递给 DVB 输入模块:
.sp 1
.PD 0
.RSs
.IPs card=<1\-4>
指定使用卡号 1\-4 (默认是: 1).
.IPs file=<文件名>
指示 MPlayer 从频道中读取 <文件名>。
默认是 ~/.mplayer/\:channels.conf.{sat,ter,cbl,atsc} (基于卡的类型)
或者最后于求助 ~/.mplayer/\:channels.conf。
.IPs timeout=<1\-30>
放弃试图调谐的最大等候秒数(默认是: 30)。
.RE
.PD 1
.
.TP
.B \-dvd\-device <设备路径> (仅用于 DVD)
指定 DVD 设备或 .iso 文件名（默认是: /dev/\:dvd）。
你也可以指定目录, 其中包含以前直接从 DVD 拷贝（比如用 vobcopy）的文件。
.
.TP
.B \-dvd\-speed <以KB/s为单位的因数或速度值> （仅适用于DVD）
尝试限制DVD的传输速度（默认值：0，代表不作更改）。
DVD的基础速率约为1350KB/s，所以一台8倍速的驱动器能以最高10800KB/s的速度读取
数据。
较低的速度使驱动器工作得更安静，对于观看DVD片来说，2700KB/s应该是足够安静且快速
了。
MPlayer在关闭时将驱动器的速度重置至默认值。
数值如果小于100则表示1350KB/s的倍数，例如\-dvd\-speed 8表示选择10800KB/s。
.br
.I 注意：
你需要用DVD设备的写权限以更改传输速度。
.
.TP
.B \-dvdangle <视角标识> (仅用于 DVD)
有些 DVD 碟片中的场景可以从多个视角观看。
这里你可以告诉 MPlayer 使用哪个视角(默认是: 1)。
.
.TP
.B \-edl <文件名>
回放时启用编辑决定列表(EDL)。
根据给定文件的条目视频被跳过, 而音频或静音或不静音。
如何使用详情请参见 http://www.mplayerhq.hu/\:DOCS/\:HTML/\:en/\:edl.html。
.
.TP
.B \-endpos <[[hh:]mm:]ss[.ms]|size[b|kb|mb]> (也请参见 \-ss 和 \-sb)
停止在给定的时间或字节位置。
.br
.I 注意:
字节位置仅为了 MEncoder 而启用但不精确, 因为它只会停在帧的边缘。
当与 \-ss 选项组合使用时, \-endpos 的时间会向前移动 \-ss 指定的秒数。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-endpos 56"
56 秒后停止。
.IPs "\-endpos 01:10:00"
1 小时 10 分后停止。
.IPs "\-ss 10 \-endpos 56"
1 分 6 秒后停止。
.IPs "\-endpos 100mb"
只编码 100 MB。
.RE
.PD 1
.
.TP
.B \-forceidx
强制索引重建。
对索引受损的文件(A/V 不同步等等)有用。
这使得不可能搜索的文件启用搜索。
你能使用 MEncoder 永久性地修复索引 (请参见文档)。
.br
.I 注意:
此选项仅对原本支持搜索的媒体有效 (即不能是: 标准输入, 管道, 等)。
.
.TP
.B \-fps <浮点数>
重载帧速率。
如果原先的值是错误的或缺少的有用。
.
.TP
.B \-frames <参数值>
只播放/\:转换前<参数值>帧, 然后退出。
.
.TP
.B \-hr\-mp3\-seek (仅用于 MP3)
高精度 MP3 搜索。
播放外部 MP3 文件时启用,
因为我们需要搜索到非常精确的位置来保持 A/V 同步。
这种方法在后退搜索时尤其慢, 因为需要绕回到开头来寻找准确的帧位置。
.
.TP
.B \-idx (也请参见 \-forceidx)
在没有找到索引的情况下重建文件的索引, 从而允许搜索。
对于损坏的/\:不完整的下载, 或制作低劣的文件有用。
.br
.I 注意:
此选项仅对原本支持搜索的媒体有效 (即不能是: 标准输入, 管道, 等)。
.
.TP
.B \-noidx
跳过重建索引文件的步骤。
MEncoder在此选项下跳过写入索引的步骤。
.TP
.B \-ipv4\-only\-proxy (仅适用于网络)
对于 IPv6 地址跳过代理服务器。
仍然用于 IPv4 连接。
.
.TP
.B \-loadidx <索引文件>
从 \-saveidx 保存的此文件中, 读取视频索引数据。
索引用于搜索, 过载其它任何包含在 AVI 本身的索引。
MPlayer 不阻止你装载产生于不同 AVI 的索引文件,
但是的确会导致不利的结果。
.br
.I 注意:
既然 MPlayer 现在支持 OpenDML, 此选项已废弃。
.
.TP
.B \-mc <每帧秒数>
每帧的最大 A-V 同步修正(以秒为单位)。
.br
对于 mencoder，\-mc 0 应当总是与 \-noskip 一同使用，否则几乎必然导致音视频
不同步。
.
.TP
.B \-mf <选项1:选项2:...>
用来从多个 PNG 或 JPEG 文件中解码。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs w=<参数值>
输入文件的宽度 (默认是: 自动检测)
.IPs h=<参数值>
输入文件的高度 (默认是: 自动检测)
.IPs fps=<参数值>
输出的帧率 (默认是: 25)
.IPs type=<参数值>
输入文件的类型 (可用类型是: jpeg, png, tga, sgi)
.RE
.PD 1
.
.TP
.B \-ni (仅用于 AVI)
锁定使用非交错的 AVI 分析器(修复某些质量差的 AVI 文件的播放)。
.
.TP
.B \-nobps (仅用于 AVI)
不使用平均比特率值来维持 A-V 同步。
对某些文件头损坏的 AVI 文件有帮助。
.
.TP
.B \-noextbased
停用基于后缀名的分路器选择机制。
默认情况下, 当文件类型(分路器)无法可靠检测时
(文件没有头部或者不够可靠), 使用文件后缀名来选择分路器。
基于内容的分路器总是可作为备用的。
.
.TP
.B \-passwd <密码> (也请参见\-user 选项) (仅适用于网络)
设置 http 认证密码.
.
.TP
.B \-prefer\-ipv4 (仅适用于网络)
使用 IPv4 网络连接。
IPv6 自动地作为备用。
.
.TP
.B \-prefer\-ipv6 (仅适用于 IPv6 网络)
使用 IPv6 网络连接。
IPv4 自动地作为备用。
.
.TP
.B \-psprobe <字节所在位置>
当播放 MPEG-PS 或 MPEG-PES 流时，此选项让你设定你希望 MPlayer 查看多少字节以确认
所要使用的视频编/解码器。
在播放含有 H.264 流的 EVO 或 VDR 文件时需要此选项。
.
.TP
.B \-pvr <选项1:选项2:...> (仅适用于 PVR)
此选项调谐 PVR 捕捉模块的各种编码属性。
不得不与基于硬件 MPEG 编码器 V4L2 驱动支持的卡一起使用。
Hauppauge WinTV PVR\-150/250/350/500 和所有基于 IVTV 的卡
是众所周知的 PVR 捕捉卡。
小心只有 Linux 2.6.18 及以上的内核能通过 V4L2 层处理 MPEG 流。
对于 MPEG 流硬件捕捉卡并使用 MPlayer/MEncoder 来观看电影的,
使用 "pvr://" 作为 URL 地址。
.sp 1
可用选项有:
.RSs
.IPs aspect=<0\-3>
指定宽高比:
.RSss
0: 1:1
.br
1: 4:3 (默认)
.br
2: 16:9
.br
3: 2.21:1
.REss
.IPs arate=<32000\-48000>
指定编码音频率(encoding audio rate) (默认是: 48000 Hz, 可用的有: 32000,
44100 和 48000 Hz)。
.IPs alayer=<1\-3>
指定编码 MPEG 音频层 (默认是: 2)。
.IPs abitrate=<32\-448>
指定音频编码比特率(以 kbps 为单位) (默认是: 384)。
.IPs amode=<参数值>
指定音频编码模式。
可用的预设值是 "stereo", "joint_stereo", "dual" 和 "mono" (默认是: stereo)。
.IPs vbitrate=<参数值>
指定平均编码视频比特率(以 Mbps 为单位) (默认是: 6)。
.IPs vmode=<参数值>
指定视频编码模式:
.RSss
vbr: Variable BitRate (可变比特率) (默认)
.br
cbr: Constant BitRate (常量比特率)
.REss
.IPs vpeak=<参数值>
指定编码视频比特率峰值(以 Mbps 为单位)
(只对 VBR 编码有用, 默认是: 9.6)。
.IPs fmt=<参数值>
选择进行编码的 MPEG 格式:
.RSss
ps:    MPEG-2 Program Stream (MPEG-2 程序流) (默认)
.br
ts:    MPEG-2 Transport Stream (MPEG-2 传输流)
.br
mpeg1: MPEG-1 System Stream (MPEG-1 系统流)
.br
vcd:   Video CD compatible stream (VCD 可兼容流)
.br
svcd:  Super Video CD compatible stream (SVCD 可兼容流)
.br
dvd:   DVD compatible stream (DVD 可兼容流)
.REss
.RE
.PD 1
.
.TP
.B \-radio <选项1:选项2:...> （仅适用于收音）
这些选项集用以设置收音捕捉模块的各种参数。
要用MPlayer收听电台使用‘radio://<频率>’（如果不提供频道选项）或
‘radio://<频道号>’（如果提供频道选项）作为URL。
你可以通过以‘-v’选项运行MPlayer查看允许的频率范围。
若要启动捕捉子系统，则使用‘radio://<频率或频道>/capture’。
如果不给出关键字capture，则你可以只使用输入线缆收听电台。
由于同步问题，不推荐使用capture来收听电台，这会使效果不佳。
.sp 1
可用选项有：
.RSs
.IPs device=<值>
所使用的收音设备（默认值：Linux下为/dev/radio0，而*BSD下为/dev/tuner0）。
.IPs driver=<值>
所使用的收音驱动（默认值：如果有则用v412，否则为v41）。
当前支持v41和v412驱动。
.IPs volume=<0..100>
收音设备的音量（默认为100）
.IPs "freq_min=<值>（仅适用于*BSD BT848）"
允许的最小频率（默认值：87.50）
.IPs "freq_max=<value>（仅适用于*BSD BT848）"
允许的最大频率（默认值：108.00）
.IPs
channels=<频率>\-<名称>[=<常规值>],<频率>\-<名称>[=<常规值>],...
设置频道列表。
在名称中用“_”代替空格（或使用引号）。
频道名字就会以OSD方式显示出来，而从命令radio_step_channel和radio_set_channel
对于遥控会很有用（参见LIRC）。
如果给出，则URL中的数字将作为频道列表中的频道位置编号。
.br
.I 示例:
radio://1, radio://104.4, radio_set_channel 1
.IPs "adevice=<值>（仅用于录制无线电广播时）"
作为所捕捉声音来源的设备的名字
没有这样的名字将禁用捕捉功能，即便URL中出现capture关键字。
如果设备名中含有一个‘=’，则模块将使用ALSA来捕捉，
否则用OSS。
.IPs "arate=<参数值>（仅用于录制无线电广播时）"
以每秒采样数为单位的频率值（默认值：44100）。
.br
.I 注意：
当使用音频捕捉时，也将\-rawaudio rate=<数值>选项设置为arate中一样的值。
如果你存在声音播放速度的问题（播放太快），尝试以不同的速率值
（例如4800，44100，32000……）播放 。
.IPs "achannels=<参数值>（仅用于录制无线电广播时）"
捕捉声音的声道数。
.RE
.
.TP
.B \-rawaudio <选项1:选项2:...>
此选项可让你播放原始音频文件。
你也不得不使用 \-demuxer rawaudio。
也可以用来播放不是 44kHz 16-位 立体声的音频 CD。
播放原始 AC-3 流请使用 \-rawaudio format=0x2000 \-demuxer rawaudio。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs channels=<参数值>
声道数
.IPs rate=<参数值>
每秒采样率
.IPs samplesize=<参数值>
样本大小(以字节为单位)
.IPs bitrate=<参数值>
原始音频文件的比特率
.IPs format=<参数值>
16-进制的 fourcc
.RE
.PD 1
.
.TP
.B \-rawvideo <选项1:选项2:...>
此选项可让你播放原始视频文件。
你也不得不使用 \-demuxer rawvideo。
.sp 1
可用的选项有:
.sp 1
.PD 0
.RSs
.IPs fps=<参数值>
每秒帧(速)率 (默认是: 25.0)
.IPs sqcif|qcif|cif|4cif|pal|ntsc
设置标准的图像大小
.IPs w=<参数值>
图像宽(以像素为单位)
.IPs h=<参数值>
图像高(以像素为单位)
.IPs i420|yv12|yuy2|y8
设置色彩空间
.IPs format=<参数值>
16-进制或字符串常量形式的色彩空间值(fourcc)
使用\-rawvideo format=help以获取可用字符串的列表。
.IPs size=<参数值>
帧大小(以字节为单位)
.REss
.sp 1
.RS
.I 示例:
.RE
.PD 0
.RSs
.IPs "mplayer foreman.qcif \-demuxer rawvideo \-rawvideo qcif"
播放著名的 "foreman" 视频样本。
.IPs "mplayer sample-720x576.yuv \-demuxer rawvideo \-rawvideo w=720:h=576"
播放原始 YUV 样本。
.RE
.PD 1
.
.TP
.B \-rtsp\-port
与 "rtsp://" 的 URL 地址一起用来锁定客户端的端口号。
如果你在路由器后面, 想把 RTSP 流从服务器转到指定客户端, 此选项可能有用。
.
.TP
.B \-rtsp\-destination
与 "rtsp://" 的 URL 地址一起用来强制目标绑定 IP 地址。
对某些 RTSP 服务器不能把 RTP 包送到正确的接口, 此选项可能有用。
如果连接 RTSP 服务器失败, 使用 \-v 看看 MPlayer 试图绑定到
哪个 IP 地址, 然后试试用它强制分配到你的计算机。
.
.TP
.B \-rtsp\-stream\-over\-tcp（仅用于 LIVE555 和 NEMESI）
与 "rtsp://" 的 URL 地址一起用来指定让 RTP 和 RTCP 进入包流过 TCP
(使用与 RTSP 相同的 TCP 连接)。
如果你的破 internet 连接不传递 UDP 进入包, 此选项可能有用
(参见 http://www.live555.com/\:mplayer/)。
.
.TP
.B \-saveidx <文件名>
强制重建索引并转储到 <文件名>。
目前只对 AVI 文件有效。
.br
.I 注意:
既然 MPlayer 现在支持 OpenDML, 此选项已废弃。
.
.TP
.B \-sb <比特位置> (也请参见 \-ss)
搜索到比特位置。
回放开始部分是垃圾的 CD-ROM 镜像或 VOB 文件时有用。
.
.TP
.B \-speed <0.01\-100>
根据给定的参数因子, 减慢或加快回放速度。
并不保证能与 \-oac copy 一起工作正常。
.
.TP
.B \-srate <Hz>
选择输出的取样率(当然声卡对此有限制)。
如果选择的样本频率与当前的媒体有差异, 会在音频过滤层中插入
音频过滤器 resample(重采样) 或 lavcresample 来补偿此差异。
重采样的类型由 \-af\-adv 选项控制。
默认的是快速重采样, 可能会引起失真。
.
.TP
.B \-ss <时间> (也请参见 \-sb)
搜索到给定的时间位置。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-ss 56"
搜索到 56 秒处。
.IPs "\-ss 01:10:00"
搜索到 1 小时 10 分钟处。
.RE
.PD 1
.
.TP
.B \-tskeepbroken
告诉 MPlayer 不要丢弃流中报告损坏的 TS 包。
有时需要播放窜改了的 MPEG-TS 文件。
.
.TP
.B \-tsprobe <字节位置>
播放 MPEG-TS 流时, 此选项让你指定流中多少字节给 MPlayer 搜索
你所要的音频和视频的标识。
.
.TP
.B \-tsprog <1\-65534>
播放 MPEG-TS 流时, 你可以用此选项指定你想运行的程序(如果知道的话)。
能和 \-vid 及 \-aid 一起使用。
.
.TP
.B \-tv <选项1:选项2:...> (仅用于 TV/\:PVR)
此选项会调谐 TV 捕捉模块的各种属性。
为了用 MPlayer 收看 TV, 使用 "tv://" 或 "tv://<频道号>"
甚至用 "tv://<频道名>" (参见下面的频道选项) 作为 URL 地址。
.sp 1
可用选项有:
.RSs
.IPs noaudio
没有声音
.IPs "automute=<0\-255>（仅适用于v4l和v4l2）"
如果设备报告的信号强度小于这个值，那么音频和视频将静音。
大多数情况下automute=100就足够用了。
默认值为0（禁用automute）。
.IPs driver=<参数值>
参见\-tv driver=help以获取内置TV输入驱动的列表。
可用参数: dummy, v4l, bsdbt848（默认值：自动侦测）
.IPs device=<参数值>
指定 TV 设备 (默认是: /dev/\:video0）。
.I 注意：
对于bsdbt848驱动，你可以同时给出bktr和调谐设备的名称，使用逗号分隔两
者，其中调谐器在bktr之后（例如：-tv device=/dev/bktr1,/dev/tuner1）。
.IPs input=<参数值>
指定输入 (默认是: 0 (TV), 参见控制台输出的可用输入列表）。
.IPs freq=<参数值>
指定调谐器的频率(例如: 511.250)。
与频道参数不兼容.
.IPs outfmt=<参数值>
指定调谐器的输出格式, 用 V4L 驱动支持的预设置(yv12, rgb32, rgb24,
rgb16, rgb15, uyvy, yuy2, i420) 或者一个以 16-进制值给定的武断的格式。
试试用 outfmt=help 察看可用的所有格式的列表。
.IPs width=<参数值>
输出窗口的宽度
.IPs height=<参数值>
输出窗口的高度
.IPs fps=<参数值>
捕捉视频的帧速率(帧每秒)
.IPs buffersize=<参数值>
捕捉缓冲区的最大尺寸(以兆为单位) (默认值: 动态)
.IPs norm=<参数值>
bsdbt848 和 v4l 可用的参数: PAL, SECAM, NTSC。对于 v4l2,
参见控制台输出的所有可用制式列表, 也请参看下面的 normid 选项。
.IPs "normid=<参数值> (仅用于 v4l2)"
设置 TV 制式 为给定的数字标识。
TV 制式取决于捕捉卡。参见控制台输出的可用 TV 制式列表。
.IPs channel=<参数值>
设置调谐器到 <参数值> 频道.
.IPs chanlist=<参数值>
可用参数: europe-east, europe-west, us-bcast, us-cable, 等等
.IPs channels=<频道>\-<名称>,<频道>\-<名称>,...
设置频道的名称。
.I 注意：
如果<频道>是一个大于1000的整数，它将被看作是频率（以kHz为单位）而不是频率表中的
频道名。
.br
名称中使用 _ 代替空格(或使用引号 ;-))。
OSD 会显示频道名称, slave 命令 tv_step_channel, tv_set_channel 及
tv_last_channel 会有用于遥控(参见 LIRC)。
与频率参数不兼容。
.br
.I 注意:
频道号就将是 "频道" 列表上从1开始计数的位置。
.br
.I 示例:
tv://1, tv://TV1, tv_set_channel 1, tv_set_channel TV1
.IPs [brightness|contrast|hue|saturation]=<\-100\-100>
设置显卡的色彩均衡器。
.IPs audiorate=<参数值>
设置音频捕捉比特率。
.IPs forceaudio
即使 v4l 报告没有音频源也捕捉音频。
.IPs "alsa\ "
从 ALSA 捕捉。
.IPs amode=<0\-3>
选择音频模式:
.RSss
0: 单声道
.br
1: 立体声
.br
2: 语言 1
.br
3: 语言 2
.REss
.IPs forcechan=<1\-2>
默认情况下, 音频声道数计数由电视卡查询音频模式自动决定。
此选项允许锁定立体声/\:单声道记录而不管 amode 选项和 v4l 返回的参数。
在电视卡不能报告正确的当前音频模式的时候可以用此选项解决麻烦。
.IPs adevice=<参数值>
设置音频设备。
<参数值> 必须是 /dev/\:xxx 用于 OSS 而硬件标识用于 ALSA。
硬件标识用于 ALSA 时, 你务必要用 "." 代替 ":"。
.IPs audioid=<参数值>
选择捕捉卡的音频输出, 如果它有不止一个的话。
.IPs "[volume|bass|treble|balance]=<0\-65535> (v4l1)"
.IPs "[volume|bass|treble|balance]=<0\-100> (v4l2)"
这些选项用来设置视频捕捉卡上的混音器参数。
如果你的卡没有混音器, 它们将没有效果。
对于 v4l2 50 根据驱动器的报告影射到控制器上的默认值。
.IPs "gain=<0\-100>（仅用于v4l2）"
将视频设备（通常是网络摄像头）的增益控制设置为所要的值，并且关闭自动控制模式。
值为 0 启用自动控制模式。
如果忽略这个选项，将不修改增益控制模式。
.IPs immediatemode=<布尔值>
参数值为 0 表示同时捕捉和缓冲音频和视频 (MEncoder 的默认值)。
参数值为 1 (MPlayer 的默认值)表示只捕捉视频
而让音频通过环路电缆由电视卡输入声卡。
.IPs mjpeg
使用硬件 MJPEG 压缩(如果芯片支持的话)。
使用此选项时, 你不需要指定输出窗口的宽和高,
因为 MPlayer 会根据 decimation 参数(见下面)自动确定。
.IPs decimation=<1|2|4>
选择硬件 MJPEG 压缩的图像尺寸:
.RSss
1: 全尺寸
    704x576    PAL
    704x480    NTSC
.br
2: 中等尺寸
    352x288    PAL
    352x240    NTSC
.br
4: 小尺寸
    176x144    PAL
    176x120    NTSC
.REss
.IPs quality=<0\-100>
选择 JPEG 压缩的质量(全尺寸推荐值 < 60)。
.IPs tdevice=<值>
指定电视字幕设备（示例：/dev/\:vbi0）（默认值：无设备）。
.IPs tformat=<格式>
指定电视字幕的显示格式（默认值：0）：
.RSss
0：不透明
.br
1：透明
.br
2：不透明且反色
.br
3：透明且反色
.REss
.IPs tpage=<100\-899>
指定初始电视字幕的页面号（默认值：100）。
.IPs tlang=<\-1\-127>
设置默认电视字幕语言代码（默认值：0），该值将作为首选语言，直至收到一个类型 28 的数据
包。
当电视字幕系统使用非拉丁字符集，但语言代码因为某些原因，并非通过类型 28 的数据包传输时
很有用。
要查看支持的语言代码列表，则将该选项设为 \-1。
.IPs "hidden_video_renderer（仅用于 dshow）"
使用视频渲染器终止媒体流，而不是使用 Null 渲染器（默认值：关闭）。
当视频卡住但音频没有时会有用。
.I 注意：
可能在与 \-vo directx 和 \-vf crop 一起使用时无法生效。
.IPs "hidden_vp_renderer（仅用于 dshow）"
使用视频渲染器终止 VideoPort 端媒体流，而不是将其从流程图中移除（默认值：关闭）。
当你的视频有 VideoPort 端口，而视频有拖延时很有用。
.I 注意：
可能在与 \-vo directx 和 \-vf crop 一起使用时无法生效。
.IPs "system_clock（仅用于 dshow）"
使用系统时钟作为同步信号来源，而不是用默认的流程图中的时钟（通常是流程图中某个实时来源
的时钟）。
.IPs "normalize_audio_chunks（仅用于 dshow）"
创建的音频数据块具有与视频帧相同的时间长度（默认值：关闭）。
某些音频卡创建的音频数据块大小约为0.5秒，这导致使用 immediatemode=0 时视频拖延。
.RE
.
.TP
.B \-tvscan <选项1:选项2:...>（仅用于电视播放及MPlayer中）
设置电视频道扫描器。
MPlayer将同时打印“-tv channels=”选项中的值，包括已有的以及刚找到的频道。
.sp 1
可用子选项为：
.RSs
.IPs autostart
在启动后立即开始频道的扫描（默认值：禁用）。
.IPs period=<0.1\-2.0>
指定切换至下一个频道前延迟的时间，单位为秒（默认值：0.5）。
较低的值将使扫描更快，但可能将无效的电视频道侦测为有效。
.IPs threshold=<1\-100>
用于设备报告的信号强度的阈值（单位为百分比）（默认值：50）。
高于该值的信号强度将代表当前扫描的频道是有效的。
.RE
.
.TP
.B \-user <用户名> (也请参见 \-passwd) (仅用于网络)
指定 HTTP 认证的用户名。
.
.TP
.B \-user\-agent <字符串>
使用 <字符串> 作为 HTTP 流的用户代理。
.
.TP
.B \-vid <标识>
选择视频频道 (MPG: 0\-15, ASF: 0\-255, MPEG-TS: 17\-8190)。
当播放 MPEG-TS 流时, MPlayer/\:MEncoder 用第一个程序
播放已选择的(如果有的话)视频流。
.
.TP
.B \-vivo <子选项> (调试代码)
锁定 VIVO 分路器的音频参数(用于调试)。
.
.
.
.SH "OSD/字幕选项"
.I 注意:
也请参见 \-vf expand。
.
.TP
.B \-ass (仅适用于 FreeType)
打开 SSA/ASS 字幕提供。
通过此选项, libass 将用于 SSA/ASS 外部字幕和 Matroska 轨迹。
你可能也想使用 \-embeddedfonts。
.br
.I 注意：
不像通常的 OSD，libass 默认使用 fontconfig。使用 \-nofontconfig 以禁用此行为。
.
.TP
.B \-ass\-border\-color <参数值>
为文字字幕设置边框 (轮廓) 颜色。
颜色格式是 RRGGBBAA。
.
.TP
.B \-ass\-bottom\-margin <参数值>
在帧底部添加黑条。
SSA/ASS 提供器能在那里放置字幕 (与 \-ass\-use\-margins 组合用)。
.
.TP
.B \-ass\-color <参数值>
为文字字幕设置颜色。
颜色格式是 RRGGBBAA。
.
.TP
.B \-ass\-font\-scale <参数值>
为 SSA/ASS 提供器中的字体设置比例系数。
.
.TP
.B \-ass\-force\-style <[Style.]Param=参数值[,...]>
改写一些样式或脚本信息的参数。
.sp
.I 示例:
.PD 0
.RSs
\-ass\-force\-style FontName=Arial,Default.Bold=1
.br
\-ass\-force\-style PlayResY=768
.RE
.PD 1
.
.TP
.B \-ass\-hinting <类型>
设置微调类型。
<类型> 可以是：
.PD 0
.RSs
.IPs <类型>
.IPs 0
无微调。
.IPs 1
FreeType自动微调器，轻量模式。
.IPs 2
FreeType自动微调器，普通模式。
.IPs 3
字体内置微调。
.IPs 0\-3 + 4
相同，但微调只有当OSD以全屏方式显示而因此不会伸缩时才会使用。
.RE
.RSs
默认值为7（当OSD不伸缩时使用内置微调器，否则无微调）。
.RE
.PD 1
.
.TP
.B \-ass\-line\-spacing <参数值>
为 SSA/ASS 提供器设置行间隔。
.
.TP
.B \-ass\-styles <文件名>
装载指定文件中找到的所有 SSA/ASS 风格并在提供文字字幕时使用。
文件的语法完全像是 SSA/ASS 中的一节 [V4 Styles] / [V4+ Styles]。
.
.TP
.B \-ass\-top\-margin <参数值>
在帧顶部添加黑条。
SSA/ASS 提供器能在那里放置字幕 (与 \-ass\-use\-margins 组合用)。
.
.TP
.B \-ass\-use\-margins
启用放置字幕(如果有的话)在黑框中。
.
.TP
.B \-dumpjacosub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为基于时间的 JACOsub 字幕格式。
在当前的目录中创建 dumpsub.js 文件。
.
.TP
.B \-dumpmicrodvdsub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为 MicroDVD 字幕格式。
在当前的目录中创建 dumpsub.sub 文件。
.
.TP
.B \-dumpmpsub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为 MPlayer 的字幕格式, MPsub。
在当前的目录中创建 dumpsub.mpsub 文件。
.
.TP
.B \-dumpsami (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为基于时间的 SAMI 字幕格式。
在当前的目录中创建 dumpsub.smi 文件。
.
.TP
.B \-dumpsrtsub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为基于时间的 SubViewer (SRT) 字幕格式。
在当前的目录中创建 dumpsub.srt 文件。
.br
.I 注意:
有些破硬件播放器对 Unix 行结尾的 SRT 字幕会哽住。
如果你够彩碰到这样的盒子, 把你的字幕文件到 unix2dos 或类似的程序过一过,
替换 Unix 行结尾为 DOS/Windows 行结尾。
.
.TP
.B \-dumpsub (仅用于 MPlayer) (BETA 代码)
从 VOB 流中转储字幕子流。
也请参见 \-dump*sub 和 \-vobsubout* 选项。
.
.TP
.B \-embeddedfonts (仅用于 FreeType)
允许抽取 Matroska 内嵌字体（默认值：禁止）。
这些字体能用于 SSA/ASS 字幕渲染 (\-ass 选项)。
字体文件创建在~/.mplayer/\:fonts目录中。
.br
.I 注意：
在FontConfig 2.4.2或更新的版本里，内嵌字体直接从内存中打开而这个选项默认打开。
.
.TP
.B \-ffactor <数字>
对字体的 alphamap 重新采样。
可设为:
.PD 0
.RSs
.IPs 0
普通白色字体
.IPs 0.75
非常细的黑色边框(默认值)
.IPs 1
细的黑色边框
.IPs 10
粗的黑色边框
.RE
.PD 1
.
.TP
.B \-flip\-hebrew (仅用于 FriBiDi)
打开使用 FriBiDi 的翻转字幕。
.
.TP
.B \-noflip\-hebrew\-commas
改变 FriBiDi 中假定的字幕中的逗号位置。
如果字幕中的逗号显示在句首而不是在句尾, 就使用它。
.
.TP
.B \-font <文件 font.desc 的路径，字体（FreeType）的路径，字体样式（Fontconfig）的路径>
在别的目录中寻找 OSD/\:SUB 字体(
默认的普通字体为: ~/\:.mplayer/\:font/\:font.desc,
默认的 FreeType 字体为: ~/.mplayer/\:subfont.ttf)。
.br
.I 注意:
对于 FreeType, 此选项决定文本字体文件的路径。
对于 Fontconfig, 此选项决定 Fontconfig 的字体名称。
.sp 1
.I 示例:
.PD 0
.RSs
\-font ~/\:.mplayer/\:arial-14/\:font.desc
.br
\-font ~/\:.mplayer/\:arialuni.ttf
.br
\-font 'Bitstream Vera Sans'
.br
\-font 'Bitstream Vera Sans:style=Bold'
.RE
.PD 1
.
.TP
.B \-fontconfig (仅用于 fontconfig)
启用使用 fontconfig 管理的字体。
.br
.I 注意：
\-ass 自动打开该选项，除非明确使用 \-nofontconfig 改变这一行为。
.
.TP
.B \-forcedsubsonly
仅显示锁定的字幕, 例如由 \-slang 选择的 DVD 字幕流。
.
.TP
.B \-fribidi\-charset <字符集名称> (仅用于 FriBiDi)
当编码非 UTF-8 字幕(默认是: ISO8859\-8)时, 指定传递到 FriBiDi 的字符集。
.
.TP
.B \-ifo <VOBsub 的 IFO 文件>
指出用于装载 VOBsub 字幕的调色板和帧尺寸的文件。
.
.TP
.B \-noautosub
关闭自动载入字幕文件。
.
.TP
.B \-osd\-duration <时间>
设置 OSD 信息的停留时间(以毫秒 ms 为单位) (默认是: 1000)。
.
.TP
.B \-osdlevel <0\-3> (仅用于 MPlayer)
指定 OSD 的启始模式。
.PD 0
.RSs
.IPs 0
只有字幕
.IPs 1
音量 + 搜索条 (默认)
.IPs 2
音量 + 搜索条 + 计时器 + 百分比
.IPs 3
音量 + 搜索条 + 计时器 + 百分比 + 总时间
.RE
.PD 1
.
.TP
.B \-overlapsub
虽然当前有字幕显示, 允许同时显示下一行字幕(默认启用只支持特定格式)。
.
.TP
.B \-sid <标识> (也请参见 \-slang, \-vobsubid)
显示由 <标识> (0\-31) 指定的字幕流。
MPlayer 运行在 verbose (\-v) 模式时, 打印可用的字幕标识。
如果你不能选择 DVD 中其中之一的字幕, 也请试试 \-vobsubid。
.
.TP
.B \-nosub
禁止所有默认情况下自动选择的字幕（就像比如 Matroska/mkv 流分离器所支持的那样）。
.
.TP
.B \-slang <语言代号[,语言代号,...]> (也请参见 \-sid)
指定使用字幕语言的优先级列表。
不同的容器格式使用不同的语言代号。DVDs 使用 ISO 639\-1 的
两字符语言代号, Matroska 使用 ISO 639\-2 的
三字符语言代号, 而 OGM 使用自由格式标识符。
MPlayer 在 verbose (\-v) 模式下会打印可用的语言。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "mplayer dvd://1 \-slang hu,en"
选择 DVD 上的匈牙利语字幕轨迹而英语在没有匈牙利语时备用。
.IPs "mplayer \-slang jpn example.mkv"
播放日语字幕的 Matroska 文件。
.RE
.PD 1
.
.TP
.B \-spuaa <模式>
设置 DVD/\:VOBsub 的反锯齿/\:缩放模式。
甚至在原始的与缩放的帧尺寸已匹配时, 还可能在 <模式> 上增加 16 以强制进行缩放,
比如使用高斯柔化来平滑字幕。
可用模式有:
.PD 0
.RSs
.IPs 0
不缩放(最快, 很丑)
.IPs 1
近似缩放(好像坏了?)
.IPs 2
完全缩放(慢)
.IPs 3
二次线性缩放(默认值, 快速而且效果不坏)
.IPs 4
使用软件缩放的高斯柔化(看起来很好)
.RE
.PD 1
.
.TP
.B \-spualign <\-1\-2>
指定 SPU (DVD/\:VOBsub) 字幕该如何对齐。
.PD 0
.RSs
.IPs "\-1"
原始位置。
.IPs " 0"
顶部对齐 (原始行为, 默认)。
.IPs " 1"
中央对齐。
.IPs " 2"
底部对齐。
.RE
.PD 1
.
.TP
.B \-spugauss <0.0\-3.0>
高斯模糊的可变参数用于 \-spuaa 4。
越高表示越柔化 (默认是: 1.0)。
.
.TP
.B \-sub <字幕文件1,字幕文件2,...>
使用/\:显示指定的字幕文件。
同时只能显示一个文件。
.
.TP
.B \-sub\-bg\-alpha <0\-255>
指定字幕和 OSD 背景的 alpha 通道值。
值越大代表越透明。但 0 表示完全透明。
.
.TP
.B \-sub\-bg\-color <0\-255>
指定字幕和 OSD 背景的颜色值。
目前字幕是灰度图像所以这个值相当于颜色的亮度。
255 代表白色 0 代表黑色。
.
.TP
.B \-sub\-demuxer <[+]名称> (仅用于 \-subfile) (BETA 代码)
锁定 \-subfile 的字幕分路器类型。
在名称前使用 "+" 锁定类型, 跳过某些核查!
按照 \-sub\-demuxer help 打印出来的指定分路器类型。
为了向后兼容, 也接受定义在 subreader.h 的分路器标识。
.
.TP
.B \-sub\-fuzziness <模式>
搜寻字幕时调整匹配模糊度:
.PD 0
.RSs
.IPs 0
精确匹配
.IPs 1
装载所有包含电影名称的字幕。
.IPs 2
装载当前目录的所有字幕。
.RE
.PD 1
.
.TP
.B \-sub\-no\-text\-pp
停用载入字幕后的任何形式的文字后期处理。
用于调试目的。
.
.TP
.B \-subalign <0\-2>
根据 \-subpos 给定的高度, 指定该对齐哪个字幕边缘。
.PD 0
.RSs
.IPs 0
顶部对齐 (原始行为)。
.IPs 1
中央对齐。
.IPs 2
底部对齐 (默认)。
.RE
.PD 1
.
.TP
.B "\-subcc \ "
显示 DVD 的隐藏式(CC)字幕。
它们
.B 不
是 VOB 字幕, 它们是为听力有障碍的人准备的特殊的 ASCII 字幕,
编码在大多数 DVD 地区码为 1 的 VOB 用户数据流中。
CC 字幕到目前为止还没有在其它地区码的 DVD 中发现。
.
.TP
.B \-subcp <编码页> (仅用于 iconv)
如果你的系统支持 iconv(3), 你可以用此选项来指定字幕的编码页。
.sp 1
.I 示例:
.PD 0
.RSs
\-subcp latin2
.br
\-subcp cp1250
.RE
.PD 1
.
.TP
.B \-subcp enca:<语言>:<备用编码页> (仅用于 ENCA)
你可以使用两字符语言代号指定语言, 让 ENCA 自动检测编码页。
如果不能确定, 随便输入点什么然后察看 mplayer 的 \-v output 中可用的语言。
备用编码页指定自动检测失败时使用的编码页。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-subcp enca:cs:latin2"
猜测编码页, 假定字幕是捷克语, 如果自动检测失败 latin 2 作备用。
.IPs "\-subcp enca:pl:cp1250"
猜测波兰语的编码页, cp1250 作备用。
.RE
.PD 1
.
.TP
.B \-subdelay <数>
字幕延迟 <数> 秒。可以是负数。
.
.TP
.B \-subfile <文件名> (BETA 代码)
目前没有用。
与 \-audiofile 一样, 但用于字幕流(OggDS?)。
.
.TP
.B \-subfont <字体（FreeType）的路径，字体样式（Fontconfig）的路径>（仅用于 FreeType 字体）
设置字幕字体（参见 \-font）。
如果没有给出 \-subfont，则使用 \-font。
.
.TP
.B \-subfont\-autoscale <0\-3> (仅用于 FreeType)
设置自动缩放模式。
.br
.I 注意:
0 表示文字和 OSD 的尺度为字体高度(以点 point 为单位的)。
.sp 1
可用模式有:
.sp 1
.PD 0
.RSs
.IPs 0
不自动缩放
.IPs 1
高度成比例
.IPs 2
宽度成比例
.IPs 3
对角线成比例 (默认值)
.RE
.PD 1
.
.TP
.B \-subfont\-blur <0\-8> (仅用于 FreeType)
设置字体柔化半径(默认是: 2)。
.
.TP
.B \-subfont\-encoding <参数值> (仅用于 FreeType)
设置字幕编码。
当设为 "unicode" 时, 字体文件中的所有字模都会被渲染
并使用 unicode 编码(默认是: unicode)。
.
.TP
.B \-subfont\-osd\-scale <0\-100> (仅用于 FreeType)
设置 OSD 元素的自动缩放系数(默认是: 6)。
.
.TP
.B \-subfont\-outline <0\-8> (仅用于 FreeType)
设置字体边框的宽度(默认是: 2)。
.
.TP
.B \-subfont\-text\-scale <0\-100> (仅用于 FreeType)
设置字幕文本的自动缩放系数(屏幕尺寸的百分比) (默认是: 5)。
.
.TP
.B \-subfps <速率>
指定字幕文件的帧率(默认是: 电影的帧率)。
.br
.I 注意:
<速率> > 电影的帧率时，将使基于帧的字幕文件加速播放字幕，而使基于时间的字幕文件减慢播
放字幕。
.
.TP
.B \-subpos <0\-100> (用于 \-vf expand)
指定字幕在屏幕上显示的位置。
参数值是以屏幕高度的百分比为单位的字幕垂直位置。
.
.TP
.B \-subwidth <10\-100>
指定字幕在屏幕上显示的最大宽度。
对于电视输出(TV-out)有用。
参数值是以屏幕宽度的百分比为单位的字幕宽度。
.
.TP
.B \-noterm\-osd
当没有可用的视频输出时, 停止在控制台上显示 OSD 信息。
.
.TP
.B \-term\-osd\-esc <转义序列>
指定, 在控制台上显示 OSD 信息之前, 使用的转义序列。
转义序列应该把指针移到 OSD 的行首然后清理(默认是: ^[[A\\r^[[K)。
.
.TP
.B \-unicode
告诉 MPlayer 把字幕文件作为 unicode 来处理。
.
.TP
.B \-unrarexec <unrar 可执行文件的路径>（MingW 平台上不支持。）
指定 unrar 可执行文件的路径，以使 MPlayer 可以使用它来读取 RAR 压缩的
 VOBSub 文件（默认值：未设置路径，因此该功能关闭）。
该路径必须包含可执行文件的文件名，例如 \& /usr/local/bin/unrar。
.
.TP
.B "\-utf8 \ \ "
告诉 MPlayer 把字幕文件作为 UTF-8 来处理。
.
.TP
.B \-vobsub <无后缀名的 VOBsub 文件名>
指定用于字幕显示的 VOBsub 文件。
不得不是无后缀名的完整路径名, 即没有 ".idx", ".ifo" 及 ".sub"。
.
.TP
.B \-vobsubid <0\-31>
指定 VOBsub 字幕标识。
.
.TP
.B \-vobsubid <0\-31>
指定 VOBsub 的字幕代码。
.
.
.
.SH "音频输出选项（仅适用于MPLAYER）"
.
.TP
.B \-abs <参数值> (仅用于 \-ao oss) (废弃)
重载音频驱动/\:声卡的缓冲区大小检测。
.
.TP
.B \-format <格式> (也请参见音频过滤器一节中的格式)
选择样本格式用于从音频过滤器层输出到声卡。
下面音频过滤器一节中的格式描述列出了可采用的<格式>值。
.
.TP
.B \-mixer <设备>
使用不是默认的 /dev/\:mixer 混音设备。
对于 ALSA 来说是混音名称。
.
.TP
.B \-mixer\-channel <混音线>[,混音索引] (仅用于 \-ao oss 和 \-ao alsa)
此选项告诉 MPlayer 使用不同的通道控制音量而不是默认的 PCM。
用于 OSS 的选项包括
.B vol, pcm, line。
有关选项的完全列表请查找 /usr/\:include/\:linux/\:soundcard.h 中的
SOUND_DEVICE_NAMES。
对于 ALSA (如 alsamixer displays), 你可以使用的名称, 如
.B Master, Line, PCM。
.br
.I 注意:
ALSA 混音通道名称后面跟的数字必须用 <名称,数字> 格式指定,
即 alsamixer 中通道标为 "PCM 1" 的必须转换为
.BR PCM,1 。
.
.TP
.B \-softvol
锁定使用软件混音, 而不用声卡混音。
.
.TP
.B \-softvol\-max <10.0\-10000.0>
设置最大扩音级别(以百分比为单位) (默认是: 110)。
值 200 允许你调整的音量最高达到目前级别的两倍。
对于值低于 100 的, 初始音量(为 100%) 会高于最大值,  OSD 不能正确显示。
.
.TP
.B \-volstep <0\-100>
设置混音音量调整的步进单位为整个范围的百分比 (默认是: 3)。
.
.
.
.SH "音频输出驱动（仅适用于MPLAYER）"
音频输出驱动是各种音频输出设备的接口。
语法是:
.
.TP
.B \-ao <驱动1[:子选项1[=参数值]:...],驱动2,...[,]>
指定使用音频输出驱动的优先级列表。
.PP
如果列表尾有 "," MPlayer 使用没有列出的驱动作为后备。
子选项是可选的, 大多数省略。
.br
.I 注意:
已编译进的音频输出驱动参见于 \-ao help 的列表。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-ao alsa,oss,"
尝试使用 ALSA 驱动, 然后是 OSS 驱动, 再后是其他的。
.IPs "\-ao alsa:noblock:device=hw=0.3"
设置 noblock-模式和 device-名称为第一个卡, 第四个设备。
.RE
.PD 1
.sp 1
可用的音频输出驱动有:
.
.TP
.B "alsa\ \ \ "
ALSA 0.9/1.x 音频输出驱动
.PD 0
.RSs
.IPs noblock
设置 noblock-模式。
.IPs device=<设备>
设置设备名称。
在 ALSA 设备名称中替换 "," 为 ".", ":" 为 "="。
对于通过 S/PDIF 输出的 hwac3, 使用 "iec958" 或 "spdif" 设备,
除非你真的知道如何正确设置。
.RE
.PD 1
.
.TP
.B "alsa5\ \ "
ALSA 0.5 音频输出驱动
.
.TP
.B "oss\ \ \ \ "
OSS 音频输出驱动
.PD 0
.RSs
.IPs <dsp-device>
设置音频输出设备 (默认是: /dev/\:dsp)。
.IPs <mixer-device>
设置音频混音设备 (默认是: /dev/\:mixer)。
.IPs <mixer-channel>
设置音频混音通道 (默认是: pcm)。
.RE
.PD 1
.
.TP
.B sdl (仅用于 SDL)
高级平台独立的 SDL(简单 Directmedia 层) 库音频输出驱动
.PD 0
.RSs
.IPs <driver>
显式选择 SDL 音频输出 (默认是: 让 SDL 选)。
.RE
.PD 1
.
.TP
.B "arts\ \ \ "
音频输出通过 aRts daemon
.
.TP
.B "esd\ \ \ \ "
音频输出通过 ESD daemon
.PD 0
.RSs
.IPs <server>
显式选择 ESD 服务器 (默认是: localhost)。
.RE
.PD 1
.
.TP
.B "jack\ \ \ \ "
音频输出通过 JACK(Jack 音频连接工具)
.PD 0
.RSs
.IPs port=<名>
连接给定端口名 (默认是: 物理端口)。
.IPs name=<客户端名>
传递客户端名给 JACK (默认是: MPlayer [<PID>])。
如果你想自动建立某些连接时有用。
.IPs (no)estimate
估计音频延迟, 假定让视频回放更流畅 (默认是: 启用)。
.IPs (no)autostart（默认值：禁用）
当有需要时自动启动 jackd。
注意该选项似乎不可靠，并且会往标准输出发送服务端消息。
.RE
.PD 1
.
.TP
.B "nas\ \ \ \ "
音频输出通过 NAS
.
.TP
.B coreaudio（仅适用于 Mac OS X）
Mac OS X 自带的音频输出驱动
.
.TP
.B "openal\ "
实验性的 OpenAL 音频输出驱动
.
.TP
.B "pulse\ \ "
PulseAudio 音频输出驱动
.PD 0
.RSs
.IPs "<主机>[:<输出泄漏值>]"
指定所使用的主机，并选择性地指定所使用的输出泄漏值。
<主机> 字符串为空的话，则使用本地连接。指定“localhost”则使用网络传输
（很可能不是你所希望的）。
.RE
.PD 1
.
.TP
.B sgi (仅用于 SGI)
原生 SGI 音频输出驱动
.PD 0
.RSs
.IPs "<输出设备名>"
显式选择音频输出设备/\:接口 (默认是: system-wide default)。
例如: "Analog Out" 或 "Digital Out"。
.RE
.PD 1
.
.TP
.B sun (仅用于 Sun)
原生 Sun 音频输出驱动
.PD 0
.RSs
.IPs <device>
显式选择音频设备 (默认是: /dev/\:audio)。
.RE
.PD 1
.
.TP
.B win32 (仅用于 Windows)
原生 Windows waveout 音频输出驱动
.
.TP
.B dsound (仅用于 Windows)
DirectX DirectSound 音频输出驱动
.PD 0
.RSs
.IPs device=<devicenum>
设置设备号。
用 \-v 播放文件能显示可用设备列表。
.RE
.PD 1
.
.TP
.B kai（仅适用于 OS/2）
OS/2 KAI 音频输出驱动
.PD 0
.RSs
.IPs uniaud
强制使用 UNIAUD 模式。
.IPs dart
强制使用 DART 模式。
.IPs (no)share
以共享或独占模式打开音频。
.IPs bufsize=<size>
设置缓冲大小为 <size>，以采样数为单位（默认值：2048）。
.RE
.PD 1
.
.TP
.B dart（仅适用于 OS/2）
OS/2 DART 音频输出驱动
.PD 0
.RSs
.IPs (no)share
以共享或独占模式打开 DART 输出。
.IPs bufsize=<大小>
将缓冲大小设为<大小>，单位为采样数（默认值：2048）。
.RE
.PD 1
.
.TP
.B dxr2 (也请参见 \-dxr2) (仅用于 DXR2)
Creative DXR2 专用的输出驱动
.
.TP
.B ivtv (仅用于 IVTV)
IVTV 专用的 MPEG 音频输出驱动。
只能与 \-ac hwmpa 一起用。
.
.TP
.B v4l2（需要Linux 2.6.22+的内核）
带有硬件MPEG解码器的V4L2卡的音频输出驱动。
.
.TP
.B mpegpes (仅用于 DVB)
DVB 卡音频输出驱动输出到 MPEG-PES 文件如果没安装 DVB 卡。
.PD 0
.RSs
.IPs card=<1\-4>
指定 DVB 卡如果有多于一个卡。
如果不指定，MPlayer 将搜索第一个可用的卡。
If not specified mplayer will search the first usable card.
.IPs file=<文件名>
输出文件名
.RE
.PD 1
.
.TP
.B "null\ \ \ "
不产生音频输出但维持视频回放速度。
基准测试用 \-nosound。
.
.TP
.B "pcm\ \ \ \ "
原始 PCM/wave 文件记录器的音频输出
.PD 0
.RSs
.IPs (no)waveheader
包括或不包括声波头 (默认是: 包括)。
如果不包括, 会产生原始的 PCM。
.IPs file=<文件名>
写声音到 <文件名> 而不是默认的 audiodump.wav。
如果没指定声波头, 默认是 audiodump.pcm。
.IPs "fast\ "
尝试比实时更快地转储。
确保输出不被截掉 (通常有 "缓冲中视频包太多" 消息)。
你得到消息 "你的系统太“慢”了, 播放不了!" 是正常的。
.RE
.PD 1
.
.TP
.B "plugin\ \ "
音频输出驱动插件
.
.
.
.SH "视频输出选项（仅适用于MPLAYER）"
.
.TP
.B \-adapter <参数值>
设置显卡接受图像。
用此选项带 \-v 能得到可用卡的列表。
目前只能与 directx 视频输出驱动一起工作。
.
.TP
.B \-bpp <深度>
重载自动检测的色彩深度。
只被 fbdev, dga, svga, vesa 视频输出驱动支持。
.
.TP
.B \-border
使用窗口边框和装饰来播放电影。
既然默认是启用, 使用 \-noborder 停用标准的窗口装饰。
.
.TP
.B \-brightness <\-100\-100>
调整视频信号的亮度 (默认是: 0)。
不被所有的视频输出驱动支持。
.
.TP
.B \-contrast <\-100\-100>
调整视频信号的对比度 (默认是: 0)。
不被所有的视频输出驱动支持。
.
.TP
.B \-display <名> (仅用于 X11)
指定你希望使用 X server 的主机名和显示号。
.sp 1
.I 示例:
.PD 0
.RSs
\-display xtest.localdomain:0
.RE
.PD 1
.
.TP
.B "\-dr \ \ \ "
打开直接渲染功能(还不被所有的编解码器视频输出支持)
.br
.I 警告:
可能导致 OSD/字幕 损坏!
.
.TP
.B \-dxr2 <选项1:选项2:...>
此选项用来控制 dxr2 视频输出驱动。
.RSs
.IPs ar-mode=<参数值>
宽高比模式 (0 = 普通, 1 = pan-and-scan, 2 = letterbox (默认))
.IPs iec958-encoded
设置 iec958 输出模式为 encoded。
.IPs iec958-decoded
设置 iec958 输出模式为 decoded (默认)。
.IPs macrovision=<参数值>
macrovision 模式 (0 = off (默认), 1 = agc, 2 = agc 2 colorstripe,
3 = agc 4 colorstripe)
.IPs "mute\ "
静音输出
.IPs unmute
非静音输出
.IPs ucode=<参数值>
microcode 的路径
.RE
.RS
.sp 1
.I TV output
.RE
.RSs
.IPs 75ire
启用 7.5 IRE 输出模式
.IPs no75ire
停用 7.5 IRE 输出模式 (默认)
.IPs "bw\ \ \ "
黑白电视输出
.IPs color
彩色电视输出 (默认)
.IPs interlaced
交错电视输出 (默认)
.IPs nointerlaced
停用交错电视输出
.IPs norm=<参数值>
TV 制式 (ntsc (默认), pal, pal60, palm, paln, palnc)
.IPs square-pixel
设置像素模式为 square
.IPs ccir601-pixel
设置像素模式为 ccir601
.RE
.RS
.sp 1
.I overlay
.RE
.RSs
.IPs cr-left=<0\-500>
设置左裁减值 (默认是: 50)。
.IPs cr-right=<0\-500>
设置右裁减值 (默认是: 300)。
.IPs cr-top=<0\-500>
设置上裁减值 (默认是: 0)。
.IPs cr-bottom=<0\-500>
设置下裁减值 (默认是: 0)。
.IPs ck-[r|g|b]=<0\-255>
设置叠加 color-key 的红(r), 绿(g)和蓝(b)增益。
.IPs ck-[r|g|b]min=<0\-255>
各自 color key 的最小值
.IPs ck-[r|g|b]max=<0\-255>
各自 color key 最大值
.IPs ignore-cache
忽略缓存的叠加设置。
.IPs update-cache
更新缓存的叠加设置。
.IPs ol-osd
启用叠加屏上显示(OSD)。
.IPs nool-osd
停用屏上显示(OSD) (默认)。
.IPs ol[h|w|x|y]-cor=<\-20\-20>
调整叠加尺寸(h,w) 和位置(x,y), 万一跟窗口匹配不够完美 (默认是: 0)。
.IPs overlay
激活叠加 (默认)。
.IPs nooverlay
激活电视输出。
.IPs overlay-ratio=<1\-2500>
调整叠加 (默认是: 1000)。
.RE
.
.TP
.B \-fbmode <模式名> (仅用于 \-vo fbdev)
改变视频模式为 /etc/\:fb.modes 中标记为 <模式名> 的模式。
.
.br
.I 注意:
VESA 帧缓冲不支持改变模式。
.
.TP
.B \-fbmodeconfig <文件名> (仅用于 \-vo fbdev)
重载帧缓冲模式的配置文件 (默认是: /etc/\:fb.modes)。
.
.TP
.B \-fs (也请参见 \-zoom)
全屏幕回放 (电影居中, 四周填充黑色条边)。
还不被所有的视频输出驱动支持。
.
.TP
.B \-fsmode\-dontuse <0\-31> (废弃, 使用 \-fs 选项)
如果你仍然有全屏问题试试此选项。
.
.TP
.B \-fstype <类型1,类型2,...> (仅用于 X11)
指定使用全屏模式的优先级列表。
你可以用前缀 "\-" 取消模式。
如果你遇到像全屏窗口被其他窗口遮住问题, 试试不同的顺序。
.br
.I 注意:
参见 \-fstype help 列出的全部可用模式的列表。
.sp 1
可用的类型有:
.sp 1
.PD 0
.RSs
.IPs above
如果可用的话, 使用 _NETWM_STATE_ABOVE 提示。
.IPs below
如果可用的话, 使用 _NETWM_STATE_BELOW 提示。
.IPs fullscreen
如果可用的话, 使用 _NETWM_STATE_FULLSCREEN 提示。
.IPs layer
与默认层一起使用 _WIN_LAYER 提示。
.IPs layer=<0...15>
与给定的层号一起使用 _WIN_LAYER 提示。
.IPs netwm
锁定 NETWM 风格。
.IPs "none\ "
清空模式列表；你可以之后添加要启用的模式。
.IPs stays_on_top
如果可用的话, 使用 _NETWM_STATE_STAYS_ON_TOP 提示。
.REss
.sp 1
.RS
.I 示例:
.RE
.PD 0
.RSs
.IPs layer,stays_on_top,above,fullscreen
如果指定了不正确的或不支持的模式, 默认的顺序作为备用而使用。
.IPs \-fullscreen
修复 OpenBox 1.x 的全屏开关。
.RE
.PD 1
.
.TP
.B \-geometry x[%][:y[%]] 或 [WxH][+-x+-y]
调整屏幕输出的初始位置。
x 和 y 代表从屏幕左上角到显示图像左上角的距离(以像素为单位)。
不过如果在参数值后有百分号记号, 参数值就变为该方向上的屏幕尺寸的百分数。
它也支持标准 X11 的 \-geometry 选项格式。在这种方式下，例如，‘+10-50’表示“放在距左
边界 10 个像素，距下边界 50 个像素的地方”，而‘--20+-10’表示“放在越出右边界 20 个像
素，越出上边界 10 个像素的地方。”
如果使用 \-wid 选项指定了外部窗口，那么 x 和 y 坐标是相对于窗口而不是屏幕的左上角。
坐标是相对于 \-xineramascreen 选项给出的屏幕，该屏幕用于完全支持 \-xineramascreen 的
视频输出的驱动（direct3d、gl、gl2、vdpau、x11、xv、xvmc、corevideo）。
The coordinates are relative to the screen given with \-xineramascreen for
the video output drivers that fully support \-xineramascreen (direct3d, gl, gl2,
vdpau, x11, xv, xvmc).
.br
.I 注意：
此选项仅被 x11、xmga、xv、xvmc、xvidix、gl、gl2、directx、fbdev、tdfxfb 和 
corevideo 视频输出驱动支持。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs 50:40
把窗口放在 x=50, y=40 处。
.IPs 50%:50%
把窗口放在屏幕中央。
.IPs "100%\ "
把窗口放在屏幕右边中央。
.IPs 100%:100%
把窗口放在屏幕右下角。
.RE
.PD 1
.
.TP
.B \-guiwid <窗口标识> (也请参见 \-wid) (仅用于 GUI)
告诉 GUI 也使用 X11 窗口并把自己钉在视频窗口的下方,
这对于将一个 mini-GUI 嵌入到浏览器时(比如 MPlayer 插件)有用。
.
.TP
.B \-hue <\-100\-100>
调视频信号的色调 (默认是: 0)。
你可以通过此选项得到负片效果的图像。
还不被所有视频输出驱动支持。
.
.TP
.B \-monitor\-dotclock <范围[,范围,...]> (仅用于 \-vo fbdev 和 vesa)
指定监视器的 dotclock 或 pixelclock 范围。
.
.TP
.B \-monitor\-hfreq <范围[,范围,...]> (仅用于 \-vo fbdev 和 vesa)
指定监视器的水平频率范围。
.
.TP
.B \-monitor\-vfreq <范围[,范围,...]> (仅用于 \-vo fbdev 和 vesa)
指定监视器的垂直频率范围。
.
.TP
.B \-monitoraspect <宽高比> (也请参见 \-aspect)
设置监视器或电视屏幕的宽高比。
值 0 将禁用先前的设置（例如，配置文件中的设置）。如果激活了，此
选项将改写 \-monitorpixelaspect 中的设置。
.sp 1
.I 示例:
.PD 0
.RSs
\-monitoraspect 4:3 或者 1.3333
.br
\-monitoraspect 16:9 或者 1.7777
.RE
.PD 1
.
.TP
.B \-monitorpixelaspect <宽高比> (也请参见 \-aspect)
设置监视器或电视屏幕的单像素宽高比（默认值：1）。
值 1 表示正方形像素((几乎?)对所有的 LCD 是正确的)。
.
.TP
.B \-name（仅用于 X11）
设置窗口类的名字。
.
.TP
.B \-nodouble
停用双缓冲, 多数用于调试目的。
双缓冲通过在内存里储存两帧来解决闪烁问题, 在显示一帧的同时解码另一帧。
会负面影响 OSD, 但常常能去除 OSD 闪烁。
.
.TP
.B \-nograbpointer
视频模式改变(\-vm)后, 不截获鼠标焦点。
对多输出头设置有用。
.
.TP
.B \-nokeepaspect
缩放窗口时不保持窗口的宽高比。
只能与 x11, xv, xmga, xvidix, directx 视频输出驱动一起工作。
而且在 X11 下你的窗口管理器必须尊重窗口宽高比的提示。
.
.TP
.B "\-ontop\ "
使得此播放器窗口位于其他窗口之上。
视频输出驱动使用 X11 的, 除了 SDL, 还有使用 directx, corevideo, quartz,
ggi 和 gl2 的都支持此功能。
.
.TP
.B \-panscan <0.0\-1.0>
启用 pan-and-scan 功能 (裁减如 16:9 电影的边适应 4:3 显示不带黑边)。
范围参数值用来控制裁减多少图像。
只能与 xv, xmga, mga, gl, gl2, quartz, corevideo 和 xvidix 的
视频输出驱动一起工作。
.br
.I 注意：
也允许 \-1 和 0 间的值，但这些值处于高度试验阶段，从而可能导致崩溃或更糟。
使用后果自负！
.
.TP
.B \-panscanrange <\-19.0\-99.0> (试验)
改变 pan-and-scan 功能的范围参数值 (默认是: 1)。
正值表示倍扩默认范围。
负值表示你可以放大到因子 \-panscanrange+1 所允许的范围。
例如 \-panscanrange \-3 允许缩放因子达到 4。
此特性属实验性, 不要报告相关错误除非你在用 using \-vo gl。
.
.TP
.B \-refreshrate <Hz>
设置监视器的刷新率(以 Hz 为单位)。
目前仅被 \-vo directx 与 \-vm 的组合支持。
.
.TP
.B \-rootwin
在根窗口(桌面背景)中播放电影。
虽然桌面背景图像可能盖住电影窗口。
只能与 x11, xv, xmga, xvidix, quartz, corevideo 和 directx 的
视频输出驱动一起工作。
.
.TP
.B \-saturation <\-100\-100>
调整视频信号的饱和度(默认值: 0)。
你可以通过此选项获得灰度输出。
还不被所有的视频输出驱动支持。
.
.TP
.B \-screenh <像素>
指定屏幕高度，如果视频输出驱动，如 fbdev, x11 和 TVout，不知道屏幕分辨率。
.
.TP
.B \-screenw <pixels>
指定屏幕宽度，如果视频输出驱动，如 fbdev, x11 和 TVout，不知道屏幕分辨率。
.
.TP
.B \-stop\-xscreensaver (仅用于 X11)
启动时关闭 xscreensaver, 退出时再打开它。
如果你的屏保程序不支持 XSS 或 XResetScreenSaver 的 API，则请使用 \-heartbeat\-cmd 选项。
.
.TP
.B \-title（另见 \-use\-filename\-title）
设置窗口的标题。
基于 X11 的视频输出驱动支持。
.
.TP
.B \-use\-filename\-title（另见 \-title）
当未使用 \-title 设置窗口的标题时，使用媒体的文件名设置。
基于 X11 的视频输出驱动支持。
.
.TP
.B "\-vm \ \ \ "
尝试改变不同的视频模式。
视频输出驱动支持的有 dga, x11, xv, sdl 和 directx。
如果用于 directx 视频输出驱动 \-screenw, \-screenh, \-bpp 和
\-refreshrate 选项可用来设置新的显示模式。
.
.TP
.B "\-vsync \ \ "
启用 VBI 用于 vesa, dfbmga 和 svga 视频输出驱动。
.
.TP
.B \-wid <窗口标识>（另见 \-guiwid）（仅用于 X11、OpenGL 和 DirectX）
该选项让 MPlayer 绑定至一个已有的窗口上。
适用于将 MPlayer 嵌入至浏览器中（比如扩展插件）。
该选项将完全充填所给的窗口，从而会缩放宽高比。MPlayer 不再负责诸如全景模式之类
的功能，而是由创建该窗口的应用程序管理。
.
.TP
.B \-xineramascreen <\-2\-...>
在 Xinerama 配置中(就是一个单一桌面展开在多个显示器上),
此选项告诉 MPlayer 把电影显示在哪个屏幕上。
值 \-2 表示全屏幕展开到整个虚拟的显示屏幕上（在这种情况下将完全忽略Xinerama的信
息），\-1 表示在目前窗口所在的显示屏上全屏幕。
通过 \-geometry 选项设置的初始位置是相对于指定屏幕的。
通常只能与 "\-fstype \-fullscreen" 或 "\-fstype none" 一起工作。
该选项不适用于仅仅设置启动屏幕（并且也不适合设置全屏屏幕），\-geometry 是目前可用
于此目的的最好选项。
至少 direct3d、gl、gl2、x11、xv 和 corevideo 视频输出驱动支持该选项。
.TP
.B \-zrbw (仅用于 \-vo zr)
黑白显示。
用于优化性能, 此选项可以与 "\-lavdopts gray" 组合使用。
.
.TP
.B \-zrcrop <[宽]x[高]+[x 偏移]+[y 偏移]> (仅用于 \-vo zr)
选择显示输入图像的一部分, 使用多个这样的选项就启动了 cinerama 模式。
在 cinerama 模式下电影分布在多个电视(或投影仪)上, 用于创建一个较大的图像。
在第 n 个 \-zrcrop 后面的选项应用于第 n 个 MJPEG 解码卡,
每一个编码卡至少需要有一个 \-zrcrop 选项加上一个 \-zrdev 选项。
请察看 \-zrhelp 的输出和文档 Zr 一节中的示例。
.
.TP
.B \-zrdev <设备> (仅用于 \-vo zr)
指定你的 MJPEG 编码卡使用的设备文件名, 默认情况下
此 zr 视频输出驱动使用它所能找到的第一个 v4l 设备。
.
.TP
.B \-zrfd (仅用于 \-vo zr)
强制简化取样: 简化取样由 \-zrhdec 和 \-zrvdec 指定,
一般只有在硬件缩放能把图像伸展到原始尺寸时才使用。
.
.TP
.B \-zrhdec <1|2|4> (仅用于 \-vo zr)
水平简化取样: 要求驱动只发送输入图像的每 2 或 4 行/\:像素到 MJPEG 编码卡,
并使用 MJPEG 卡的缩放器把图像回复到原始尺寸。
.
.TP
.B \-zrhelp (仅用于 \-vo zr)
显示一个列表包括所有 \-zr* 的选项, 它们的默认值和使用 cinerama 模式的例子
.
.TP
.B \-zrnorm <制式> (仅用于 \-vo zr)
指定电视制式为 PAL 或 NTSC (默认是: 不改变)。
.
.TP
.B \-zrquality <1\-20> (仅用于 \-vo zr)
从数值 1(最好) 到 20(最差) 代表 JPEG 编码质量。
.
.TP
.B \-zrvdec <1|2|4> (仅用于 \-vo zr)
垂直简化取样: 要求驱动只发送输入图像的每 2 或 4 行/\:像素到 MJPEG 编码卡,
并使用 MJPEG 卡的缩放器把图像回复到原始尺寸。
.
.TP
.B \-zrxdoff <x 显示偏移量> (仅用于 \-vo zr)
如果电影屏幕比电视的小, 此选项指定
相对于电视屏幕左上角的 x 偏移量 (默认是: 中央位置)。
.
.TP
.B \-zrydoff <y 显示偏移量> (仅用于 \-vo zr)
如果电影屏幕比电视的小, 此选项指定
相对于电视屏幕左上角的 y 偏移量 (默认是: 中央位置)。
.
.
.
.SH "视频输出驱动（仅适用于MPLAYER）"
视频输出驱动是各种视频输出设备的接口。
语法是:
.
.TP
.B \-vo <驱动1[:子选项1[=参数值]:...],驱动2,...[,]>
指定使用视频输出驱动的优先级列表。
.PP
如果列表尾有 "," MPlayer 使用没有列出的驱动作为后备。
子选项是可选的, 大多数省略。
.br
.I 注意:
已编译进的视频输出驱动参见于 \-vo help 的列表。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-vo xmga,xv,"
尝试使用 Matrox X11 驱动, 然后是 Xv 驱动, 再后是其他的。
.IPs "\-vo directx:noaccel"
使用加速特性关闭的 DirectX 驱动。
.RE
.PD 1
.sp 1
可用的视频输出驱动有:
.
.TP
.B xv (仅用于 X11)
使用 XFree86 4.x 的 XVideo 扩展来启用硬件加速回放。
如果你不能使用硬件指定的驱动, 这或许是最好的选项。
有关用了什么 colorkey 以及如何绘制的信息, 请运行 MPlayer
的 \-v 选项并注意开头有标签 [xv common] 的行。
.PD 0
.RSs
.IPs adaptor=<数值>
选择一个特定的 XVideo 适配器（请检查 xvinfo 的结果）。
.IPs port=<数值>
选择指定的 XVideo 端口。
.IPs ck=<cur|use|set>
选择用了 colorkey 的源 (默认是: cur)。
.RSss
.IPs cur
默认采用 Xv 中目前设置的 colorkey。
.IPs use
使用但不从 MPlayer (用 \-colorkey 选项来修改)来设置 colorkey。
.IPs set
同 use 一样但设置已提供的 colorkey。
.RE
.IPs ck-method=<man|bg|auto>
设置 colorkey 绘制方法 (默认是: man)。
.RSss
.IPs man
手动绘制 colorkey (减少某些情况下的闪烁)。
.IPs bg
设置 colorkey 作为窗口背景。
.IPs auto
让 Xv 绘制 colorkey。
.RE
.RE
.PD 1
.
.TP
.B x11 (仅用于 X11)
每当 X11 出场时, 共享内存的视频输出驱动虽没有硬件加速也能工作。
.
.TP
.B xover (仅用于 X11)
添加 X11 支持所有基于视频输出驱动的重叠。
目前仅被 tdfx_vid 支持。
.PD 0
.RSs
.IPs <vo_驱动>
选择此驱动作为源使用重叠在 X11 上面。
.RE
.PD 1
.
.TP
.B vdpau（与 \-vc ffmpeg12vdpau，ffwmv3vdpau，ffvc1vdpau，ffh264vdpau 或
ffodivxvdpau 一同使用）
使用 VDPAU 硬件解码视频的视频输出方式。
同时支持显示软件解码的视频。
.PD 0
.RSs
.IPs sharpen=<\-1\-1>
使用正数值时，将锐化算法应用于视频画面，
使用负数值时，则应用模糊算法（默认值：0）。
.IPs denoise=<0\-1>
将一种消除噪点的算法应用于视频画面（默认值：0，不消除噪点）。
.IPs deint=<0\-4>
选择反隔行扫描模式的算法（默认值：0）。
所有大于 0 的模式服从 \-field\-dominance 选项的设置。
.RSss
.IPs 0
不反隔行扫描。
.IPs 1
只显示第一个隔行扫描域，与 \-vf field 作用相类似。
.IPs 2
跳跃式反隔行扫描，与 \-vf tfields=1 作用相类似。
.IPs 3
适应运动画面的瞬间反隔行扫描。
可能在低性能视频硬件和/或高分辨率的情况下导致音视频不同步。
这是当“D”用于开启反隔行扫描时的默认值。
.IPs 4
采用边缘导向空间插值算法的适应运动画面的瞬间反隔行扫描。
需要高性能的视频硬件。
.RE
.IPs chroma\-deint
使瞬间反隔行扫描算法同时作用于亮度和色度通道上（默认值）。
使用 nochroma\-deint 以使其仅作用于亮度通道，从而加速高级反隔行扫描算法。
对于低速显存很有用。
.IPs pullup
尝试跳过逐行扫描帧的解除隔行扫描操作，适用于观看电视图像化的内容，高分辨率
的情况下需要高速的视频硬件。
仅适用于运动自适应瞬时解除隔行扫描操作。
.IPs colorspace
选择 YUV 至 RGB 转换时使用的色彩空间
通常标清（SD）内容应使用 BT.601，而高清（HD）内容用 BT.709。
使用不正确的色彩空间将导致稍许的饱和度过度或不足，以及色彩偏移。
.RSss
.IPs 0
根据视频分辨率判断色彩空间。
宽度大于 1280 或高度大于 576 的视频将被假定为 HD，从而使用 BT.709 色彩空间。
.IPs 1
使用 ITU-R BT.601 色彩空间（默认值）。
.IPs 2
使用 ITU-R BT.709 色彩空间。
.IPs 3
使用 SMPTE-240M 色彩空间。
.RE
.IPs hqscaling
.RSss
.IPs 0
使用默认的 VDPAU 缩放模式（默认值）。
.IPs 1\-9
应用高质量的 VDPAU 缩放模式（需要足够性能的硬件）。
.RE
.IPs force\-mixer
强制使用 VDPAU 混合器，其实现了所有以上选项（默认值）。
要允许显示 BGRA 色彩空间，则使用 noforce\-mixer。
（如果实际使用了BGRA，则禁用所有以上选项和硬件均衡器。）
.RE
.PD 1
.
.TP
.B xvmc (仅用于 X11 的 \-vc ffmpeg12mc)
视频输出驱动使用 XFree86 4.x 的 XvMC(X 视频运动补偿) 扩展
以加速 MPEG-1/2 和 VCR2 的解码。
.PD 0
.RSs
.IPs port=<数值>
选择指定的 XVideo 端口。
.IPs (no)benchmark
停用图像显示。
对于适当的驱动基准测试是必要的, 因为只会改变监视器 retrace 的图像缓冲 (nVidia)。
默认是不停用图像显示 (nobenchmark)。
.IPs (no)bobdeint
非常简单的去交错。
可能没有 \-vf tfields=1 好, 但是是 xvmc 仅有的去交错 (默认是: nobobdeint)。
.IPs (no)queue
显示帧排队, 以允许视频硬件更多的并行工作。
可能增加微小的 (不令人注意的) 常量去 A/V 同步(desync) (默认是: noqueue)。
.IPs (no)sleep
当等待完成渲染时, 使用睡眠功能(不推荐 Linux 使用) (默认是: nosleep)。
.IPs ck=cur|use|set
同 \-vo xv:ck 一样 (参见 \-vo xv)。
.IPs ck-method=man|bg|auto
同 \-vo xv:ck-method 一样 (参见 \-vo xv)。
.RE
.PD 1
.
.TP
.B dga (仅用于 X11)
通过 XFree86 Direct Graphics Access 扩展播放视频。
考虑废弃。
.
.TP
.B sdl（仅用于 SDL，漏洞多且过时）
高级平台独立的 SDL(简单 Directmedia 层) 库视频输出驱动。
既然 SDL 使用自己的 X11 层, MPlayer X11 选项对 SDL 没有影响。
注意该选项有数个非重要漏洞（总是忽略 \-vm/\-novm，\-fs 的行为如同 \-novm，
当从全屏模式切换回来时窗口在左上角，不支持全景模式……）
.PD 0
.RSs
.IPs driver=<驱动>
显式选择 SDL 驱动。
.IPs (no)forcexv
通过 sdl 视频输出驱动使用 XVideo (默认是: forcexv)。
.IPs (no)hwaccel
使用硬件加速的缩放 (默认是: hwaccel)。
.RE
.PD 1
.
.TP
.B "vidix\ \ "
VIDIX (VIDeo Interface for *niX) 是不同显卡的视频加速特性的接口。
非常快速的卡视频输出驱动支持它。
.PD 0
.RSs
.IPs <子设备>
明确表示选择使用哪个 VIDIX 子设备驱动。
可用的子设备有 cyberblade, ivtv, mach64,
mga_crtc2, mga, nvidia, pm2, pm3, radeon, rage128, s3, sh_veu,
sis_vid 和 unichrome。
.RE
.PD 1
.
.TP
.B xvidix (仅用于 X11 )
VIDIX 的 X11 前台
.PD 0
.RSs
.IPs <子设备>
同 vidix 一样
.RE
.PD 1
.
.TP
.B "cvidix\ "
通用的平台独立的 VIDIX 前台, 甚至能用 nVidia 卡运行在文本控制台。
.PD 0
.RSs
.IPs <子设备>
同 vidix 一样
.RE
.PD 1
.
.TP
.B winvidix (仅用于 Windows)
VIDIX 的 Windows 前台
.PD 0
.RSs
.IPs <子设备>
同 vidix 一样
.RE
.PD 1
.
.TP
.B direct3d（仅适用于 Windows）（公测代码！）
使用 Direct3D 接口的视频输出驱动（对于 Vista 系统很有用）。
.
.TP
.B directx (仅用于 Windows)
使用 DirectX 接口的视频输出驱动。
.PD 0
.RSs
.IPs noaccel
关闭硬件加速。
如果显示有问题, 尝试此选项。
.RE
.PD 1
.
.TP
.B kva（仅适用于 OS/2）
使用 libkva 接口的视频输出驱动。
.PD 0
.RSs
.IPs snap
强制使用 SNAP 模式。
.IPs wo
强制使用 WarpOverlay! 模式。
.IPs dive
强制使用 DIVE 模式。
.IPs (no)t23
启用或禁用解决 T23 笔记本问题的变通模式（默认值：禁用）。
如果你的显卡仅支持画面放大输出，尝试开启这个选项。
.RE
.PD 1
.
.TP
.B quartz (仅用于 Mac OS X)
Mac OS X Quartz 视频输出驱动。
在某些情况下, 锁定打包 YUV 输出格式, 如: \-vf format=yuy2, 可能更有效。
.PD 0
.RSs
.IPs device_id=<数值>
选择全屏显示设备。
.IPs fs_res=<宽>:<高>
指定全屏分辨率 (对慢系统有用)。
.RE
.PD 1
.
.TP
.B corevideo (Mac OS X 10.4 或 10.3.9 的 QuickTime 7)
Mac OS X CoreVideo 视频输出驱动
.PD 0
.RSs
.IPs device_id=<数值>
选择用于全屏模式的显示设备，或将其设为 \-1 以总是使用视频窗口所在的屏幕
（默认值：\-1 \- 自动选择）。
.IPs shared_buffer
将输出写入一块共享内存模式的缓冲区，而不是将其显示出来，并且尝试打开一个
已存在的 NSConnection 连接以与图形界面通信。
.IPs buffer_name=<名字>
shm_open 创建的共享缓冲区的名字，也是 MPlayer 尝试打开的 NSConnection 连接
的名字（默认值：“mplayerosx”）。
.RE
.PD 1
.
.TP
.B fbdev (仅用于 Linux)
使用内核帧缓冲播放视频。
.PD 0
.RSs
.IPs <设备>
显式选择 fbdev 设备名 (如 /dev/\:fb0), 或者如果设备名以 "vidix" 开始
选择 VIDIX 子设备名 (如: sis 驱动的 "vidixsis_vid")。
.RE
.PD 1
.
.TP
.B fbdev2 (仅用于 Linux)
使用内核帧缓冲播放视频, 另一种实现。
.PD 0
.RSs
.IPs <设备>
显式选择 fbdev 设备名 (默认是: /dev/\:fb0)。
.RE
.PD 1
.
.TP
.B "vesa\ \ \ "
非常通用的视频输出驱动, 应该能用于任何的 VESA VBE 2.0 兼容卡。
.PD 0
.RSs
.IPs (no)dga
打开或关闭DGA模式（默认为：打开）。
.IPs neotv_pal
激活 NeoMagic 电视输出并设置成 PAL 制式。
.IPs neotv_ntsc
激活 NeoMagic 电视输出并设置成 NTSC 制式。
.IPs vidix
使用 VIDIX 驱动
.IPs "lvo:\ \ \ "
激活 Linux 视频重叠在 VESA 模式上面。
.RE
.PD 1
.
.TP
.B "svga\ \ \ "
使用 SVGA 库播放视频。
.PD 0
.RSs
.IPs "<视频模式>"
指定使用的视频模式。
此模式以 <宽>x<高>x<颜色> 格式给出, 如 640x480x16M 或图形模式数字, 如 84。
.IPs bbosd
绘制 OSD 到(较慢)影片下方的黑条。
.IPs native
只使用原生的绘制功能。
避免直接渲染, OSD 和硬件加速。
.IPs retrace
强制帧打开垂直 retrace。
只与 \-double 合用有用。
同 \-vsync 选项的效果一样。
.IPs "sq\ \ \ "
尝试选择方像素视频模式。
.IPs vidix
使用 VIDIX 的 svga。
.RE
.PD 1
.
.TP
.B "gl\ \ \ \ \ "
OpenGL 视频输出驱动, 简版。
视频尺寸一定小于 OpenGL 实现的最大纹理尺寸。
瞄准能与甚至最基本的 OpenGL 实现一起工作,
但也利用较新的扩展, 允许支持更多的色彩空间和直接渲染。
要获取最佳的速度，请尝试类似于
.br
\-vo gl:yuv=2:rectangle=2:force\-pbo:ati\-hack \-dr \-noslices
.br
的选项。
此代码执行极少的检测, 所以如果某个特性不工作,
可能是因为你的卡或 OpenGL 实现不支持, 尽管连任何错误消息都没给你。
使用 glxinfo 或类似的工具以显示支持的 OpenGL 扩展。
.PD 0
.RSs
.IPs (no)ati\-hack
当使用了 PBO 时（当使用了 \-dr 或强制使用 \-pbo 时），AIT 驱动可能输出损坏的图像。
该选项修正这一问题，代价是多使用了一点内存。
.IPs (no)force\-pbo
总是使用 PBO 传输纹理，即使这需要额外的复制操作。
当前该选项对于 NVidia 驱动能提升一点速度，而对于 ATI 驱动则是大大提升。
可能需要 \-noslices 和 ati\-hack 子选项以使其正常工作。
.IPs (no)scaled-osd
当窗口大小改变时, 改变 OSD 的行为方式 (默认是: 停用)。
启用时, 行为就像其他的视频输出驱动, 对固定大小的字体更好。
停用时似乎对 FreeType 更有利并使用全屏模式的边框。
无法在使用 ass 字幕的情况下正确地工作（参见 \-ass）。作为替代性方法，你可以通过
\-vf ass在不用OpenGL的情况下渲染这种字幕。
.IPs osdcolor=<0xAARRGGBB>
OSD 颜色（默认值是：0x00ffffff，对应不透明的白色）。
.IPs rectangle=<0,1,2>
选择矩形纹理保存视频内存的方法, 但常常会更慢 (默认是: 0)。
.RSss
0: 使用 power-of-two 纹理 (默认)。
.br
1: 使用 GL_ARB_texture_rectangle 扩展。
.br
2: 使用 GL_ARB_texture_non_power_of_two 扩展。
在某些情况下仅软件支持所以非常慢。
.RE
.IPs swapinterval=<n>
两缓冲交换的最小间隔, 对已显示的帧计时 (默认是: 1)。
1 等价于启用 VSYNC, 0 等价于停用 VSYNC。
系统对小于 0 的值忽略保持自己的默认值。
此限制帧率到 (水平刷新率 / n)。
需要 GLX_SGI_swap_control 的支持。
某些(大多数/所有?)实现仅工作于全屏模式。
.IPs ycbcr
使用 GL_MESA_ycbcr_texture 扩展组件将 YUV 转换为 RGB 格式。
在大多数情况下，该方法很可能比使用软件转换成 RGB 慢。
.IPs yuv=<n>
选择 YUV 到 RGB 转换的类型。
默认方式是自动侦测，选取 0 到 2 之间的一个值。
.RSss
0：使用软件转换 。
兼容于所有的 OpenGL 版本。
提供亮度, 对比度和饱和度控制。
.br
1：使用寄存器组合。
这里使用 nVidia 专用的扩展 (GL_NV_register_combiners)。
至少需要三个纹理单位。提供饱和度和色调的控制。
此方法快速但不精确。
.br
2：使用片断程序。
需要 GL_ARB_fragment_program 扩展和至少三个纹理单位。
提供亮度, 对比度, 饱和度和色调控制。
.br
3：使用片断程序, 用到 POW 指令。
需要 GL_ARB_fragment_program 扩展和至少三个纹理单位。
提供亮度, 对比度, 饱和度, 色调和 gamma 控制。
对红, 绿和蓝色, Gamma 也能被独立设置。
方法 4 通常更快。
.br
4：使用片断程序及附加的查询。
需要 GL_ARB_fragment_program 扩展和至少四个纹理单位。
提供亮度, 对比度, 饱和度, 色调和 gamma 控制。
对红, 绿和蓝色, Gamma 也能被独立设置。
.br
5：使用 ATI 专用的方式（用于较老的显卡）。
这里使用 ATI 专用的扩展（GL_ATI_fragment_shader——不是
GL_ARB_fragment_shader！）。至少需要三个纹理单位。提供饱和度和色调的控制。
此方法快速但不精确。
.br
6：使用 3D 纹理通过查询做转换。
需要 GL_ARB_fragment_program 扩展和至少四个纹理单位。
既然使用一个纹理和边框像素, 在某些(所有?) ATI 卡上 (软件模拟) 极其慢。
提供亮度, 对比度, 饱和度, 色调和 gamma 控制。
对红, 绿和蓝色, Gamma 也能被独立设置。
速度比其他方法更多地依赖于 GPU 内存带宽。
.RE
.IPs colorspace
选择 YUV 至 RGB 转换所用的色彩空间
.RSss
.IPs 0
使用 MPlayer 通常使用的公式（默认值）。
.IPs 1
使用 ITU-R BT.601 色彩空间。
.IPs 2
使用 ITU-R BT.709 色彩空间。
.IPs 3
使用 SMPTE-240M 色彩空间。
.RE
.IPs levelconv=<n>
选择用于 YUV 至 RGB 转换的亮度等级转换方式。
.RSss
.IPs 0
将 TV 等级转换为 PC 等级（默认值）。
.IPs 1
将 PC 等级转换为 TV 等级。
.IPs 2
不作任何转换。
.RE
.IPs lscale=<n>
选择用于亮度调整的调节函数。
仅对 yuv 模式 2、3、4 和 6 有效。
.RSss
0: 使用简单线性过滤 (默认)。
.br
1：使用双立方体B曲线过滤 (较好的质量)。
需要一个额外的纹理单位。
至少在全屏模式, 较旧的卡不能处理色度。
.br
2：在水平方向使用立方体过滤，在垂直方向使用线性过滤。比起方式1适用于稍多的显卡。
.br
3：与 1 相同，但不使用参照纹理。
可能在一些显卡上运行较快。
.br
4：使用实验性的非锐化的蔽码，参数为支持 3x3 和 0.5 的默认强化值。（参见 filter-strength）
.br
5：使用实验性的非锐化的蔽码，参数为支持 5x5 和 0.5 的默认强化值。（参见 filter-strength）
.RE
.IPs cscale=<n>
选择缩放功能供调节色度.
详情参见 lscale。
.IPs filter-strength=<值>
设置支持该强度值的 lscale/cscale 滤镜的效果强度。
.IPs customprog=<文件名>
从 <文件名> 装载定制的片断程序。
示例参见 TOOLS/edgedect.fp。
.IPs customtex=<文件名>
从 <文件名> 装载定制的 "gamma ramp" 纹理。
能用于与 yuv=4 或 customprog 选项的组合。
.IPs (no)customtlin
如果启用(默认), 使用 GL_LINEAR 插值, 否则使用 GL_NEAREST 用于 customtex 纹理。
.IPs (no)customtrect
如果启用, 使用 texture_rectangle 用于 customtex 纹理。默认是停用。
.IPs (no)mipmapgen
一旦启用，将自动生成视频的贴图。该选项与 customprog 和 TXB 一起使用
有助于实现一个具有大影响半径的模糊滤镜。
对于大多数 OpenGL 的实现产品来说，该选项作用于任何非 RGB 的格式都很慢。
默认值为禁用。
.RE
.sp 1
.RS
正常情况下没有理由使用以下选项，它们大多是为了测试而存在的。
.RE
.sp 1
.RSs
.IPs (no)glfinish
在交换缓存前调用glFinish()。
较慢但在某些情况下输出更精确（默认：禁用）。
.IPs (no)manyfmts
允许支持更多的色彩格式（RGB和BGR）（默认：允许）。
要求OpenGL版本>=1.2。
.IPs slice-height=<0\-...>
所复制的单片纹理中包含多少行内容（默认值：0）。
0代表整幅图像。
.br
.I 注意：
如果使用了YUV色彩空间（参见yuv子选项），将使用特别的规则：
.RSss
如果解码器采用分片渲染方式（参见\-noslices），该设置没有任何效果，所采用的分片大
小由解码器提供。
.br
如果解码器不采用分片泻染方式，则默认值为16。
.RE
.IPs (no)osd
允许或禁止通过OpenGL支持OSD渲染（默认：允许）。
此选项用于测试；而禁用OSD应使用\-osdlevel 0。
.IPs (no)aspect
允许或禁止支持保持比例缩放和全景缩放方式（默认：允许）。
禁用的话可能提高速度。
.REss
.RE
.PD 1
.
.TP
.B "gl2\ \ \ \ "
OpenGL 视频输出驱动的修改版。
支持大于最大纹理尺寸的视频，但是缺少许多 GL 驱动的高级功能和优化选项，并且以后也
不大可能扩展功能。
.PD 0
.RSs
.IPs (no)glfinish
同 gl 一样 (默认是: 启用)
.IPs yuv=<n>
选择 YUV 到 RGB 转换的类型。
如果设置不同于 0 的其它值 OSD 被停用, 而亮度, 对比度和
gamma 的设置只能是通过全局的 X 服务器的设置才有效。
其它的值的意思同 \-vo gl 一样。
.REss
.
.TP
.B matrixview
基于 OpenGL 的渲染器，生成类似于黑客帝国的滚动字幕效果。
.PD 0
.RSs
.IPs cols=<n>
所显示文字的列数。
受限于图像缩放器的性能，值太小（<16）的话该选项很可能失效。
不能被 16 整除的值也可能产生问题。
.IPs rows=<n>
所显示文字的行数。
受限于图像缩放器的性能，值太小（<16）的话该选项很可能失效。
不能被 16 整除的值也可能产生问题。
.REss
.
.TP
.B "null\ \ \ "
不产生视频输出。
对基准测试有用。
.
.TP
.B "aa\ \ \ \ \ "
ASCII art 视频输出驱动工作于文字控制台。
通过执行 \-vo aa:help，你能得到可用子选项的列表和解释。
.br
.I 注意：
该驱动不能正确处理 \-aspect 选项。
.br
.I 提示：
你很可能得指定 \-monitorpixelaspect 选项。
试试‘mplayer \-vo aa \-monitorpixelaspect 0.5’。
.
.TP
.B "caca\ \ \ "
彩色 ASCII art 视频输出驱动工作于文字控制台。
.
.TP
.B "bl\ \ \ \ \ "
使用 Blinkenlights UDP 协议回放视频。
此驱动高度特定于硬件。
.PD 0
.RSs
.IPs <子设备>
显式选择 Blinkenlights 子设备。
这多少有点像 arcade:host=localhost:2323 或 hdl:file=文件名1,file=文件名2。
你必须指定一个子设备。
.RE
.PD 1
.
.TP
.B "ggi\ \ \ \ "
GGI 图形系统视频输出驱动
.PD 0
.RSs
.IPs <驱动>
显式选择 GGI 驱动。
替换任何的 "," 为 "."。
.RE
.PD 1
.
.TP
.B directfb
使用 DirectFB 库播放视频 。
.PD 0
.RSs
.IPs (no)input
使用 DirectFB 替代 MPlayer 键盘码 (默认是: 启用)。
.IPs buffermode=single|double|triple
如果想避免撕裂问题, 双倍和三倍缓冲是最好的结果。
三倍缓冲比双倍缓冲更有效, 因为它等待垂直 retrace 时不限制 MPlayer。
单一缓冲应避免 (默认是: 单一)。
.IPs fieldparity=top|bottom
为交错帧控制输出次序 (默认是: 停用)。
有效值 top = 先顶域, bottom = 先底域。
此选项对逐行(像大多数 MPEG)影片不影响。
如果观看交错影片时遇到撕裂问题或动作不顺畅, 需启用此选项。
.IPs layer=N
锁定回放的层标识 N (默认值：\-1——自动)。
.IPs dfbopts=<list>
指定 DirectFB 参数列表。
.RE
.PD 1
.
.TP
.B "dfbmga\ "
Matrox G400/\:G450/\:G550 专用的视频输出驱动
使用 DirectFB 库以利用特别的硬件特性。
启用 CRTC2 (第二头), 独立于第一头显示视频。
.PD 0
.RSs
.IPs (no)input
同 directfb 一样 (默认是: 停用)
.IPs buffermode=single|double|triple
同 directfb  一样(默认是: triple)
.IPs fieldparity=top|bottom
同 directfb 一样
.IPs (no)bes
启用 Matrox BES(后台缩放) (默认是: 停用)。
因为图像插值过程在硬件里完成, 结果是非常好的速度和输出质量。但仅工作于主头。
.IPs (no)spic
利用 Matrox 子图像层显示 OSD (默认是: 启用)。
.IPs (no)crtc2
用第二头打开电视输出 (默认是: 启用)。
输出质量出奇的好, 因为这是交错图像对每个奇/\:偶域有恰当的同步。
.IPs tvnorm=pal|ntsc|auto
设置 Matrox 卡的电视制式不需要改变 /etc/\:directfbrc (默认是: 停用)。
有效的制式是 pal = PAL, ntsc = NTSC。
特别的制式是 auto (auto-仅仅使用 PAL/\:NTSC),
因为是通过察看影片的帧率决定使用什么制式。
.RE
.PD 1
.
.TP
.B mga (仅用于 Linux )
Matrox 专用的视频输出驱动通过内核模式利用 Gxxx 卡的 YUV 后台缩放器。
如果有 Matrox 卡, 这是最快的选项。
.PD 0
.RSs
.IPs <设备名>
显式选择 Matrox 设备名 (默认是: /dev/\:mga_vid)。
.RE
.PD 1
.
.TP
.B xmga (仅用于 Linux, X11)
mga 视频输出驱动, 运行在 X11 窗口。
.PD 0
.RSs
.IPs <设备名>
显式选择 Matrox 设备名 (默认是: /dev/\:mga_vid)。
.RE
.PD 1
.
.TP
.B s3fb（仅适用于Linux）（另参见 \-vf yuv2 和 \-dr）
S3 Virge专用的视频输出驱动。
此驱动支持显卡的YUV转换与缩放、双重缓冲和直接渲染的功能。
使用\-vf yuy2以采用硬件加速下的YUV2渲染，这种方式在此款显卡下比YV12快很多。
.PD 0
.RSs
.IPs <device>
明确表示选择使用哪个fbdev设备名（默认值：/dev/\:fb0）。
.RE
.PD 1
.
.TP
.B wii（仅适用于 Linux）
任天堂 Wii/GameCube 专用的视频输出驱动。
.
.TP
.B 3dfx (仅用于 Linux)
3dfx 专用的视频输出驱动，此驱动在 X11 上直接使用硬件。
只支持 16 bpp。
.
.TP
.B tdfxfb (仅用于 Linux)
此驱动使用 tdfxfb 帧缓冲驱动以在3dfx卡上的使用YUV加速播放影片。
.PD 0
.RSs
.IPs <设备名>
显式选择 fbdev 设备名 (默认是: /dev/\:fb0)。
.RE
.PD 1
.
.TP
.B tdfx_vid (仅用于 Linux)
3dfx 专用的视频输出驱动，此驱动与tdfx_vid内核模块协同工作。
.PD 0
.RSs
.IPs <设备名>
显式选择设备名 (默认是: /dev/\:tdfx_vid)。
.RE
.PD 1
.
.TP
.B dxr2 (也请参见 \-dxr2) (仅用于 DXR2)
Creative DXR2 专用的视频输出驱动。
.PD 0
.RSs
.IPs <vo_driver>
输出视频子驱动用作重叠 (x11, xv)。
.RE
.PD 1
.
.TP
.B dxr3 (仅用于 DXR3)
Sigma Designs em8300 MPEG 解码器芯片 (Creative DXR3, Sigma Designs
Hollywood Plus) 专用的视频输出驱动。
也请参见 lavc 视频过滤器。
.PD 0
.RSs
.IPs overlay
激活重叠代替电视输出。
.IPs prebuf
打开预缓冲。
.IPs "sync\ "
将打开新的 sync-engine。
.IPs norm=<制式>
指定电视制式。
.RSss
0: 不改变目前制式 (默认)。
.br
1: 使用 PAL/\:NTSC 自动调节。
.br
2: 使用 PAL/\:PAL-60 自动调节。
.br
3: PAL
.br
4: PAL-60
.br
5: NTSC
.RE
.IPs <0\-3>
如果有多于一个 em8300 卡, 指定设备号。
.RE
.PD 1
.
.TP
.B ivtv（仅适用于 IVTV）
Conexant CX23415 (iCompression iTVC15) 或 Conexant CX23416 (iCompression
iTVC16) MPEG 解码器芯片 (Hauppauge WinTV PVR-150/250/350/500)
专用的视频输出驱动供电视输出。
也请参见 lavc 视频过滤器。
.PD 0
.RSs
.IPs <device>
显式选择 MPEG 解码器设备名 (默认是: /dev/video16)。
.IPs <output>
显式选择电视输出用于视频信号。
.RE
.PD 1
.
.TP
.B v4l2（需要Linux 2.6.22+的内核）
带有内建硬件MPEG解码器的V4L2标准扩展卡的视频输出驱动。
另参见lavc视频滤镜。
.PD 0
.RSs
.IPs <device>
明确选定所使用的MPEG解码设备的名称（默认值：/dev/video16）。
.IPs <output>
明确选定用于视频信号的电视输出输出口。
.RE
.PD 1
.
.TP
.B mpegpes (仅用于 DVB)
视频输出驱动用于 DVB 卡写输出到一个 MPEG-PES 文件, 如果没有安装 DVB 卡。
.PD 0
.RSs
.IPs card=<1\-4>
如果有多于一个 DVB 输出卡, 指定设备号 (仅适用于 V3 API, 比如 1.x.y 驱动系列)。
如果不指定，MPlayer 将搜索第一个可用的卡。
.IPs <文件名>
输出文件名 (默认是: ./grab.mpg)
.RE
.PD 1
.
.TP
.B zr (也请参见 \-zr* 和 \-zrhelp)
一些 MJPEG 捕捉/\:回放卡的视频输出驱动。
.
.TP
.B zr2 (也请参见 zrmjpeg 视频 过滤器)
一些 MJPEG 捕捉/\:回放卡的视频输出驱动, 第二代。
.PD 0
.RSs
.IPs dev=<设备>
指定视频设备。
.IPs norm=<PAL|NTSC|SECAM|auto>
指定视频制式 (默认是: auto)。
.IPs (no)prebuf
激活或撤销预缓冲, 还没被支持。
.RE
.PD 1
.
.TP
.B "md5sum\ "
计算每帧的 MD5 和并写入文件。
支持 RGB24 和 YV12 色彩空间。
对调试有用。
.PD 0
.RSs
.IPs outfile=<参数值>
指定输出文件名 (默认是: ./md5sums)。
.RE
.PD 1
.
.TP
.B yuv4mpeg
变换视频流为无压缩 YUV 4:2:0 图像序列并储存到文件 (默认是: ./stream.yuv)。
格式与 mjpegtools 所用的一样,
所以如果想要用 mjpegtools 套装软件处理视频, 这就有用。
它支持 YV12, RGB (24 bpp) 和 BGR (24 bpp) 格式。
能与 \-fixed\-vo 选项组合来连接具有相同维数和 fps 值的文件。
.PD 0
.RSs
.IPs interlaced
作为交错帧写输出, 先顶域。
.IPs interlaced_bf
作为交错帧写输出, 先底域。
.IPs file=<文件名>
写输出到 <文件名> 代替默认的 stream.yuv。
.REss
.PD 1
.RS
.sp 1
.I 注意:
如果你不指定任何选项, 输出的是逐行的(即没有交错的)。
.RE
.
.TP
.B "gif89a\ "
输出每帧到当前目录的单个动画 GIF 文件。
仅支持 24 bpp 的 RGB 格式并转换输出为 256 色。
.PD 0
.RSs
.IPs <fps>
指定浮点数帧率 (默认是: 5.0)。
.IPs <output>
指定输出文件名 (默认是: ./out.gif)。
.REss
.PD 1
.RS
.sp 1
.I 注意:
你必须在指定文件名之前指定帧率, 否则帧率成为文件名的一部分。
.sp 1
.I 示例:
.RE
.PD 0
.RSs
mplayer video.nut \-vo gif89a:fps=15.0:output=test.gif
.RE
.PD 1
.
.TP
.B "jpeg\ \ \ "
输出每帧到当前目录的 JPEG 文件。
每帧以前面 0 填充引导的帧号作为文件名。
.PD 0
.RSs
.IPs [no]progressive
指定标准的或逐行的 JPEG (默认是: noprogressive)。
.IPs [no]baseline
指定是否使用基线 (默认是: baseline)。
.IPs optimize=<0\-100>
优化因子 (默认是: 100)
.IPs smooth=<0\-100>
平滑因子 (默认是: 0)
.IPs quality=<0\-100>
质量因子 (默认是: 75)
.IPs outdir=<dirname>
指定保存 JPEG 文件的目录 (默认是: ./)。
.IPs subdirs=<前缀>
创建编号的子目录保存文件, 用指定的前缀而不是用当前的目录。
.IPs "maxfiles=<参数值>（仅用于 subdirs）"
用于在每个子目录保存文件的最大编号。
必须大于或等于 1 (默认是: 1000)。
.RE
.PD 1
.
.TP
.B "pnm\ \ \ \ "
输出每帧到当前目录的 PNM 文件。
每帧以前面 0 填充引导的帧号作为文件名。
它在 raw 和 ASCII 模式下支持 PPM, PGM 和 PGMYUV 文件。
也请参见 pnm(5), ppm(5) 和 pgm(5)。
.PD 0
.RSs
.IPs "ppm\ \ "
写 PPM 文件 (默认)。
.IPs "pgm\ \ "
写 PGM 文件。
.IPs pgmyuv
写 PGMYUV 文件。
PGMYUV 像 PGM, 但也包含 U 和 V 平面, 添加在图像的底部。
.IPs "raw\ \ "
在 raw 模式下写 PNM 文件 (默认)。
.IPs ascii
在 ASCII 模式下写 PNM 文件。
.IPs outdir=<目录名>
指定目录保存 PNM 文件 (默认是: ./)。
.IPs subdirs=<前缀>
创建编号的子目录保存文件, 用指定的前缀而不是用当前的目录。
.IPs maxfiles=<参数值> (仅用于 subdirs)
用于在每个子目录保存文件的最大编号。
必须大于或等于 1 (默认是: 1000)。
.RE
.PD 1
.
.TP
.B "png\ \ \ \ "
输出每帧到当前目录的 PNG 文件。
每帧以前面 0 填充引导的帧号作为文件名。
支持 24 bpp 的 RGB 和 BGR 格式。
.PD 0
.RSs
.IPs z=<0\-9>
指定压缩级别。
0 没压缩, 9 最强压缩。
.IPs outdir=<目录名>
指定保存 PNG 文件的目录（默认值：./）。
.IPs alpha（默认值：noalpha）
创建使用 alpha 通道的 PNG 文件。
注意 MPlayer 通常不支持 alpha 通道，所以该选项只在极少数情况下才有用。
.RE
.PD 1
.
.TP
.B "tga\ \ \ \ "
输出每帧到当前目录的 Targa 文件。
每帧以前面 0 填充引导的帧号作为文件名。
此视频输出驱动的目的是拥有一个简单无损失的图像绘制器且不需要任何外部库。
支持 15, 24 和 32 bpp 的 BGR[A] 色彩格式。
你能锁定一个特殊的格式带视频格式过滤器。
.sp 1
.I 示例:
.RE
.PD 0
.RSs
mplayer video.nut \-vf format=bgr15 \-vo tga
.RE
.PD 1
.
.
.
.SH "解码/过滤器选项"
.
.TP
.B \-ac <[\-|+]编解码器1,[\-|+]编解码器2,...[,]>
按照在 codecs.conf 中音频编解码器的名称, 指定使用它们的优先级列表。
编解码器名称前使用 "\-" 表示忽略它。
编解码器名称前使用 "+" 表示锁定它, 这有可能会崩溃!
如果列表尾有 "," MPlayer 使用没有列出的编解码器作为后备。
.br
.I 注意:
可用的编解码器其完整列表请参见 \-ac help。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-ac mp3acm"
锁定 l3codeca.acm MP3 编解码器。
.IPs "\-ac mad,"
先尝试 libmad, 其它作为后备。
.IPs "\-ac hwac3,a52,"
先尝试通过硬件解码AC-3, 然后是软件AC-3, 最后是其它。
.IPs "\-ac hwdts,"
先尝试通过硬件解码DTS, 然后是其它。
.IPs "\-ac \-ffmp3,"
跳过 FFmpeg 的 MP3 编解码器。
.RE
.PD 1
.
.TP
.B \-af\-adv <force=(0\-7):list=(filters)> (也请参见 \-af)
指定高级音频过滤器选项:
.RSs
.IPs force=<0\-7>
锁定音频过滤器的插入为下面其中之一:
.RSss
0: 使用完全自动的过滤器插入（目前与选项 1 相同）。
.br
1: 精度优化 (默认)。
.br
2: 速度优化。
.I 警告:
某些音频过滤器特性可能默默地消失, 且音质可能下降。
.br
3: 使用无自动的过滤器插入且无优化。
.I 警告:
使用此设定可能使 MPlayer 崩溃。
.br
4: 根据 0 以上的, 使用自动的过滤器插入,
但尽可能使用浮点处理。
.br
5: 根据 1 以上的, 使用自动的过滤器插入,
但尽可能使用浮点处理。
.br
6: 根据 2 以上的, 使用自动的过滤器插入,
但尽可能使用浮点处理。
.br
7: 根据 3 以上的, 使用自动的过滤器插入,
但尽可能使用浮点处理。
.REss
.IPs list=<过滤器列表>
同 \-af 一样。
.RE
.
.TP
.B \-afm <驱动1,驱动2,...>
按照在 codecs.conf 中音频编解码器族的名称, 指定使用它们的优先级列表。
如果给定的编解码器族没一个能工作, 使用默认的后备编解码器族。
如果列表尾有 "," MPlayer 使用没有列出的编解码器作为后备。
.br
.I 注意:
可用的编解码器族其完整列表请参见 \-afm help。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-afm ffmpeg"
先尝试 FFmpeg 的 libavcodec 编解码器。
.IPs "\-afm acm,dshow"
先尝试 Win32 编解码器。
.RE
.PD 1
.
.TP
.B \-aspect <高宽比> (也请参见 \-zoom)
重载影片的高宽比, 万一播放中的文件的高宽比信息不正确或缺少。
.sp 1
.I 示例:
.PD 0
.RSs
\-aspect 4:3  或 \-aspect 1.3333
.br
\-aspect 16:9 或 \-aspect 1.7777
.RE
.PD 1
.
.TP
.B \-noaspect
停用影片高宽比的自动补偿。
.
.TP
.B "\-field\-dominance <\-1\-1>"
设置隔行扫描内容的第一个域。
对于那些使帧速加倍的去隔行扫描器来说那很有用：\-vf tfields=1，\-vf yadif=1，
\-vo vdpau:deint 和 \-vo xvmc:bobdeint。
.PD 0
.RSs
.IPs \-1
自动（默认值）：如果解码器不导出适当的信息的话，其将设回为0（上半域）。
.IPs 0
上半域为第一个域
.IPs 1
下半域为第一个域
.RE
.PD 1
.
.TP
.B "\-flip \ "
上下翻转图像。
.
.TP
.B \-lavdopts <选项1:选项2:...> (调试代码)
指定 libavcodec 解码参数。
用逗号分隔多重选项。
.sp 1
.I 示例:
.PD 0
.RSs
\-lavdopts gray:skiploopfilter=all:skipframe=nonref
.RE
.PD 1
.sp 1
.RS
可用的选项有:
.RE
.RSs
.IPs bitexact
对所有的解码步骤只用 bit-exact 算法 (用于编解码测试)。
.IPs bug=<参数值>
手工绕过编码器错误:
.RSss
0: 无
.br
1: 自动检测错误 (默认)
.br
2 (msmpeg4v3): 老式 lavc 生成的 msmpeg4v3 文件 (不自动检测)
.br
4 (mpeg4): Xvid 交错错误 (如果 fourcc==XVIX, 会自动检测)
.br
8 (mpeg4): UMP4 (如果 fourcc==UMP4, 会自动检测)
.br
16 (mpeg4): 填补错误 (自动检测)
.br
32 (mpeg4): 非法 vlc 错误 (每个 fourcc 都自动检测)
.br
64 (mpeg4): Xvid 或 DivX qpel 错误 (每个 fourcc/\:版本都自动检测)
.br
128 (mpeg4): 旧标准的 qpel (每个 fourcc/\:版本都自动检测)
.br
256 (mpeg4): 另一个 qpel 错误 (每个 fourcc/\:版本都自动检测)
.br
512 (mpeg4): direct-qpel-blocksize 错误 (每个 fourcc/\:版本都自动检测)
.br
1024 (mpeg4): 边沿填补错误 (每个 fourcc/\:版本都自动检测)
.REss
.IPs debug=<参数值>
显示调试信息。
.RSss
.br
0: 停用
.br
1: 图像信息
.br
2: 率控制
.br
4: 比特流
.br
8: 宏块(MB)类型
.br
16: 每块的量化参数(QP)
.br
32: 运动矢量
.br
0x0040: 运动矢量可视化 (使用 \-noslices)
.br
0x0080: 宏块(MB)跳略
.br
0x0100: 启动码
.br
0x0200: PTS
.br
0x0400: 错误恢复力(resilience)
.br
0x0800: 内存管理控制操作(H.264)
.br
0x1000: 错误
.br
0x2000: 可视化量化参数(QP), QP 值越低着色越绿。
.br
0x4000: 可视化块型。
.REss
.IPs ec=<参数值>
设置错误隐藏策略。
.RSss
1: 对受损的宏块使用强去块(deblock)过滤器。
.br
2: 往返式运动矢量(MV)搜寻 (慢)
.br
3: 全部 (默认)
.REss
.IPs er=<参数值>
设置错误恢复力策略。
.RSss
.br
0: 停用
.br
1: 谨慎的 (应该能用于破编码器。)
.br
2: 正常的 (默认) (用于正常的编码器。)
.br
3: 挑衅的 (更多检查, 但是连有效的比特流也可能导致问题。)
.br
4: 非常挑衅的
.REss
.IPs "fast （仅用于MPEG-2、MPEG-4和H.264）"
启用与标准不符的优化，并且可能导致一些潜在的问题, 诸如简化反量化步聚，想当然地使
用默认的量化矩阵，想当然地采用YUV 4:2:0，以及跳过一些检测受损比特流的检查步骤。
.IPs "gray\ "
只灰度图像解码 (比彩色解码快一点)
.IPs "idct=<0\-99> (参见 \-lavcopts)"
为了最佳的解码品质, 使用与编码和解码时相同的 IDCT 算法。
不过这可能会牺牲一些精确性。
.IPs lowres=<数值>[,<宽度>]
以较低的分辨率解码。
低分辨率解码还不被所有的边界码器支持, 且常常导致难看的图像。
这不是有错误, 只是一个副作用, 全分辨率时不解码。
.RSss
.br
0: 停用
.br
1: 1/2 分辨率
.br
2: 1/4 分辨率
.br
3: 1/8 分辨率
.REss
.RS
如果 <宽度> 指定了, 就使用了低分辨率解码,
只要视频的宽度宽过(is major than)或等于 <宽度>。
.RE
.B o=<键>=<值>[,<键>=<值>[,...]]
传递 AVOption 选项至 libavcoder 解码器。
注意，欢迎制造一个使 o= 不再需要，而将所有未知选项传递至 AVOption 系统的补丁。
AVOption 的完整列表可在 FFmpeg 用户手册中找到。
注意某些选项可能与 MEncoder 选项冲突。
.sp 1
.RS
.I 示例：
.RE
.RSs
.PD 0
.IPs o=debug=pict
.PD 1
.RE
.IPs "sb=<数值> (仅用于 MPEG-2)"
跳过宏块底部的制定行数。
.IPs "st=<数值> (仅用于 MPEG-2)"
跳过宏块顶部的制定行数。
.IPs "skiploopfilter=<跳略值>（仅用于 H.264）"
在 H.264 解码期间跳过循环过滤器(亦称为 "去块")。
既然被过滤的帧被当作解码依赖帧的引用, 在品质上
这比不进行去块步骤, 如不对 MPEG-2 视频去块, 效果更差。
但是至少对高比特流的 HDTV 提供了大的提速且不损失视觉品质。
.sp 1
<跳略值> 可以是以下的值之一:
.RSss
.br
none: 从不跳过。
.br
default: 跳过无用的处理步骤 (如: AVI 中的 0 大小的包)。
.br
nonref: 跳过没被引用的帧 (即, 不用于解码其它的帧, 错误不能 "兴旺")。
.br
bidir: 跳过 B-帧。
.br
nonkey: 跳过所有的帧除了 keyframes。
.br
all: 跳过所有的帧。
.REss
.IPs "skipidct=<跳略值> (仅用于 MPEG1/2)"
跳过 IDCT 步骤。
在几乎所有的情况下此步骤使得品质降级许多
(可用的跳略值请参见 skiploopfilter)。
.IPs skipframe=<跳略值>
完全跳过解码帧。
大的提速, 但是有痉挛的动作或有时糟糕的图像
(可用的跳略值请参见 skiploopfilter)。
.IPs "threads=<1\-8>（仅用于 MPEG-1/2 和 H.264）"
用于解码的线程数 (默认是: 1)
.IPs vismv=<参数值>
可视化运动矢量。
.RSss
.br
0: 停用
.br
1: 可视化 P-帧的前瞻运动矢量。
.br
2: 可视化 B-帧的前瞻运动矢量。
.br
4: 可视化 B-帧的后瞻运动矢量。
.REss
.IPs vstats
打印一些统计量并保存到 ./vstats_*.log。
.RE
.
.TP
.B \-noslices
停用 16-像素高的片/\:条方式绘制视频, 而是一次绘制整个帧。
可能更快或更慢, 取决于显卡和可用的缓存。
它只对 libmpeg2 和 libavcodec 编解码器有效。
.
.TP
.B \-nosound
不播放/\:编码声音。
对基准测试有用。
.
.TP
.B \-novideo
不播放/\:编码视频。
但在许多情况下不工作, 请使用 \-vc null \-vo null 替代。
.
.TP
.B \-pp <品质> (也请参见 \-vf pp)
设置 DLL 的后期处理级别。
仅可以用于有内部后期处理例程的 Win32 DirectShow DLL。
此选项不再对 \-vf pp 有用。
\-pp 参数值的有效范围依编解码器不同而不同, 大部分为
0\-6, 其中 0=禁用 6=最慢/\:最好。
.
.TP
.B \-pphelp (也请参见 \-vf pp)
显示可用的后期处理滤镜及其用法的简介。
.
.TP
.B \-ssf <模式>
指定软件缩放参数。
.sp 1
.I 示例:
.PD 0
.RSs
\-vf scale \-ssf lgb=3.0
.RE
.PD 1
.PD 0
.RSs
.IPs lgb=<0\-100>
高斯柔化过滤器 (亮度)
.IPs cgb=<0\-100>
高斯柔化过滤器 (色度)
.IPs ls=<\-100\-100>
锐化过滤器 (亮度)
.IPs cs=<\-100\-100>
锐化过滤器 (色度)
.IPs chs=<h>
水平色度偏移
.IPs cvs=<v>
垂直色度偏移
.RE
.PD 1
.
.TP
.B \-stereo <模式>
选择 MP2/\:MP3 立体声输出的类型。
.PD 0
.RSs
.IPs 0
立体声
.IPs 1
左声道
.IPs 2
右声道
.RE
.PD 1
.
.TP
.B \-sws <软件缩放类型> (也请参见 \-vf scale 和 \-zoom)
指定软件缩放算法用于 \-zoom 选项。
这对缺少硬件加速, 如 x11 的视频输出驱动不影响。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs 0
快速二次线性
.IPs 1
快速二次线性
.IPs 2
二次立方 (品质好) (默认)
.IPs 3
实验中
.IPs 4
最短距离 (品质差)
.IPs 5
area
.IPs 6
亮度二次立方/色度二次线性
.IPs 7
高斯
.IPs 8
sincR
.IPs 9
lanczos
.IPs 10
自然二次立方样条曲线
.RE
.PD 1
.sp 1
.RS
.I 注意:
有些 \-sws 选项可调。
视频缩放过滤器的描述有更多的信息。
.RE
.
.TP
.B \-vc <[\-|+]编解码器1,[\-|+]编解码器2,...[,]>
按照在 codecs.conf 中视频编解码器的名称, 指定使用它们的优先级列表。
编解码器名称前使用 "\-" 表示忽略它。
编解码器名称前使用 "+" 表示锁定它, 这有可能会崩溃!
如果列表尾有 "," MPlayer 使用没有列出的编解码器作为后备。
.br
.I 注意:
可用的编解码器其完整列表请参见 \-vc help。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-vc divx"
锁定 Win32/\:VfW DivX 编解码器, 无后备。
.IPs "\-vc \-divxds,\-divx,"
跳过 Win32 DivX 编解码器。
.IPs "\-vc ffmpeg12,mpeg12,"
先尝试 libavcodec 的 MPEG-1/2 编解码器, 其次是 libmpeg2, 然后是其它的。
.RE
.PD 1
.
.TP
.B \-vfm <驱动1,驱动1,...>
按照在 codecs.conf 中视频编解码器族的名称, 指定使用它们的优先级列表。
如果给定的编解码器族没一个能工作, 使用默认的后备编解码器族。
如果列表尾有 "," MPlayer 使用没有列出的编解码器作为后备。
.br
.I 注意:
可用的编解码器族其完整列表请参见 \-vfm help。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-vfm ffmpeg,dshow,vfw"
先尝试 libavcodec, 其次是 Directshow, 然后 VfW 编解码器,
最后如果它们都不工作使用其它后备的。
.IPs "\-vfm xanim"
先尝试 XAnim 编解码器。
.RE
.PD 1
.
.TP
.B \-x <x> (也请参见 \-zoom) (仅用于 MPlayer)
缩放图像到宽度 <x> (如果软件/\:硬件缩放可用)。
停用高宽比计算。
.
.TP
.B \-xvidopts <选项1:选项2:...>
指定使用Xvid解码时的附加参数。
.br
.I 注意:
既然 libavcodec 快过 Xvid 你可能想使用
libavcodec 后期处理过滤器 (\-vf pp) 和解码器 (\-vfm ffmpeg) 来替换。
.sp 1
Xvid 的内部后期处理过滤器有:
.PD 0
.RSs
.IPs "deblock-chroma（也请参见 \-vf pp）"
色度去块(deblock)过滤器
.IPs "deblock-luma（也请参见 \-vf pp）"
亮度去块(deblock)过滤器
.IPs "dering-luma（也请参见 \-vf pp）"
亮度去环(deringing)过滤器
.IPs "dering-chroma（也请参见 \-vf pp）"
色度去环(deringing)过滤器
.IPs "filmeffect（也请参见 \-vf noise）"
在视频中添加人工的胶片纹理。
可能提高了视觉品质, 虽然降低了真实的品质。
.RE
.sp 1
.RS
渲染方法:
.RE
.PD 0
.RSs
.IPs "dr2\ \ "
激活直接渲染的方法 2。
.IPs nodr2
撤销直接渲染的方法 2。
.RE
.PD 1
.
.TP
.B \-xy <参数值> (也请参见 \-zoom)
.PD 0
.RSs
.IPs 参数值<=8
按因子 <参数值> 缩放图像。
.IPs 参数值>8
设置图像宽度为参数值, 并计算图像高度以保持高宽比。
.RE
.PD 1
.
.TP
.B \-y <y> (也请参见 \-zoom) (仅用于 MPlayer)
缩放图像到高度 <y> (如果软件/\:硬件缩放可用)。
停用高宽比计算。
.
.TP
.B "\-zoom\ \ "
在可能的情况下允许使用软件缩放。
不支持硬件缩放的输出驱动(像 x11, fbdev), 因为性能缘故
而被 MPlayer 默认停用缩放, 但现在允许软件缩放。
.
.
.
.SH "音频过滤器"
音频过滤器允许你修改音频流及其属性。
语法是:
.
.TP
.B \-af <过滤器1[=参数1:参数2:...],过滤器2,...>
建立音频过滤器链。
.PP
.I 注意:
请参见 \-af help, 获得可用的音频过滤器其完整列表。
.sp 1
音频过滤器以列表的形式进行管理。
有一些命令是用来管理这个过滤器列表的。
.
.TP
.B \-af\-add <过滤器1[,过滤器2,...]>
将参数中给出的过滤器添加至过滤器列表的末尾。
.
.TP
.B \-af\-pre <过滤器1[,过滤器2,...]>
将参数中给出的过滤器添加至过滤器列表的开头。
.
.TP
.B \-af\-del <索引号1[,索引号2,...]>
删除位于所给索引号处的过滤器。
索引号码起始为 0，负数号码代表从列表的末尾寻址（\-1 代表最后一个）。
.
.TP
.B \-af\-clr
完全清空过滤器列表。
.PP
可用的过滤器有:
.
.TP
.B resample[=srate[:sloppy[:type]]]
改变音频流的采样(速/频)率。
可用于声卡只有一个固定的频率或者要卡住的旧卡最高只能达 44.1kHz。
此过滤器在必要时被自动启用。
它只支持 16-位 native-endian(低位在前) 格式的整数值和浮点数作为输入。
.br
.I 注意:
对于 MEncoder, 你也需要使用 \-srate <srate>。
.PD 0
.RSs
.IPs <srate>
输出的采样率(以 Hz 为单位)。
参数的有效范围是从 8000 到 192000。
如果输入和输出的采样率相同, 或者如果此参数被省略, 此过滤器被自动卸载。
正常情况下高的采样率能改善音频品质, 尤其是与其它过滤器结合时。
.IPs <sloppy>
允许(1) 或不允许(0) 输出采样率与给定的频率 <srate> 稍微不同 (默认是: 1)。
可用于启动回放时极端慢的情形。
.IPs <type>
选择使用何种重采样方式。
.RSss
0: 线性插值 (快速, 品质低 尤其是 upsampling 时)
.br
1: 多相过滤器组(filterbank)并且整数处理
.br
2: 多相过滤器组(filterbank)并且浮点数处理 (慢, 品质最佳)
.REss
.PD 1
.RE
.sp 1
.RS
.I 示例:
.RE
.PD 0
.RSs
.IPs "mplayer \-af resample=44100:0:0"
设置重采样过滤器的输出采样率为 44100Hz, 使用此不允许微调的输出采样率
缩放和线性插值。
.RE
.PD 1
.
.TP
.B lavcresample[=srate[:length[:linear[:count[:cutoff]]]]]
改变音频流采样率为整数 <srate> (以 Hz 为单位)。
它只支持 16位 native-endian(低位在前) 格式。
.br
.I 注意:
对于 MEncoder, 你也需要使用 \-srate <srate>。
.PD 0
.RSs
.IPs <srate>
输出的采样率
.IPs <length>
有关较低采样率的过滤器长度 (默认是: 16)
.IPs <linear>
如果值是 1, 过滤器将在多相进入处之间线性插值
.IPs <count>
多相进入处数量的 log2
(..., 10->1024, 11->2048, 12->4096, ...)
(默认是: 10->1024)
.IPs <cutoff>
截频 (0.0\-1.0), 默认设置取决于过滤器长度
.RE
.PD 1
.
.TP
.B lavcac3enc[=至SPDIF[:比特率[:最少声道]]]
用 libavccodec 库将多声道音频实时编码至 AC-3。
支持16位任意字节顺序的输入格式，最多6个声道。
当输出原始 AC-3 音频流时，输出是按高位字节优先顺序；当输出至 S/PDIF
时，则是按设备的字节顺序。
该过滤器的输出采样率与输入采样率相同。
当输入采样率为 48kHz、44.1kHz 或 32kHz 时，该过滤镜则直接采用这个值。
否则，将自动在此过滤器前插入一个重采样过滤器，以使输入和输出采样率均为
48kHz。
你需要指定‘\-channels N’以使编码器将音频解码为 N 声道，然后过滤器就可以
将 N 声道的输入编码为 AC-3 了。
.br
.PD 0
.RSs
.IPs <至SPDIF>
若值为零或未设置则输出原始 AC-3 音频流；
当 <至SPDIF> 设为非零值时，则输出至 S/PDIF 以略过解码。
.IPs <比特率>
编码 AC-3 流时采用的比特率。
将其设为 384 或 384000 以得到 384kbits 的比特率。
有效值为：32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256,
         320, 384, 448, 512, 576, 640
默认的比特率取决于输入的声道数：
1声道：96，2声道：192，3声道：224，4声道：384，5声道：448，6声道：448
.IPs <最少声道>
如果输入的声道数少于 <最少声道>，那么过滤器脱离过滤器队列。（默认值：5）
.RE
.PD 1
.
.TP
.B sweep[=speed]
产生正弦 sweep。
.PD 0
.RSs
.IPs <0.0\-1.0>
delta 的正弦, 使用非常低的值听此扫听(sweep)。
.RE
.PD 1
.
.TP
.B sinesuppress[=freq:decay]
删除一个指定频率的正弦。
对去除低品质音频设备上 50/60Hz 的噪音时有用。可能只在单声道输入上可工作。
.PD 0
.RSs
.IPs <freq>
应删除的频率 (以 Hz 为单位) (默认是: 50)
.IPs <decay>
控制适应性 (一个较大的值会使得过滤器适应幅度和相位的变化较迅速,
而一个较小的值会使得此适应过程较慢) (默认是: 0.0001)。合理的值约为 0.001。
.RE
.PD 1
.
.TP
.B bs2b[=option1:option2:...]
使用 libbs2b 的 Bauer 立体声至双耳声道转换模式。
通过使声音更类似于如同从扬声器传来以提升耳机的听觉效果。该模式让每个耳朵同时
听见两个声道，并考虑了声音传播距离的差别及头部回响效果。
该选项只能应用于 2 个声道的音频。
.PD 0
.RSs
.IPs fcut=<300\-1000>
设置以 Hz 为单位的切换频率。
.IPs feed=<10\-150>
设置以 0.1*dB 为单位的用于低频率的反馈级别。
.IPs profile=<value>
有许多配置可供方便选用：
.PD 0
.RSs
.IPs default
如果未指定其它选项则使用这个选项（fcut=700, feed=45）
.IPs "cmoy\ "
Chu Moy 回路实现算法（fcut=700, feed=60）
.IPs jmeier
Jan Meier 回路实现算法（fcut=650, feed=95）
.RE
.RE
.sp 1
.RS
如果同时指定了 fcut 或 feed 选项与配置，则这两个选项将覆盖配置中选项的值。
.RE
.RE
.PD 1
.
.TP
.B hrtf[=flag]
头部相关的转变功能: 为头戴式耳机转换多声道音频成双声道输出,
但保留声音的空间感。
.sp 1
.PD 0
.RS
.IPs "Flag  含义"
.IPs "m     后场声道矩阵解码"
.IPs "s     双声道矩阵解码"
.IPs "0     无矩阵解码 (默认)"
.RE
.PD 1
.
.TP
.B equalizer=[g1:g2:g3:...:g10]
10-八度波段图形均衡器, 其实现使用了 10 IIR 带通过滤器。
这意味着不管回放的是何种音频都行。10 波段的中心频率各是:
.sp 1
.PD 0
.RS
.IPs "段号 频率"
.IPs "0    31.25 Hz"
.IPs "1    62.50 Hz"
.IPs "2   125.00 Hz"
.IPs "3   250.00 Hz"
.IPs "4   500.00 Hz"
.IPs "5    1.00 kHz"
.IPs "6    2.00 kHz"
.IPs "7    4.00 kHz"
.IPs "8    8.00 kHz"
.IPs "9   16.00 kHz"
.RE
.PD 1
.sp 1
.RS
如果此声音播放的采样率低于频率波段的中心频率, 此波段就被停用。
此过滤器的一个已知错误是, 最高波段的特性没有完全对称, 如果采样率
接近其波段的中心频率时。此问题可被绕过。办法是 upsampling 其声音:
在此过滤器之前使用重采样过滤器。
.RE
.PD 0
.RSs
.IPs <g1>:<g2>:<g3>:...:<g10>
浮点数代表各频率波段的增益分贝(dB) (\-12\-12)
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af equalizer=11:11:10:5:0:\-12:0:5:12:12 media.avi"
放大声音的高端和底端的频率区段, 但几乎完全取消 1kHz 附近的声音。
.RE
.PD 1
.
.TP
.B channels=nch[:nr:from1:to1:from2:to2:from3:to3:...]
能用于添加, 去除, 路由和拷贝音频声道。
如果仅给定 <nch>, 默认是用路由(跳接), 其所做工作如下:
如果输出声道数大于输入声道数, 插入空的声道 (除了
混音单声道成立体声时, 在两个输出声道中重复此单声道)。
如果输出声道数小于输入声道数, 截掉多余的声道。
.PD 0
.RSs
.IPs <nch>
输出声道数（1\-8）
.IPs "<nr>\ "
转换路径数（1\-8）
.IPs <from1:to1:from2:to2:from3:to3:...>
0 到 7 的数字对定义各声道的转换路径。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af channels=4:4:0:1:1:0:2:2:3:3 media.avi"
改成 4 声道并设置 4 对路由: 交换声道 0 和声道 1, 保留声道 2 和 3 未动。
会观察到如果回放媒体含有两个声道, 声道 2 和 3 无声, 但声道 0 和 1 仍要交换。
.IPs "mplayer \-af channels=6:4:0:0:0:1:0:2:0:3 media.avi"
改成 6 声道并设置 4 对路由: 拷贝声道 0 到声道 0 至 3。声道 4 和 5 无声。
.RE
.PD 1
.
.TP
.B format[=format] (也请参见 \-format)
在不同的采样格式之间转换。
自动被启用, 当声卡或其他的过滤器需要时。
.PD 0
.RSs
.IPs <format>
设置所需的格式。
一般的形式是 "sbe", 其中 "s" 指示符号 (要么 "s" 指带符号,
要么 "u" 指不带符号), "b" 指示每个样本的位数 (16, 24 或 32)
而 "e" 指示 endian 格式 ("le" 指 little-endian, "be" 指 big-endian
或者 "ne" 指 MPlayer 运行其上的计算机所用的 endian 格式)。
有效值(尤其)有: "s16le", "u32be" 和 "u24ne"。例外但也有效的指定格式有: u8,
s8, floatle, floatbe, floatne, mulaw, alaw, mpeg2, ac3 和 imaadpcm。
.RE
.PD 1
.
.TP
.B volume[=v[:sc]]
实现软件的音量控制。
请谨慎使用此过滤器, 因为会降低信号至声音的噪声率。
在大多数情况下设置 PCM 音量至最大是最佳的, 省去过滤器,
而用混音器的主音量控制来控制输出到音响的水平。
万一你的声卡有数码的 PCM 混音器而不是模拟的,
且听到失真, 请使用 MASTER(主) 混音器。
如果计算机联有外接扩音器(这几乎总是常有的事),
调节主音量和扩音器的音量旋钮能减少噪声水平, 直到背景的嘶嘶声消失。
.br
此过滤器有第二个功能: 测量总体的最高声音水平并通过 MPlayer 显示出来。
此估计的音量能用来设置 MEncoder 的音量以使用最大动态范围。
.br
.I 注意:
此过滤器不能重返进入, 所以对每个音频流只能启用一次。
.PD 0
.RSs
.IPs "<v>\ \ "
设置所有声道中流所需的增益分贝(dB) :  范围从 \-200dB 至 +60dB,
其中 \-200dB 完全靜音而 +60dB 等于增益 1000 (默认是: 0)。
.IPs "<sc>\ "
打开 (1) 或关闭 (0) 软剪切。
软-剪切 能使得声音更平滑流畅, 如果使用了非常高的音量水平。
启用此选项, 如果扩音器的动态范围非常低。
.br
.I 警告:
此功能产生失真, 是应该最后才考虑使用的手段。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af volume=10.1:0 media.avi"
放大声音 10.1dB, 且声音水平太高时使用 硬-剪切 。
.RE
.PD 1
.
.TP
.B pan=n[:L00:L01:L02:...L10:L11:L12:...Ln0:Ln1:Ln2:...]
武断混音。
基本上是音量和声道过滤器的组合能用于混合许多声道至仅仅几个声道,
如: 立体声到单声道或者改变环绕声系统中心扬声器的 "宽度"。
此过滤器很难用, 且需要一些修补才能获得所要的结果。
此过滤器的选项数取决于输出声道数。如何用此过滤器
把 6-声道文件混音成双声道的实例, 能在示例一节中将近最后的地方找到。
.PD 0
.RSs
.IPs "<n>\ \ "
输出声道数（1\-8）
.IPs <Lij>
输入声道 i 混音成输出声道 j 的份量 (0\-1)。
所以基本上你先要有 n 个数表示要作用到第一个输入声道,
然后再有 n 个数要作用到第二个输入声道, 如此以往。
如果你不对某些输入声道指定任何数, 就认为是 0。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af pan=1:0.5:0.5 media.avi"
立体声混音成单声道。
.IPs "mplayer \-af pan=3:1:0:0.5:0:1:0.5 media.avi"
给定 3 声道输出, 保留声道 0 和 1 未动,
但混合声道 0 和 1 成输出声道 2 (被送到比如超低音声道)。
.RE
.PD 1
.
.TP
.B sub[=fc:ch]
添加一个超低音(subwoofer)声道到音频流。
用于创建超低音声道的音频数据声道 0 和声道 1 的平均声音。
四阶 Butterworth(巴特沃斯) 过滤器低通过滤声音的结果是默认截频 60Hz
且在音频流中添加了一个独立的声道。
.br
.I 警告:
停用此过滤器, 当播放 DVDs 带杜比(Dolby Digital 5.1)声音时,
否则此过滤器分解声音到超低音声道。
.PD 0
.RSs
.IPs "<fc>\ "
低通过滤器的截频(以 Hz 单位) (20Hz 至 300Hz) (默认是: 60)。
为了最佳结果, 尝试设置截频尽可能低。这能改善立体声或环绕音效的体验。
.IPs "<ch>\ "
决定插入超音声道音频的声道号。
声道号在 0 和 7 之间（默认值：5）。
观察到声道数会自动增加到 <ch>, 如果必要的话。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af sub=100:4 \-channels 5 media.avi"
添加超低音声道到输出声道 4 且其中截频为 100Hz。
.RE
.PD 1
.
.TP
.B "center\ "
从前方声道中创建中心声道。
可能目前品质较低, 因为还没有实现用高通过滤器进行适当抽取,
而是用平均和半折其前方声道替代。
.PD 0
.RSs
.IPs "<ch>\ "
决定插入中心声道的声道编号。
声道编号取值于 0 和 7 之间（默认值：5）。
观察到声道数会自动增加到 <ch>, 如果必要的话。
.RE
.PD 1
.
.TP
.B surround[=delay]
矩阵编码的环绕音效解码器, 像杜比环绕音效(Dolby Surround)。
许多双声道音频文件事实上含有矩阵编码的环绕音效。需要声卡支持至少 4 声道。
.PD 0
.RSs
.IPs <delay>
后方扬声器的延迟时间(以 ms 为单位) (0 至 1000) (默认是: 20)。
此延迟按如下设置: 如果 d1 是聆听点到前方扬声器的距离,
d2 是聆听点到后方扬声器的距离, 那么延迟该
设为 15ms 如果 d1 <= d2 或设为 15 + 5*(d1-d2) 如果 d1 > d2。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af surround=15 \-channels 4 media.avi"
添加环绕音效解码, 后方扬声器声音为 15ms 的延迟。
.RE
.PD 1
.
.TP
.B delay[=ch1:ch2:...]
延迟声音到扬声器, 这样可以让不同声道的声音同时到达聆听点。
这只对多于两个扬声器时有用。
.PD 0
.RSs
.IPs ch1,ch2,...
应该加给每个声道的延迟时间(以 ms 为单位) (0 至 1000 之间的浮点数)。
.RE
.PD 1
.sp 1
.RS
不同声道所需的延迟时间计算如下:
.IP 1. 3
测量不同的扬声器到聆听点的距离(以 meters(米) 为单位), (对于 5.1 的系统)
得到距离 s1 至 s5。没有补偿超低音的点 (因为你听不出差异)。
.IP 2. 3
取其中最大距离与各个 s1 至 s5 的差, 即 s[i] = max(s) \- s[i]; i = 1...5。
.IP 3.
计算所需的各个延迟时间(以 ms 为单位)为 d[i] = 1000*s[i]/342; i = 1...5。
.RE
.PD 0
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af delay=10.5:10.5:0:0:7:0 media.avi"
延迟左前方和右前方声道各 10.5ms, 两个后方声道和超低音声道 0ms,
而中心声道 7ms。
.RE
.PD 1
.
.TP
.B export[=mmapped_file[:nsamples]]
使用内存映射 (mmap()) 导出进入的信号到其它处理过程。
内存映射的区域含有头部:
.sp 1
.nf
int nch                      /*声道数*/
int size                     /*缓冲大小*/
unsigned long long counter   /*用于保持同步, 更新每次
                               新导出的数据。*/
.fi
.sp 1
其余是 (无间隔方式) 有效载荷的 16-位数据。
.PD 0
.RSs
.IPs <mmapped_file>
映射数据到文件 (默认是: ~/.mplayer/\:mplayer-af_export)
.IPs <nsamples>
每个声道的样本数 (默认是: 512)
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af export=/tmp/mplayer-af_export:1024 media.avi"
导出每个声道的 1024 样本到 "/tmp/mplayer-af_export"。
.RE
.PD 1
.
.TP
.B extrastereo[=mul]
(线性地)增加左右声道的差异以添加某些 "现场" 回放效果。
.PD 0
.RSs
.IPs <mul>
设置差异系数 (默认是: 2.5)。
0.0 表示单声道 (两个声道的平均值), 1.0 表示声音未改变,
而 \-1.0 表示交换了左右声道。
.RE
.PD 1
.
.TP
.B volnorm[=method:target]
没有失真的最大音量。
.PD 0
.RSs
.IPs <method>
设置被用的方式。
.RSss
1: 使用单样本平滑差异, 通过对旧的样本进行标准加权平均 (默认)。
.br
2: 使用几个样本平滑差异, 通过对旧的样本进行标准加权平均。
.REss
.IPs <target>
为此样本类型设置目标幅度为最大值的分数 (默认是: 0.25)。
.RE
.PD 1
.
.TP
.B ladspa=file:label[:controls...]
装载 LADSPA (Linux Audio Developer's Simple Plugin API) 插件。
此过滤器可重返进入, 所以多个 LADSPA 插件可同时使用。
.PD 0
.RSs
.IPs <file>
指定 LADSPA 插件的库文件。
如果设置了 LADSPA_PATH, 从中搜寻指定的文件。
如果没设置, 你一定要提供一个完整说明的路径名。
.IPs <label>
指定库中的过滤器。
有些库仅含一个过滤器, 但有些含许多。
进入这里的 "help", 会列出指定库中所有可用的过滤器,
从而消除使用 LADSPA SDK 的 "listplugins"。
.IPs <controls>
控制 0 或多个浮点数值, 其决定装载的插件的行为(例如: 延迟, 阈值和增益)。
在冗赘模式(添加 \-v 到 MPlayer 命令行)下, 所有可用的控制及其有效范围可打印。
从而消除使用 LADSPA SDK 的 "analyseplugin"。
.RE
.PD 1
.
.TP
.B "comp\ \ \ "
压缩/扩张过滤器, 话筒输入有用。
防止人为的非常高的声音和提高非常低的声音的音量。
此过滤器未经测试, 甚至可能不稳定。
.
.TP
.B "gate\ \ \ "
噪声门过滤器类似于 comp(压缩/扩张) 音频过滤器。
此过滤器未经测试, 甚至可能不稳定。
.
.TP
.B karaoke
简单声音去除过滤器利用这样的事实:
人的声音通常录成单声道, 之后 "中心(center)" 混音进最后的音频流。
小心此过滤器会把信号变成单声道。
对 2-声道音轨工作得很好; 在非 2-声道立体声上别费劲去尝试。
.
.TP
.B scaletempo[=选项1:选项2:...]
改变音频的节奏但不改变声音间隔，可选性地与播放速度同步（默认值）。
.br
该过滤器的工作方式是以正常速度播放 \'stride\' ms 的音频，而消耗的是
\'stride*scale\' ms 的输入音频。
通过把一个跨度域内的 \'overlap\'% 的内容，与紧接着前一个跨度域的音频混合在一起，把各个
跨度域拼接在一起。
也可以让该选项对后 \'search\' ms 的音频作一个短小的统计性分析，以判定最佳的重叠位置。
.PD 0
.RSs
.IPs scale=<数量值>
要改变节奏的标称数量。
使播放速度改变这个数量。
（默认值：1.0）
.IPs stride=<数量值>
以毫秒为单位的所输出的每个跨度域的长度。
值设得太高会在节奏改变量很高时产生可观的跳音现象，而在节奏改变量很小时产生回音。
值设得太低会改变声音间隔。
值越大性能越好。
（默认值：60）
.IPs overlap=<百分比值>
跨度域之间重叠的百分比。
值越小性能越好。
（默认值：.20）
.IPs search=<数量值>
单位为毫秒的用以搜索最佳重叠位置的搜索长度。
值越小性能越是大幅度提升。
在较慢的系统上，你可能希望把这个值设得非常低。
（默认值：14）
.IPs speed=<tempo|pitch|both|none>
设置播放速度改变时的反应。
.RSss
.IPs tempo
改变音频节奏以使其与播放速度同步（默认值）。
.IPs pitch
抵消过滤器产生的效果。
改变声音间隔而不改变音频节奏。
在你的 input.conf 中加入 \'[ speed_mult 0.9438743126816935\' 和
\'] speed_mult 1.059463094352953\' 使其能够以音乐学中的半音为步进改变。
.I 警告：
与视频的同步变差。
.IPs both
同时改变节奏和间隔。
.IPs none
忽略速度的改变。
.RE
.RE
.sp 1
.RS
.I 示例：
.RE
.RSs
.IPs "mplayer \-af scaletempo \-speed 1.2 media.ogg"
将以 1.2 倍的正常速度播放媒体，音频的间隔值保持正常。改变播放速度只改变音频的节奏以与
播放速度匹配。
.IPs "mplayer \-af scaletempo=scale=1.2:speed=none \-speed 1.2 media.ogg"
将以 1.2 倍的正常速度播放媒体，音频的间隔值保持正常，但改变播放速度对音频的节奏无影
响。
.IPs "mplayer \-af scaletempo=stride=30:overlap=.50:search=10 media.ogg"
将扭曲质量和性能参数。
.IPs "mplayer \-af format=floatne,scaletempo media.ogg"
将使 scaletempo 使用浮点值代码。
可能在一些平台上运行较快。
.IPs "mplayer \-af scaletempo=scale=1.2:speed=pitch audio.ogg"
将以 1.2 倍的正常速度播放媒体，音频的间隔值保持正常。改变播放速度只改变声音间隔，而把
音频节奏保持在 1.2 倍速的水平。
.RE
.PD 1
.
.TP
.B "stats\ \ "
收集并打印音频流的统计信息，尤其是音量信息。
这些统计信息特别用于帮助在避免卡片时调节音量。
音量以 dB 为单位打印并与用于音量的音频过滤器兼容。
.
.
.
.SH "视频滤镜"
视频滤镜让你修改视频流及其属性。
其句法是：
.
.TP
.B \-vf <滤镜1[=参数1:参数2:...],滤镜2,...>
设置一连串的视频滤镜。
.PP
许多参数是可选的并且如果省略的话则设为默认值。
要明确表示使用默认值，则将参数设为‘\-1’。
参数 w:h 表示以像素为单位宽 x 高 h，x:y 表示 从较大的图像的左上角开始数 x:y 的位
置。
.br
.I 注意：
要获取可用视频滤镜列表，参见 \-vf help。
.sp 1
视频滤镜以列表的形式维护。
有一些命令用于维护滤镜列表。
.
.TP
.B \-vf\-add <滤镜1[,滤镜2,...]>
在滤镜列表尾部加上参数中所给的滤镜。
.
.TP
.B \-vf\-pre <滤镜1[,滤镜2,...]>
在滤镜列表头部加上参数中所给的滤镜。
.
.TP
.B \-vf\-del <索引号1[,索引号2,...]>
删除位于指定索引号上的滤镜。
索引号起始为0，负数表示从列表尾部开始寻址（\-1表示最后一个）。
.
.TP
.B \-vf\-clr
完全清空滤镜列表。
Completely empties the filter list.
.PP
如果滤镜支持，你可以通过参数的名字访问参数。
.
.TP
.B \-vf <滤镜>=help
打印特定滤镜的参数名及参数的取值范围。
.
.TP
.B \-vf <滤镜=已命名参数1=参数值1[:已命名参数2=参数值2:...]>
将一个已命名参数设置为指定参数值。
使用 on 和 off 或 yes 和 no 来设置标志位参数。
.PP
可用插件有:
.
.TP
.B crop[=w:h:x:y]
切割出图像的指定部分并丢弃其余部分。
对去掉宽银幕电影的黑边很有用。
.PD 0
.RSs
.IPs <w>,<h>
切割出来部分的宽和高，默认值为原始的宽度和高度。
.IPs <x>,<y>
切割出来部分的位置，默认值是中央.
.RE
.PD 1
.
.TP
.B cropdetect[=limit:round[:reset]]
计算必要的切割参数并把推荐值显示在标准输出上。
.PD 0
.RSs
.IPs <limit>
门限值，可设范围为无（0）至所有（255）（默认值：24）
.br
.IPs <round>
指定宽:高值为该值的倍数（默认值：16）。
偏移值将被自动调整以使视频位于屏幕中心。
使用 2 以只得到偶数尺寸（ 4:2:2 的视频需要此选项）。
16 对于大多数编码器的编码来说是很适合的。
.br
.IPs <reset>
计数值,用以决定多少帧后 cropdetect 将重置先前侦测到的最大视频区域，并重
新侦测当前的最优切割区域。该选项在电视台台标影响了视频区域时可能有用。0 
表示从不重置而是返回播放过程中遇到的最大区域。（默认值：0）。
计数值，用以决定多少帧后 cropdetect 将重置先前侦测到的最大视频区域，并
重新开始侦测当前的最优切割区域（默认值：0）。
该选项在频道台标破坏了视频区域的情况下很有效。
0 代表从不重置并返回整个播放过程中遇到的最大视频区域。
.RE
.PD 1
.
.TP
.B rectangle[=w:h:x:y]
在图像之上于指定坐标画一个所要求宽度和高度的矩形，并且将当前矩形的参数输出至
控制台窗口。
该选项可用来找到最优的切割参数。
如果你将 input.conf 中的指令‘change_rectangle’与按键绑定，那么你可以实时
移动和调整矩阵。
.PD 0
.RSs
.IPs <w>,<h>
宽度和高度（默认值：\-1，在边缘可见的条件下宽度最大的可能值）。
.IPs <x>,<y>
左上角的位置（默认值：\-1，屏幕最左上角）
.RE
.PD 1
.
.TP
.B expand[=w:h:x:y:o:a:r]
将影片的分辨率扩展（而不是缩放）至指定的值并将未缩放的原点移至x,y坐标。
可以用于把字幕/\:OSD放置在该滤镜生成的黑边中。
.RSs
.IPs <w>,<h>
扩展后的宽、高（默认值：原始的宽、高）。
w和h的负数值将被视作为相对于原始大小的增量。
.sp 1
.I 示例：
.PD 0
.RSs
.IP expand=0:\-50:0:0
在图片的底部添加50像素的边。
.RE
.PD 1
.IPs <x>,<y>
原始图像在扩展后图像中的位置（默认：位于中心）
.IPs "<o>\ \ "
渲染OSD/\:字幕
.RSss
0：禁用（默认值）
.br
1：启用
.REss
.IPs "<a>\ \ "
扩展时适应某个宽高比而不是某个分辨率（默认值：0）。
.sp 1
.I 示例：
.PD 0
.RSs
.IP expand=800:::::4/3
除非源视频有更高的分辨率，否则扩展至800x600，当出现前一种情况时，其将扩展直至填
满一个4/3宽高比的区域。
.RE
.PD 1
.IPs "<r>\ \ "
舍入数值以使宽和高值能被<r>整除（默认值：1）。
.RE
.
.TP
.B flip（另参见\-flip）
翻转图像使其上下颠倒。
.
.TP
.B "mirror\ "
使图像相对于Y轴反转。
.
.TP
.B rotate[=<0\-7>]
以90度为单位旋转图像并有选择地将其翻转。
对于4至7间的值，只有当影片的几何形状为肖像式（译注：宽度比高度小）而不是风景画式
（译注：宽度比高度大）时才执行旋转操作。
.RSs
.IPs 0
顺时针旋转90度并翻转（默认值）。
.IPs 1
顺时针旋转90度。
.IPs 2
逆时针旋转90度。
.IPs 3
逆时针旋转90度并翻转。
.RE
.
.TP
.B scale[=w:h[:interlaced[:chr_drop[:par[:par2[:presize[:noup[:arnd]]]]]]]]
使用软件缩放器（速度慢）缩放图像并执行YUV<\->RGB色彩空间转换（另参见\-sws）。
.RSs
.IPs <w>,<h>
缩放后的宽/\:高值（默认值：原始的宽/\:高值）
.br
.I 注意：
若使用了\-zoom，并且底层的滤镜（包括libvo）无法执行缩放，则其默认设置为
d_宽/\:d_高！
.RSss
 0：  缩放后的d_宽/\:d_高
.br
\-1：  原始的宽/\:高
.br
\-2：  使用另一个尺寸的值和缩放前的宽高比计算w/h。
.br
\-3：  使用另一个尺寸的值和原始的宽高比计算w/h。
.br
\-(n+8)：与以上的\-n相似，但舍入尺寸值至最接近的16的倍数。
.REss
.IPs <interlaced>
触发隔行扫描视频的缩放方式。
.RSss
0：关闭（默认）
.br
1: 打开
.REss
.IPs <chr_drop>
色度信息的跳过方式
chroma skipping
.RSss
0：使用所有可用输入扫描行上的色度信息。
.br
1: 只使用每隔2个输入扫描行上的色度信息。
.br
2: 只使用每隔4个输入扫描行上的色度信息。
.br
3: 只使用每隔8个输入扫描行上的色度信息。
.REss
.IPs "<par>[:<par2>]（另参见\-sws）"
根据\-sws中所选的缩放器类型设置缩放参数。
.RSss
\-sws 2 （双立方插值）：B（雾化）和C（色斑）
.br
0.00:0.60 默认值
.br
0.00:0.75 VirtualDub中的“精确双立方插值”
.br
0.00:0.50 Catmull-Rom插值
.br
0.33:0.33 Mitchell-Netravali插值
.br
1.00:0.00 立方式B-插值
.br
\-sws 7 （高斯模糊）：锐化度（0（柔和） \- 100 （锐利））
.br
\-sws 9 （LANCZOS迭代）：过滤长度（1\-10）
.REss
.IPs <presize>
缩放至预设尺寸。
.RSss
qntsc：  352x240 （NTSC四分之一大小屏幕）
.br
qpal：   352x288 （PAL四分之一大小屏幕）
.br
ntsc：   720x480 （标准NTSC）
.br
pal：    720x576 （标准PAL）
.br
sntsc：  640x480 （正方形像素NTSC）
.br
spal：   768x576 （正方形像素PAL）
.REss
.IPs <noup>
不允许放大时超出原始尺寸。
.RSss
0：允许放大时超出（默认）。
.br
1: 若有一个尺寸超出其原始值时则不允许。
.br
2: 若有两个尺寸均超出其原始值时则不允许。
.REss
.IPs <arnd>
垂直缩放器使用精确数值舍入，这可能比默认的舍入方式快速或缓慢。
.RSss
0：禁止精确数值舍入（默认）
.br
1：允许精确数值舍入（默认）
.REss
.RE
.
.TP
.B dsize[=aspect|w:h:aspect-method:r]
更改滤镜链上任意位置要使用的显示大小/\:宽高比。
宽高比可以是分数（4/3）或浮点数（1.33）。
或者，你可以指定所希望显示的宽和高的实际大小。
注意这个滤镜自己
.B 不
做任意缩放操作；它只影响到后面的（硬件或软件）缩放器在修正
宽高比时将采取什么样的行为。
.RSs
.IPs <w>,<h>
新显示模式的宽度和高度。
也可以是以下这些特殊值：
.RSss
 0：  原来显示模式的宽度和高度
.br
\-1：  原始视频的宽度和高度（默认）
.br
\-2：  使用另一个尺寸的值和原来显示模式的宽高比计算w/h。
.br
\-3：  使用另一个尺寸的值和原始视频宽高比计算w/h。
.REss
.sp 1
.I 示例：
.PD 0
.RSs
.IP dsize=800:\-2
当视频宽高比为4/3时指定显示分辨率为800x600，或当视频宽高比为16/9时指
定为800x450。
.RE
.IPs <aspect-method>
根据原来的宽高比修改宽度和高度。
.RSss
\-1：忽略原有的宽高比。（默认）
.br
 0：在<w>和<h>作为最大的分辨率的情况下保持显示模式的宽高比。
.br
 1：在<w>和<h>作为最小的分辨率的情况下保持显示模式的宽高比。
.br
 2: 在<w>和<h>作为最大的分辨率的情况下保持视频的宽高比。
.br
 3: 在<w>和<h>作为最小的分辨率的情况下保持视频的宽高比。
.REss
.sp 1
.I 示例：
.PD 0
.RSs
.IP dsize=800:600:0
指定显示分辨率小于等于800x600，以保持宽高比。
.RE
.PD 1
.IPs "<r>\ \ "
将宽度和高度值舍入至可被<r>整除（默认值：1）。
.RE
.
.TP
.B "yuy2\ \ \ "
强制执行YV12/\:I420/\:422P至YUY2的软件转换。
对于那些对YV12支持较差但对YUY2支持较好的显卡很有用。
.
.TP
.B "yvu9\ \ \ "
强制执行YVU9至YV12色彩空间的软件转换。
不赞成使用，因为使用软件色彩调整器更好。
.
.TP
.B "yuvcsp\ "
将YUV色彩值限制在CCIR 601定义的范围内而不做实际的色彩转换。
.
.TP
.B rgb2bgr[=swap]
RGB 24/32 <\-> BGR 24/32色彩空间转换。
.PD 0
.RSs
.IPs "swap\ "
同样是执行R <\-> B转换。
.RE
.PD 1
.
.TP
.B palette
使用palette（调色板）进行RGB/BGR 8 \-> 15/16/24/32bpp色彩空间转换。
.
.TP
.B format[=fourcc]
限制下一个滤镜使用的色彩空间而不做任何转换。
与色彩调整滤镜共同作用完成实际转换。
.br
.I 注意：
要获取可用格式列表参见format=fmt=help。
.PD 0
.RSs
.IPs <fourcc>
格式名称如rgb15、bgr24、yv12（默认值：yuy2）
.RE
.PD 1
.
.TP
.B noformat[=fourcc]
限制下一个滤镜使用的色彩空间而不做任何转换。
与format滤镜不同，这个滤镜能处理任意色彩空间
.B 除了
你自己定义的。
.br
.I 注意：
要获取可用格式列表参见noformat=fmt=help。
.PD 0
.RSs
.IPs <fourcc>
格式名称如rgb15、bgr24、yv12（默认值：yv12）
.RE
.PD 1
.
.TP
.B pp[=filter1[:option1[:option2...]]/[\-]filter2...]（另参见\-pphelp）
启用指定序列的后期处理子滤镜。
子滤镜必须用‘/’分隔并且可以通过在其名字前加以‘\-’禁用。
每个子滤镜和一些选项有一个短名和一个长名，两者可以互换使用。例如\& dr/dering
是一样的。
一些共用的选项在所有的子滤镜中使用以决定这些子滤镜的作用范围：
.PD 0
.RSs
.IPs a/autoq
如果CPU太慢则自动关闭子滤镜。
.IPs c/chrom
同时执行色度过滤（默认值）。
.IPs y/nochrom
只执行亮度过滤（不使用色度信息）。
.IPs n/noluma
只执行色度过滤（不使用亮度信息）。
.RE
.PD 1
.sp 1
.RS
.br
.I 注意：
\-pphelp列出了可用子滤镜的列表。
.sp 1
可用的子滤镜有
.RE
.RSs
.IPs hb/hdeblock[:difference[:flatness]]
水平方向上的反块效应（deblocking）滤镜
.RSss
<difference>：差别系数，值越高意味着反块效应效果越强
（默认值：32）。
.br
<flatness>：平坦度阈值，值越低意味着反块效应效果越强
（默认值：39）。
.REss
.IPs vb/vdeblock[:difference[:flatness]]
垂直方向上的反块效应（deblocking)滤镜
.RSss
<difference>：差别系数，值越高意味着反块效应效果越强
（默认值：32）。
.br
<flatness>：平坦度阈值，值越低意味着反块效应效果越强
（默认值：39）。
.REss
.IPs ha/hadeblock[:difference[:flatness]]
精确的水平方向上的反块效应（deblocking）滤镜
.RSss
<difference>：差别系数，值越高意味着反块效应效果越强
（默认值：32）。
.br
<flatness>：平坦度阈值，值越低意味着反块效应效果越强
（默认值：39）。
.REss
.IPs va/vadeblock[:difference[:flatness]]
精确的垂直方向上的反块效应（deblocking）滤镜
.RSss
<difference>：差别系数，值越高意味着反块效应效果越强
（默认值：32）。
.br
<flatness>：平坦度阈值，值越低意味着反块效应效果越强
（默认值：39）。
.REss
.sp 1
水平反块效应滤镜和垂直反块效应滤镜共用同一个差别系数和平
坦度阈值，所以不能在水平和垂直方向上设置不同阈值。
.sp 1
.IPs h1/x1hdeblock
试验性的水平方向上的反块效应（deblocking）滤镜
.IPs v1/x1vdeblock
试验性的垂直方向上的反块效应（deblocking）滤镜
.IPs dr/dering
去色斑（deringing）滤镜
.IPs tn/tmpnoise[:threshold1[:threshold2[:threshold3]]]
瞬时噪声去除器
.RSss
<threshold1>：更大规模->更强的过滤
.br
<threshold2>：更大规模->更强的过滤
.br
<threshold3>：更大规模->更强的过滤
.REss
.IPs al/autolevels[:f/fullyrange]
自动更正亮度/对比度
.RSss
f/fullyrange：增大亮度范围至（0\-255）。
.REss
.IPs lb/linblenddeint
线性混合反隔行扫描滤镜，通过使用（1 2 1）过滤器过滤所有的输入扫描行以
解除所给区块的隔行扫描。
.IPs li/linipoldeint
线性插值反隔行扫描滤镜，通过线性插值算法每隔两个扫描行执行插值以解除
所给区块的隔行扫描。
.IPs ci/cubicipoldeint
立方插值反隔行扫描滤镜，通过立方插值算法每隔两个扫描行执行插值以解除
所给区块的隔行扫描。
.IPs md/mediandeint
中位数反隔行扫描滤镜，通过每隔两个扫描行应用中位数过滤器以解除所给区
块的隔行扫描。
.IPs fd/ffmpegdeint
FFmpeg反隔行扫描滤镜，通过每隔两个扫描行使用（\-1 4 2 4 \-1）过滤以解除
所给区块的隔行扫描。
.IPs l5/lowpass5
垂直方向上应用的FIR低用反隔行扫描滤镜，通过对所有输入扫描行使用（\-1 2 6
 2 \-1）过滤器以解除所给区块的隔行扫描。
.IPs fq/forceQuant[:quantizer]
将输入进来的量化表替换为你指定的常数量化表。
.RSss
<quantizer>：所使用的量化表
.REss
.IPs de/default
默认pp过滤器组合（hb:a,vb:a,dr:a）
.IPs fa/fast
快速pp过滤器组合（h1:a,v1:a,dr:a）
.IPs "ac\ \ \ "
高质量pp过滤器组合（ha:a:128:7,va:a,dr:a）
.RE
.RS
.sp 1
.I 示例：
.RE
.PD 0
.RSs
.IPs "\-vf pp=hb/vb/dr/al"
水平和垂直方向上反块效应、去色斑以及自动亮度/\:对比度调整
.IPs "\-vf pp=de/\-al"
使用默认的过滤器组合而不使用亮度/\:对比度调整
.IPs "\-vf pp=default/tmpnoise:1:2:3"
启用默认的过滤器组合以及瞬时噪声去除器。
.IPs "\-vf pp=hb:y/vb:a"
水平方向反块效应只针对亮度信息，并且根据可用CPU时间资源打开或关闭垂直方
向的反块效应过滤。
.RE
.PD 1
.
.TP
.B spp[=quality[:qp[:mode]]]
简单后期处理滤镜，它在多次（或者——在质量等级为6时——在所有的）
变换中压缩和解压图像并使结果平均化。
.RSs
.IPs <quality>
0\-6 （默认值：3）
.IPs "<qp>\ "
强制使用的量化参数（默认值：0，使用来自视频的量化参数）。
.IPs <mode>
0：刚性阈值（默认值）
.br
1：柔性阈值（去色斑效果好，但较模糊）
.br
4：与0相似，但同时使用B帧的量化参数（可能导致闪烁）
.br
5：与1相似，但同时使用B帧的量化参数（可能导致闪烁）
.RE
.
.TP
.B uspp[=quality[:qp]]
极简单且缓慢的后期处理滤镜，它在多次（或者——在质量等级为8时——在
所有的）变换中压缩和解压图像并使结果平均化。
其与spp行为的差异在于uspp在所有情况下使用libavcodec Snow编码及解码，
而spp仅使用类似于MJPEG的简化的内部8x8DCT变换。
.RSs
.IPs <quality>
0\-8 （默认值：3）
.IPs "<qp>\ "
强制使用的量化参数（默认值：0，使用来自视频的量化参数）。
.RE
.
.TP
.B fspp[=quality[:qp[:strength[:bframes]]]]
简单后期处理滤镜的一个快速版本
.RSs
.IPs <quality>
4\-5 （与spp中的等价；默认值：4）
.IPs "<qp>\ "
强制使用的量化参数（默认值：0，使用来自视频的量化参数）。
.IPs <\-15\-32>
过滤强度，值越低意味着加入更多细节但同时也带来更多损伤，而值越高越使图像
平滑但同时也越模糊（默认值：0 \- PSNR优化）。
.IPs <bframes>
0：不使用B帧的量化参数（默认值）
.br
1：也使用B帧的量化参数（可能导致闪烁）
.RE
.
.TP
.B pp7[=qp[:mode]]
spp滤镜的变种，与使用7顶点DCT的spp=6相似，在这种情况下只有中央的采
样在IDCT后使用。
.RSs
.IPs "<qp>\"
强制使用的量化参数（默认值：0，使用来自视频的量化参数）。
.IPs <mode>
0：刚性阈值
.br
1：柔性阈值（去色斑效果较好，但较模糊）
.br
2：中性阈值（默认值，效果好）
.RE
.
.TP
.B qp=equation
量化参数（QP）变换滤镜
.RSs
.IPs <equation>
诸如“2+2*sin(PI*qp)”之类的方程式
.RE
.
.TP
.B geq=equation
通用方程式变换滤镜
.RSs
.IPs <equation>
某种方程式，例如用以水平翻转图像的‘p(W\-X\\,Y)’。
你可以使用空白分隔符使方程式更容易读懂。
有一些常量可以在方程式中使用：
.RSss
PI：圆周率派
.br
E：自然常数e
.br
X / Y：当前采样中的坐标
.br
W / H：图像的宽度和高度
.br
SW / SH：当前滤镜处理过后的平面的宽/高度量尺度，例如用于YUV 4:2:0的1,1和
0.5,0.5。
.br
p(x,y)：返回当前平面x/y位置上像素的值。
.REss
.RE
.
.TP
.B "test\ \ \ "
生成各种测试中的测试用图样。
.
.TP
.B rgbtest[=width:height]
生成一个RGB测试图样，适用于对比RGB和BGR的场合。
你会看到由上而下的红、黄、蓝三色条纹。
.RSs
.IPs <width>
期望生成图像所具有的宽度（默认值：0）。
0 表示输入图像的宽度。
.br
.IPs <height>
期望生成图像所具有的高度（默认值：0）。
0 表示输入图像的高度。
.RE
.
.TP
.B lavc[=quality:fps]
使用libavcodec的YV12至MPEG-1的快速软件转换，用于与DVB/\:DXR3/\:IVTV/\:V4L2一同使用。
.RSs
.IPs <quality>
1\-31：固定的量化尺度
.br
32\-：以kbits为单位的固定比特率
.IPs <fps>
强制指定的输出fps值（浮点值）（默认值：0，根据图像高度自动检测）
.RE
.
.TP
.B dvbscale[=aspect]
设置用于DVB卡的优化缩放比例，用硬件度量x轴而用软件计算y轴比率以保持宽高比。
只有当与expand和scale滤镜一同使用时才有用。
.RSs
.IPs <aspect>
控制宽高比例，计算方式为DVB_HEIGHT*ASPECTRATIO（默认值：576*4/3=768
），对于16:9的电视将其设置为576*(16/9)=1024。
.RE
.sp 1
.RS
.I 示例：
.RE
.PD 0
.RSs
.IPs "\-vf dvbscale,scale=\-1:0,expand=\-1:576:\-1:\-1:1,lavc"
FIXME：解释一下这个是干什么的。
.RE
.PD 1
.
.TP
.B noise[=luma[u][t|a][h][p]:chroma[u][t|a][h][p]]
添加噪声效果。
.PD 0
.RSs
.IPs <0\-100>
亮度噪声
.IPs <0\-100>
色度噪声
.IPs u
均匀噪声（否则就是高斯分布的）
.IPs t
瞬时噪声（噪声样式在不同帧上是不同的）
.IPs a
平均化瞬时噪声（更平滑，但相较而言渲染得很慢）
.IPs h
高质量（稍显好看，渲染稍慢）
.IPs p
具有（半）规则样式的混合随机噪声
.RE
.PD 1
.
.TP
.B denoise3d[=luma_spatial:chroma_spatial:luma_tmp:chroma_tmp]
该滤镜目标在于消除图像上的噪声，产生平滑的图像，并且使静态图像真正静止（这能提
高可压缩性。）。
.PD 0
.RSs
.IPs <luma_spatial>
空间亮度强度（默认值：4）
.IPs <chroma_spatial>
空间色度强度（默认值：3）
.IPs <luma_tmp>
亮度瞬时强度（默认值：6）
.IPs <chroma_tmp>
色度瞬时强度（默认值：luma_tmp*chroma_spatial/luma_spatial）
.RE
.PD 1
.
.TP
.B hqdn3d[=luma_spatial:chroma_spatial:luma_tmp:chroma_tmp]
denoise3d滤镜的高精确/\:质量版本。
参数与用法与denoise3d相同。
.
.TP
.B ow[=depth[:luma_strength[:chroma_strength]]]
过补偿小波降噪滤镜。
.PD 0
.RSs
.IPs <depth>
depth 值越大将去除越是更多地去除越是低频率的部分的噪音，但同时越是减慢过滤速度（默认
值：8）。
.IPs <luma_strength>
亮度强度（默认值：1.0）
.IPs <chroma_strength>
色度强度（默认值：1.0）
.RE
.PD 1
.
.TP
.B eq[=brightness:contrast]（已被淘汰）
就像硬件均衡器一样的可以交互式控制的软件均衡器，用于那些不支持硬件级
亮度和对比度控制的显卡/\:驱动。
可能对于MEncoder很有用，不管是用来修改抓取得不好的影片，还是稍稍降低对
比度以隐藏画质损伤以及在低比特率下保持质量
.PD 0
.RSs
.IPs <\-100\-100>
初始亮度
.IPs <\-100\-100>
初始对比度
.RE
.PD 1
.
.TP
.B eq2[=gamma:contrast:brightness:saturation:rg:gg:bg:weight]
另一种软件均衡器，其使用对照表（运行缓慢），除了简单的亮度和对比度
调整外还允许伽玛修正。
注意当所有的伽玛值为1.0时，它与\-vf eq使用同样的MMX优化代码。
参数值是以浮点值形式给出的。
.PD 0
.RSs
.IPs <0.1\-10>
初始伽玛值（默认值：1.0）
.IPs <\-2\-2>
初始对比度，其中负数值将导致图像呈现负片效果（默认
值：1.0）
.IPs <\-1\-1>
初始亮度（默认值：0.0）
.IPs <0\-3>
初始饱和度（默认值：1.0）
.IPs <0.1\-10>
红色成份的伽玛值（默认值：1.0）
.IPs <0.1\-10>
绿色成份的伽玛值（默认值：1.0）
.IPs <0.1\-10>
蓝色成份的伽玛值（默认值：1.0）
.IPs <0\-1>
权值参数可以用来消减速高伽玛值在图像明亮区域的效果，比方说\&防止这些区域过度增
益而变得仅仅是纯白色。
值为0.0则使得在所有情况下执行伽玛值修正，而值为1.0则让伽玛值始终保持其修饰力度
（默认值：1.0）。
.RE
.PD 1
.
.TP
.B hue[=hue:saturation]
就像硬件均衡器一样的可以交互控制的软件均衡器，，用于那些不支持硬件级
色调和饱和度控制的显卡/\:驱动。
.PD 0
.RSs
.IPs <\-180\-180>
初始色调（默认值：0.0）
.IPs <\-100\-100>
初始饱和度，其中负数值将导致负色度（默认值：1.0）
.RE
.PD 1
.
.TP
.B halfpack[=f]
将按平面存放的YUV 4:2:0格式转换成半高度打包的4:2:2格式，对于亮度值降低质量采样
但保留所有色度采样值。
适用于当硬件收缩图像的质量不高或无法提供该功能时，将信号输出至一个低分辨率显
示设备的场合。
也可以用来作为一种占用CPU低的仅针对亮度信号的基本反隔行扫描滤镜。
.PD 0
.RSs
.IPs "<f>\ \ "
默认情况下，半打包过程在降低质量采样时在每对扫描行间取平均值。
任何不为0或1的值都是指定采用默认的（取平均值的）行为。
.RSss
0：在降低质量采样时只使用偶数扫描行的信息。
.br
0：在降低质量采样时只使用奇数扫描行的信息。
.REss
.RE
.PD 1
.
.TP
.B ilpack[=mode]
当隔行扫描视频以YUV 4:2:0格式存放时，由于色度信道在垂直方向的降低质量
采样的关系，色度信号在隔行扫描中没有恰当地地排列。
该滤镜将按平面存放的4:2:0的数据打包进YUY2（4:2:2）格式时将色度信号恰
当地排列至应处的位置，以便在任何扫描行中，亮度和色度数据来源于同一个
数据域时。
.PD 0
.RSs
.IPs <mode>
选择采样的模式。
.RSss
0：最接近邻居采样模式，快速但不准确
.br
1：线性插值（默认方式）
.REss
.RE
.PD 1
.
.TP
.B harddup
只适用于MEncoder。
如果在编码中使用了hardup，则它将强制使重复的帧编码至输出中。
这将占用稍多的空间，但对于输出至MPEG文件或当你要在编码后分离再合并视频
流时却有必要。
应被放置于滤镜链的最后或接近于最后，除非你有充足的理由不这样做。
.
.TP
.B softskip
只适用于MEncoder。
softskip将编码中跳过（丢弃）帧的步骤从滤镜链之前移至滤镜链中的某个
位置。
这使那些需要读取所有帧的滤镜（反电视电影模式、反瞬时噪声等等）能正
常工作。
应被放置在那些需要读取所有帧的滤镜之后，而在这些滤镜后的任何大量消
耗CPU的滤镜之前。
.
.TP
.B decimate[=max:hi:lo:frac]
丢弃那些与先前的帧差别不大的帧，以降低帧率。
该滤镜的主要用途是为了在极低的比特率下编码（例如\&在拨号接入的调制解
调器线路上传输流媒体），但在理论上它可以用于修复那些不准确地去除电视
模式过的影片）。
.PD 0
.RSs
.IPs <max>
设置最大可以连续丢弃的帧的个数（当该值为正数时），或被丢弃
帧间的最小间隔（当该值为负数时）。
.IPs <hi>,<lo>,<frac>
当没有一个8x8的区域的差别值大于阈值<hi>，并且不超过<frac>个部分（1表示
整幅画面）的差别值大于阈值<lo>时，这个帧就可以被丢弃。
数值<hi>和<lo>表示8x8像素区块中实际存在的不同值的像素个数，于是阈值64
对应于每个像素都有一个不同的值，或这种情形以不同的形式在整个区块中分布
的形式。
.RE
.PD 1
.
.TP
.B dint[=sense:level]
这个丢弃反隔行扫描（dint）滤镜侦测出并丢弃一连串隔行扫描视频的帧中的
第一个帧。
.PD 0
.RSs
.IPs <0.0\-1.0>
相邻像素间的相对差别值（默认值：0.1）
.IPs <0.0\-1.0>
图像中的哪个部分必须被侦测以判定是否为隔行扫描以便丢弃帧（
默认值：0.15）。
.RE
.PD 1
.
.TP
.B lavcdeint（已被淘汰）
FFmpeg中的反隔行扫描滤镜，与\-vf pp=fd相同
.
.TP
.B kerndeint[=thresh[:map[:order[:sharp[:twoway]]]]]
Donald Graft的自适应内核级反隔行扫描滤镜。
当超过配置中的一个阈值时，解除视频中的隔行扫描部分。
.PD 0
.RSs
.IPs <0\-255>
阈值（默认值：10）
.IPs <map>
.RSss
0：忽略超出阈值的像素（默认方式）。
.br
1：将超出阈值的像素输出为白色。
.REss
.IPs <order>
.RSss
0：不对场次序做更改（默认方式）。
.br
1：交换场的次序。
.REss
.IPs <sharp>
.RSss
0：禁用额外的锐化处理（默认方式）。
.br
1：启用额外的锐化处理
.REss
.IPs <twoway>
.RSss
0：禁用双向锐化处理（默认方式）。
.br
1：启用双向锐化处理。
.REss
.RE
.PD 1
.
.TP
.B unsharp[=l|cWxH:amount[:l|cWxH:amount]]
反锐化修饰 / 高斯模糊
.RSs
.IPs "l\ \ \ \ "
将效果应用于亮度部分。
.IPs "c\ \ \ \ "
将效果应用于色度部分。
.IPs <width>x<height>
矩阵的宽度和高度，两者都是奇数尺寸
（最小值 = 3x3，最大值 = 13x11或11x13，通常在3x3至7x7之间）
.IPs amount
图像锐力度/\:模糊度的相对增量（合理的值应为\-1.5\-1.5）。
.RSss
<0：模糊
.br
>0：锐力
.REss
.RE
.
.TP
.B "swapuv\ "
交换U和V两个平面的位置。
.
.TP
.B il[=d|i][s][:[d|i][s]]
对扫描行执行（反）交错操作。
该滤镜的目标是提供处理隔行扫描图像的前半个扫描场而不对其进行反隔行扫描操作的
功能。
你可以在不破化隔行扫描结构的情况下过滤你的隔行扫描DVD视频，然后让其在电视上播放。
（在后期处理滤镜的作用下）反隔行扫描（通过柔化、平均化之类的手段）永久性地去
除了隔行扫描结构，而解交错操作将帧分离成2个扫描场（所谓的半幅画面），因此你可以
分别地处理（过滤）这些扫描场然后重新将它们交错起来。
.PD 0
.RSs
.IPs d
反交错操作（将一个扫描场置于另一个上方）
.IPs i
交错操作
.IPs s
交换扫描场的位置（交换奇偶扫描线的位置）
.RE
.PD 1
.
.TP
.B fil[=i|d]
对扫描行执行（反）交错操作。
与il滤镜十分相像，但相较之下运行得很快，其主要的缺点是它不是总能工作。
尤其是当它与其它滤镜一起使用时，它可能随机产生一些渲染错误的图像，所以
如果它能工作则暗自庆幸吧，但如果它在你的滤镜组合中不能工作也不要抱怨。
.PD 0
.RSs
.IPs d
对扫描场执行反交错操作，将它们一个个紧挨着放在一起。
.IPs i
对扫描场再次执行交错操作（产生与fil=d相反的效果）。
.RE
.PD 1
.
.TP
.B field[=n]
使用大跨度计算方式从一幅隔行扫描图像中抽取单个扫描场，以避免浪费CPU
时间。
可选参数n指定抽取的是偶数场还是奇数场（取决于n是偶数还是奇数）。
.
.TP
.B detc[=var1=value1:var2=value2:...]
尝试逆转‘电视电影模式’处理操作以还原一个电影帧率下的纯净、非
隔行扫描的视频流。
这是第一个也是最基本的一个添加到MPlayer/\:MEncoder中的反电视电影模式
滤镜。
其工作方式是锁定电视电影模式中的3:2画面特征，然后尽可能长地跟踪这个特
征。
这使它适合完全电视电影模式化的来源，即使在有一定噪声的情况下亦是如此，
但不适用于复杂的后期电视电影模式的图像的编辑。
这个滤镜的开发已不再继续，因为ivtc、pullup、和filmdint在大多数应用中效
果更好。
以下参数（参见下面的句法解释）可用于控制detc的行为：
.RSs
.IPs "<dr>\ "
设置丢弃帧的模式。
.RSss
0：不丢弃帧以保证输出帧率恒定（默认方式）。
.br
1：当最近5个帧没有丢弃或不是电视电影模式时则一定丢弃一个帧。
.br
2：总保证输入输出帧率比正好为5:4。
.br
.I 注意：
模式1和2用于MEncoder。
.REss
.IPs "<am>\ "
分析模式。
.RSss
0：固定特征，初始帧代号由<fr>中所指定。
.br
1：积极搜寻电视电影模式特征（默认值）
.REss
.IPs "<fr>\ "
设定帧序列中初始帧的代号。
0\-2是三个纯逐行扫描的帧；3和4是两个隔行扫描的帧。
默认值\-1表示‘初始帧不在电视电影模式的序列中’。
这里指定的代号是影片开始前假想的那个前一帧的类型。
.IPs "<t0>, <t1>, <t2>, <t3>"
用于某些模式下的阈值。
.RE
.
.TP
.B ivtc[=1]
实验性的‘无状态’逆转电视电影模式滤镜。
ivtc并不像detc滤镜那样尝试锁定一个特征，而是对于每一帧独立地决策。
这对于那些在应用电视电影模式后经历较多编辑的来源相对而言具有很好的效
果，但相应地它相对不能容忍有噪声的输入，比如电视上捕捉来的视频。
可选参数（ivtc=1）对应于detc滤镜的dr=1选项，并且应当用于MEncoder中而不
能用于MPlayer。
与detc一样，你必须在使用MEncoder时指定正确的输出帧率
（\-ofps24000/1001）。
ivtc的进一步开发已停止，因为pullup和filmdint滤镜显得相对精确得多。
.
.TP
.B pullup[=jl:jr:jt:jb:sb:mp]
第三代反pulldown（逆转电视电影模式）滤镜，能够处理混合型硬性电视电影模式的，
24000/1001帧率逐行扫描的，以及30000/1001帧率逐行扫描的内容。
pullup滤镜的设计原则是通过在决策中利用将来的内容环境，以求得比detc或
ivtc更稳定。
与ivtc相似，pullup是无状态的，这源于它不锁定扫描场以识别要匹配的内容然
后重塑逐行扫描的帧。
它仍处于开发之中，但人们相信它是相当精确的。
.RSs
.IPs "jl, jr, jt, and jb"
这些选项用于设置图像的左边、右边、上边和下边各有多少
“垃圾信息”要忽略。
左/\:右两边是以8像素为一个单元，而上/\:下两边是以2个扫描行为一个单元。
默认是每边各取8个像素。
.br
.IPs "sb (strict breaks)"
将该选项设置为1将减小pullup产生偶发性不匹配帧的机率，
但它也可能导致高动态的帧序列中有太多的帧被丢弃。
相反地，将它设置为\-1将使pullup能更容易地匹配扫描场。
这能帮助处理那些在扫描场间存在一些模糊特性的视频，但也可能导致输出中
存在隔行扫描的帧。
.br
.IPs "mp (metric plane)"
这个选项可以设置成1或2以使用色度平面而不是亮度平
面来进行pullup的计算。
这能提高处理清晰来源时的精确度，但更可能的是降低精确度，尤其是存在
色度噪声（彩虹效应）或灰度视频的场合。
将mp设置成色度平面的主要目的是降低CPU负荷，并使pullup在慢速机器上可用。
.REss
.RS
.sp 1
.I 注意：
在编码中一定要在pullup后跟上softskip滤镜以保证pullup能读取所有帧。
由于编解码器/\:滤镜层在设计上的局限，不这样做会导致输出不正确，并且往
往程序会崩溃。
.REss
.
.TP
.B filmdint[=options]
逆转电视电影模式滤镜，与上面的pullup滤镜相似。
它被设计成用于处理任意下拉特征，包括混合型软性和硬性的电视电影模式，
以及提供对于那些会慢于或快于其在电视上的原始帧率的影片的有限支持。
只有亮度平面用以寻找帧分开的位置。
如果一个扫描场没有匹配上特征，则就使用简单的线性估计方式解除其
隔行扫描结构。
如果来源是MPEG-2格式，那么这个滤镜必须是第一个滤镜以便能够访问
MPEG-2解码器设置的扫描场标志。
根据来源MPEG的不同，你可能不需采纳这个建议，只要你不看到许多“下半场先
扫描”的警告。
不设选项时，它只是做普通的逆转电视电影模式处理，并且应当与
mencoder \-fps 30000/1001 \-ofps 24000/1001一同使用。
当这个滤镜用于 MPlayer 时，它将导致播放时帧速率不匀衡，但在通常情况下比
使用pp=lb或不进行反隔行扫描操作要好。
多个选项可以使用/.分隔开指定。
.RSs
.IPs crop=<w>:<h>:<x>:<y>
就像crop滤镜一样，但更快而且能用于混合型硬性和软性电视电影模式的内容，
以及y不用4的倍数的情形。
如果x或y的设置将需要从色度平面中切除部分像素时，切除区域将延伸。
这通常意味着x和y必须是偶数。
.IPs io=<ifps>:<ofps>
对于每ifps个输入帧，滤镜将输出ofps个帧。
ifps/\:ofps的比率应当与\-fps/\-ofps的比率相匹配。
这可以用于过滤那些在电视上以不同原始帧率的帧率播放的影片。
.IPs luma_only=<n>
如果n为非零值，色度平面就原封不动地输出。
这适用于YV12采样的电视，这种方式丢弃其中一个色度扫描场。
.IPs mmx2=<n>
在x86系统上，如果n=1，则使用MMX2优化的函数，如果n=2，则使用3DNow!
优化的函数，否则使用普通的C语句。
如果不指定这个选项，则将自动侦测MMX2和3DNow!，使用这个选项重写自动侦测
的结果。
.IPs fast=<n>
n值较大时能提高滤镜的运行速度但牺牲了精确性。
默认值是n=3。
如果n是奇数，MPEG的REPEAT_FIRST_FIELD标志位已标记的帧后紧跟的一帧将被
认作是逐行扫描的，于是滤镜将不在处理软性电视电影模式的MPEG-2内容上花任
何时间了。
如果MMX2或3DNow!可用，那么这就是该标志位的唯一作用。
在没有MMX2和3DNow!的情况下，如果n=0或1，那么将使用与n=2或3的时候同样的
计算方式。
如果n=2或3，用于寻找帧间断的亮度阶数值就从256降低为128，这使滤镜运行更
快而不损失太多的精确性。
如果n=4或5，将使用一个更快的，但相较之下很不精确的测量标准来寻找帧间
断，这样做会增加将垂直方向上细节很多的图像误测为隔行扫描内容的可能性。
.IPs verbose=<n>
如果n是非零值，则打印出用于每个帧的具体测量标准。
适用于程序调试。
.IPs dint_thres=<n>
反隔行扫描的阈值。
用于解除未匹配任何特征的帧的隔行扫描结构的过程中。
阈值大意味着较少的帧经过反隔行扫描处理，要完全关闭反隔行扫描处理则
使用n=256。
默认值为n=8。
.IPs comb_thres=<n>
比较上半扫描场和下半扫描场的阈值。
默认值为128。
.IPs diff_thres=<n>
用于侦测扫描场的瞬时变化的阈值。
默认值为128。
.IPs sad_thres=<n>
合计绝对差的阈值，默认为64。
.RE
.
.TP
.B softpulldown
这个滤镜只能用于MEncoder并且依赖于用于软性3:2下拉（软性电视电影模式）的
MPEG-2标志位。
如果你想对半软性电视模式的影片使用ivtc或detc滤镜，那么将该滤镜插入到它们之前
能使他们更稳定。
.
.TP
.B divtc[=options]
逆转隔行扫描视频的电视电影模式。
如果3:2下拉电视电影模式的视频丢失了其中的一个扫描场，或在反隔行扫描时使用了
保留一个扫描场而插值计算另一个的方法，那么输出的是一个晃动的视频，其中的每四
个帧后有一个是重复的帧。
该滤镜目的是找到并丢弃这些重复的帧，并还原原来的影片帧率。
在使用这个滤镜时，你必须设将\-ofps指定为输入视频文件帧率的4/5
并将softskip放在滤镜链中位于其后的地方，以保证divtc能读取所有
的帧。
有两种不同的模式可选：
一阶段模式是默认的模式，并且直接就能使用，但缺点是任何电
视图像模式下相位的变化（丢帧或编辑错误）将导致暂时的画面
抖动直至滤镜重新恢复同步。
二阶段模式通过事先分析整个视频来避免这种问题，所以它能事
先知道相位的变化并能在准确的位置恢复同步。
这两个阶段
.B 不
对应于第一阶段和第二阶段的编码处理过程。
你必须在真正编码而释放出处理后的视频之前，使用divtc的第一
阶段配置运行额外的一个阶段。
使用\-nosound \-ovc raw \-o /dev/null来避免在这一阶段浪费
CPU的运算能力。
你可以在divtc后加上诸如crop=2:2:0:0之类的东西以运行
得更快。
然后使用divtc第二阶段配置以进行真正的编码。
如果你使用多阶段编码器编码，那么在所有阶段均要
使用divtc第二阶段的配置。
相关选项有：
.RSs
.IPs pass=1|2
使用二阶段模式。
.IPs file=<filename>
设置第二阶段使用的日志的文件名（默认值：“framediff.log”）。
.IPs threshold=<value>
设置滤镜认为某个特征是电视电影模式特征时，该特征所必须达到的最小强度（默认
值：0.5）。
这用于避免从视频中很暗或很静止的部分里错误地识别出一些特征。
.IPs window=<numframes>
设置搜寻特征时需要察看多少个最近读到的帧（默认值：30）。
较长的察看范围能增加特征搜寻的可靠性，但较短的察看范围能改善对于电视图
像模式中相位变化的反应时间。
该选项只对一阶段模式有作用。
当前，二阶段模式使用固定的察看范围，该范围包含了过去和将来输入的帧。
.IPs phase=0|1|2|3|4
设置一阶段模式中电视电影模式的初始相位（默认值：0）。
二阶段模式能读取将来输入的帧，所以它能够在一开始就使用正确的相位值，但
一阶段模式只能靠猜测。
当它找到正常的相位时它能跟上这个相位，但该选项能用来开始时可能出现的抖动。
二阶段模式的第一阶段也使用该选项，所以如果你保存第一阶段的输出内容，你就会得
到持续的相位值跟踪结果。
.IPs deghost=<value>
设置去鬼影处理的阈值（0\-255用于一阶段模式，\-255\-255用于二阶段模式，默认0）。
如果为非零值，则使用去鬼影模式。
该选项用于那些通过将扫描场混合在一起而不是丢弃其中一个场的方式解除
隔行扫描的视频。
去鬼影处理会增强混合后帧中的压缩损伤，所以该参数值作为一个阈值，用以
将那些在去鬼影过程中与前一帧的相差值小于一个特定值的像素排除在外。
如果使用了二阶段模式，可以用负数值使滤镜在第二阶段开始时分析整个视频，以
确定它是否需要去鬼影处理，然后要么选择一个零值，要么选择该值的绝对值作
为去鬼影的参数。
应将该选项用于第二阶段，这与用于第一阶段没有差别
.RE
.
.TP
.B phase[=t|b|p|a|u|T|B|A|U][:v]
将隔行扫描的视频延迟一个扫描场的时间，以改变扫描场的次序。
其目的是修复那些在录像带传输至电脑视频的捕捉过程中使用了相反的扫描场次
序的PAL影片。
选项有：
.RSs
.IPs t
捕捉时扫描场次序为上半场先输入，传输时为下半场先输入。
滤镜将延迟下半场。
.IPs b
捕捉时扫描场次序为下半场先输入，传输时为上半场先输入。
滤镜将延迟上半场。
.IPs p
捕捉和传输时使用同样的扫描场次序。
该模式只是为了在其它选项的使用说明中引用而存在的，但如果你真的选了它，那么滤
镜会按照您的旨意不做任何事情。;-)
.IPs a
捕捉时的次序将自动通过扫描场的标志位来判断，传输时的与捕捉时的相反。
滤镜根据扫描场的标志位为每一个帧在t和b两个模式中选择一个。
如果没有任何扫描场的信息，那么该模式就与u一样了。
.IPs u
捕捉时的次序未知或不断变化，传输时的与捕捉时的相反。
滤镜通过分析图像并选择能在扫描场间产生最佳匹配的那个候选模式来给每一个帧
在t和b两个模式中选择一个。
.IPs T
捕捉时为上半场先输入，传输时未知或不断变化。
滤镜通过分析图像在t和p模式中选择一个。
.IPs B
捕捉时为下半场先输入，传输时未知或不断变化。
滤镜通过分析图像在b和p模式中选择一个。
.IPs A
捕捉时的次序由扫描场标志位判断，传输时的未知或不断变化。
滤镜通过扫描场标志位和图像分析从t、b和p中选择一个模式。
如果没有任何扫描场信息，则该模式与U一样。
这是默认的模式。
.IPs U
捕捉时和传输时的次序均未知或不断变化。
滤镜只通过图像分析以从t、b和p中选择一个模式。
.IPs v
细节信息处理。
打印每个帧所选用的模式以及在t、b和p三种模式下的扫描场间的均方差值。
.RE
.
.TP
.B telecine[=start]
应用3:2‘电视电影模式’处理以使帧率增加20%。
该选项极可能无法用于MPlayer，但它可以以'mencoder \-fps 30000/1001 \-ofps
 30000/1001 \-vf telecine'形式使用。
其中的两个fps选项都是必需的！
（如果它们不正确，就无法A/V同步。）
可选的start参数告诉滤镜从电视电影模式特征中的哪里开始执行（0\-3）。
.
.TP
.B tinterlace[=mode]
瞬时扫描场隔行扫描化——将一对对帧合并为一个个隔行扫描的帧，使帧率减半。
偶数帧移至上半扫描场，奇数帧移至下半扫描场。
该滤镜可用于充分反转（模式0下）tfields滤镜的效果。
可用模式有：
.PD 0
.RSs
.IPs 0
将奇数帧移至上半场，偶数帧移至下半场，以在半速帧率下产生一个完全高度的帧。
.IPs 1
只输出奇数帧，丢弃偶数帧；帧的高度不变。
.IPs 2
只输出偶数帧，丢弃奇数帧；帧的高度不变。
.IPs 3
将每个帧扩展至完全高度，但每两个扫描行间插入黑色的行；帧速不变。
.IPs 4
将偶数帧的偶数扫描行与奇数帧的奇数扫描行交叉在一起。
帧高度不变，帧速减半。
.RE
.PD 1
.
.TP
.B tfields[=mode[:field_dominance]]
瞬时扫描场分离——将扫描场分离成帧，输出帧率加倍。
就像 telecine 滤镜，tfields 可能无法正常工作，除非用于 MEncoder，并且 \-fps
和 \-ofps 设置成所需的（加倍的）帧率的情况下！
.PD 0
.RSs
.IPs <mode>
0：保持扫描场不变（会产生跳帧/\:闪烁）。
.br
1：插值恢复缺少的扫描行。（所用的算法可能不太好。）
.br
2：使用线性插值法以1/4像素精度转换扫描场（不产生跳帧）。
.br
4：使用4tap滤镜以1/4像素精度转换扫描场（较高质量）（默认方式）。
.IPs <field_dominance>\ (不推荐使用）
\-1：自动（默认值）
只有当解码器输出适当的信息并且在滤镜链中tfields之前没有其它的滤镜丢
弃这些信息时才能工作，否则该值设回为0（上半扫描场先输入）。
.br
0：上半扫描场先输入
.br
1：下半扫描场先输入
.br
.I 注意：
该选项相当可能在以后的版里中去除。
使用\-field\-dominance代替它。
.RE
.PD 1
.
.TP
.B yadif=[mode[:field_dominance]]
又一个反隔行扫描的滤镜
.PD 0
.RSs
.IPs <mode>
0：每存在一帧输出一帧。
.br
1：每存在一个扫描场输出一帧。
.br
2：与0相似但跳过空间隔行扫描检查。
.br
3：与1相似但跳过空间隔行扫描检查。
.IPs <field_dominance>\ （不推荐使用）
与tfields运行方式相似。
.br
.I 注意：
该选项相当可能在以后的版本中去除。
使用\-field\-dominance替代它。
.RE
.PD 1
.
.TP
.B mcdeint=[mode[:parity[:qp]]]
包含运动补偿的反隔行扫描滤镜。
它要求每帧有一个扫描场作为输入并且必须与tfields=1或yadif=1/3或与之等
价的滤镜一起使用。
.PD 0
.RSs
.IPs <mode>
0：快速
.br
1：中等
.br
2：慢速，迭代式的运动估计
.br
3：更慢，与模式2外加参照多个帧的方式相似
.IPs <parity>
0或1用于选择使用哪个扫描场（注意：目前还不能自动侦测！）。
.IPs "<qp>\ "
较高的值能产生较平滑的运动矢量场，但单个矢量得到优化的
较少。
.RE
.PD 1
.
.TP
.B boxblur=radius:power[:radius:power]
盒状模糊
.PD 0
.RSs
.IPs <radius>
模糊过滤的强度
.IPs <power>
应用过滤的数量
.RE
.PD 1
.
.TP
.B sab=radius:pf:colorDiff[:radius:pf:colorDiff]
自适合形状的模糊
.PD 0
.RSs
.IPs <radius>
模糊过滤的强度（~0.1\-4.0）（值越大越慢）
.IPs "<pf>\ "
预过滤强度（~0.1\-2.0）
.IPs <colorDiff>
像素间会被认同的最大差值（~0.1\-100.0）
.RE
.PD 1
.
.TP
.B smartblur=radius:strength:threshold[:radius:strength:threshold]
智能模糊
.PD 0
.RSs
.IPs <radius>
模糊过滤的强度（~0.1\-5.0）（值越大越慢）
.IPs <strength>
模糊化（0.0\-1.0）或锐利化（\-1.0\-0.0）
.IPs <threshold>
过滤全部区域（0），过滤平坦区域（0\-30）或过滤边缘（\-30\-0）
.RE
.PD 1
.
.TP
.B perspective=x0:y0:x1:y1:x2:y2:x3:y3:t
修正没有摄制得垂直于屏幕的影片视角。
.PD 0
.RSs
.IPs <x0>,<y0>,...
左上角、右上角、左下角、右下角的坐标
.IPs "<t>\ \ "
线性（0）或立方式（1）重采样
.RE
.PD 1
.
.TP
.B "2xsai\ \ "
使用2x缩放及插值算法缩放并平滑图像。
.
.TP
.B "1bpp\ \ \ "
YUV/\:BGR 8/\:15/\:16/\:32转换中的1bpp映射位图
.
.TP
.B down3dright[=lines]
重设立体图像的位置及大小。
将两个立体扫描场都抽取出来并将其紧靠着摆放，以将它们缩放至保持原有
影片宽高比的大小。
.PD 0
.RSs
.IPs <lines>
要从图像的中间选取的扫描行的数量（默认值：12）
.RE
.PD 1
.
.TP
.B bmovl=hidden:opaque:fifo
这个位图覆盖滤镜从FIFO管道中读取位图并将它们显示在影片的上方，以支持某
些对于图像的变换。
另参见TOOLS/bmovl-test.c以获取一个小型的bmovl测试程序。
.PD 0
.RSs
.IPs <hidden>
设置‘hidden’标志位的默认值（0=可见，1=不可见）。
.IPs <opaque>
设置‘opaque’标志位的默认值（0=透明，1=不透明）。
.IPs <fifo>
FIFO管道（连接‘mplayer \-vf bmovl’和主控程序的命名管道）的路径/\:文件名
.RE
.PD 1
.sp 1
.RS
FIFO管道中使用的命令有：
.RE
.PD 0
.RSs
.IPs "RGBA32 width height xpos ypos alpha clear"
其后出现的是width*height*4字节大小的原始RGBA32数据。
.IPs "ABGR32 width height xpos ypos alpha clear"
其后出现的是width*height*4字节大小的原始ABGR32数据。
.IPs "RGB24 width height xpos ypos alpha clear"
其后出现的是width*height*3字节大小的原始RGB24数据。
.IPs "BGR24 width height xpos ypos alpha clear"
其后出现的是width*height*3字节大小的原始BGR24数据。
.IPs "ALPHA width height xpos ypos alpha"
更改指定区域的阿尔法透明度。
.IPs "CLEAR width height xpos ypos"
清空某个区域。
.IPs OPAQUE
禁用一切阿尔法透明。
要再次启用则发送“ALPHA 0 0 0 0 0”
.IPs "HIDE\ "
隐藏位图。
.IPs "SHOW\ "
显示位图。
.RE
.PD 1
.sp 1
.RS
参数有：
.RE
.PD 0
.RSs
.IPs "<width>, <height>"
图像/区域的大小
.IPs "<xpos>, <ypos>"
从x/y位置开始位图混合
.IPs <alpha>
设置阿尔法差值。
如果你将该值设为\-255，你就可以发送一系列的阿尔法命令将该区域设置为\-225、\-200、
\-175等等以得到一个不错的渐渐出现的效果！;)
.RSss
0：   保持原来的值
.br
255： 使所有的位图不透明。
.br
\-255：使所有的位图透明。
.REss
.IPs <clear>
在位图混合前清空帧缓冲。
.RSss
0：在原来的图像上进行位图混合，于是你不必每当屏幕中的一小部分更新时就发送1.8MB
的RGB32数据。
.br
1：清空图像
.REss
.RE
.PD 1
.
.TP
.B framestep=I|[i]step
仅仅每隔n个帧或只对每个内部参照帧（关键帧）进行渲染。
.sp 1
如果你使用I（大写）作为参数调用这个滤镜，那么
.B 只有
关键帧才渲染。
对于DVD来说它通常意味着每15/12个帧中才有一帧（IBBPBBPBBPBBPBB），对于
AVI来说它意味着每当场景切换时或每隔keyint值（参见\-lavcopts keyint= value）
所指定数量的帧过后才有一帧。
.sp 1
当找到关键帧时，将打印一个‘I!’字符串以及紧接着的一个换行符，以结束当前
MPlayer/\:MEncoder在屏幕上输出的那一行，因为这段信息中包含了关键帧的时间值
（以秒计）以及帧编号（你可以利用这一信息切分AVI。）。
.sp 1
如果你使用一个数值参数‘step’调用这个滤镜，那么只有每隔‘step’个帧过后
才有一个帧得到渲染。
.sp 1
如果你在数值前加上一个‘i’（小写），那么将输出‘I!’（就像I参数一样）
.sp 1
如果你只给出i，那么不对帧做任何处理，只打印I!。
.
.TP
.B tile=xtiles:ytiles:output:start:delta
将一系列图像拼成单个大图像。
如果你省略了一个参数或使用一个小于0的值，则将使用默认值。
你也可以在你认为满意的情况下停止指定参数（... \-vf tile=10:5 ...）。
将缩放滤镜放在tile之前很可能是个好主意:-)
.sp 1
这些参数有：
.sp 1
.PD 0
.RSs
.IPs <xtiles>
x轴方向拼贴的图像数（默认值：5）
.IPs <ytiles>
y轴方向拼贴的图像数（默认值：5）
.IPs <output>
当‘output’个帧到达时，渲染拼贴的图像，这里‘output’应当是一个小于
xtile * ytile的数。
拼贴图像中缺失的部分保留为空白。
比如，你可以每50帧写入一个8 * 7的拼帖图像，这样就在25fps下每2秒产生一幅
图像。
.IPs <start>
以像素为单位的外边框的厚度（默认值：2）
.IPs <delta>
以像素为单位的内边框的厚度（默认值：4）
.RE
.PD 1
.
.TP
.B delogo[=x:y:w:h:t]
通过根据周围的像素进行简单的插值来去除电视台的台标。
只需设置一个能盖住台标的长方形区域然后看着它消失就行了（有时更难看
的画面会出现——你能得到效果是说不准的）。
.PD 0
.RSs
.IPs <x>,<y>
台标的左上角
.IPs <w>,<h>
被清理的长方形区域的宽度和高度
.IPs <t>
长方形区域的模糊边缘的宽度（增加w和h的大小）。
当设为\-1时，屏幕上将绘出一个绿色的长方形以方便寻找合适的x、y、w、
h参数值。
.RE
.PD 1
.
.TP
.B remove\-logo=/path/to/logo_bitmap_file_name.pgm
去除电视台台标，使用PGM或PPM图像文件来判断哪些像素组成
了台标。
图像文件的宽度和高度必须与所处理的视频流的宽高相
匹配。
使用过滤图像以及一个循环模糊算法去除台标。
.RSs
.IPs /path/to/logo_bitmap_file_name.pgm
过滤图像的[路径] + 文件名。
.RE
.
.TP
.B zrmjpeg[=options]
与zr2视频输出设备一同使用的软件YV12至MJPEG编码器。
.RSs
.IPs maxheight=<h>|maxwidth=<w>
这些选项zr采集卡能处理的最大宽度和高度（MPlayer的滤镜层当前
还不能查询这些信息）。
.IPs {dc10+,dc10,buz,lml33}-{PAL|NTSC}
使用这些选项将maxwidth和maxheight自动设置为zr卡/\:混合模式所知的值。
比如，有效的选项有：dc10-PAL和buz-NTSC（默认值：dc10+PAL）
.IPs color|bw
选择彩色或黑白的编码。
黑白编码较快。
彩色编码为默认方式。
.IPs hdec={1,2,4}
水平方向抽取采样因数1、2或4。
.IPs vdec={1,2,4}
垂直方向抽取采样因数1、2或4。
.IPs quality=1\-20
设置JPEG压缩的质量[最好] 1 \- 20 [非常差]。
.IPs fd|nofd
默认设置下，只有当Zoran采集卡的硬件支持MJPEG图像放大至其原有大
小时才进行抽取采样。
选项fd命令滤镜总是进行所请求的抽取采样操作（效果很糟）。
.RE
.
.TP
.B screenshot
允许使用可以与按键绑定的被动模式下的命令以获取影片的截屏。
参见被动模式的说明文档以及交互式控制一节以获取详细信息。
命名为‘shotNNNN.png’的文件将保存在工作目录下，所用的编号为第一个
可以用的编号——不会覆盖任何文件。
该滤镜在不用时不占用资源，并且支持任意色彩空间，所以将其添加进
配置文件中很安全。
要确保 screenshot 滤镜是加在所有其效果你希望录在所保存图像中的滤镜之后。
例如，如果你希望截屏与你在显示屏上看到的完全一致，则它应当是最后一个滤镜。
.RE
.
.TP
.B "ass\ \ \ \ "
将SSA/ASS字幕的渲染移至滤镜链中的任意一个位置。
只适用于有\-ass选项的时候。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-vf ass,screenshot"
将SSA/ASS的渲染移至screenshot滤镜之前。
这样做后的截屏内容将包含字幕。
.RE
.PD 1
.
.TP
.B blackframe[=amount:threshold]
侦测出（几乎）完全黑色的帧。
可适用于侦测影片章节的切换或广告。
输出行由所侦测出帧的编号、黑色程度的百分比、帧的类型和最近遇到的关键帧的
编号组成。
.RSs
.IPs <amount>
数值低于阈值的像素的百分比率（默认值：98）。
.IPs <threshold>
决定像素值低于多少就被认作是黑色的阈值（默认值：32）。
.RE
.
.TP
.B gradfun[=strength[:radius]]
消除有时候因为将色深降至 8 比特后，在颜色近似不变的区域造成的带状损伤。
通过插值在带状区域产生变化坡度，从而使其颜色产生抖动效果。
.sp 1
设计该滤镜仅为播放目的。
不要在有损压缩步骤前使用该滤镜，因为压缩过程容易丢失抖动效果，从而恢复带状损伤。
.RSs
.IPs <strength>
滤镜改变单个像素的最大程度。
同时也是侦测颜色近似不变区域的阈值（默认值：1.2）。
.IPs <radius>
应用变化坡度的周边区域大小。
较大的 radius 值带来较平缓的变化坡度，但同时使滤镜不能修改靠近颜色变化丰富区域
的像素（默认值：16）。
.RE.
.
.
.
.SH "通用编码选项（仅用于MENCODER）"
.
.TP
.B \-audio\-delay <any floating-point number>
通过在文件头部中设置延迟信息域来延迟音频或视频。（默认值：0.0）。
该选项不在编码过程中延迟音频或视频流，但播放器会读出延迟信息域并做相
应的补偿处理。
正数值延迟音频，而负数值延迟视频。
注意该选项正好与\-delay选项相反。
例如，如果一段视频在\-delay 0.2下正确播放，那么你可以在MEncoder中使用
\-audio\-delay \-0.2修复视频的不同步问题。
.sp 1
当前，该选项只能用于默认的流合并器（\-of avi）。
如果你使用了另外的流合并器，那么你必须使用\-delay来代替该选项。
.
.TP
.B \-audio\-density <1\-50>
每秒钟处理的音频数据块数量（默认值为2，用于0.5s长的音频数据块）。
.br
.I 注意：
只用于CBR，VBR方式忽略该选项，因为它将每个数据包分别放入一个数据块中。
.
.TP
.B \-audio\-preload <0.0\-2.0>
设置音频缓冲的时音间隔（默认值：0.5s）。
.
.TP
.B \-fafmttag <format>
可用于改写输出文件中的音频格式标签。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-fafmttag 0x55"
将使输出文件包含0x55（mp3）的信息作为音频格式标签。
.RE
.PD 1
.
.TP
.B \-ffourcc <fourcc>
可用于改写输出文件中的视频fourcc值。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-ffourcc div3"
将使输出文件包含‘div3’的信息作为视频fourcc值。
.RE
.PD 1
.
.TP
.B \-force\-avi\-aspect <0.2\-3.0>
代替存储在AVI OpenDML vprp头部中的宽高比值。
该选项可用于在使用‘\-ovc copy’时更改宽高比值。
.
.TP
.B \-frameno\-file <filename>（不推荐使用）
指定包含有帧序号对应关系表的音频文件的文件名，该对应关系表是在特殊的三阶
段编码模式的第一阶段（只处理音频）中生成的。
.br
.I 注意：
使用该模式很可能会让你得到A-V不同步的结果。
不要使用它。
它只是为了向后兼容而保留的，并且相当可能在以后的版本中去除。
.
.TP
.B \-hr\-edl\-seek
在跳过处理区域时使用一种更精确但相对很慢的方式。
不是定位标记为需跳过的处理区域，而是解码所有的帧并且只有编码需
要的帧。
该选项使从非关键帧的边界开始编码成为可能。
.br
.I 注意：
不保证能与‘\-ovc copy’一同使用。
.
.TP
.B \-info <option1:option2:...>（只用于AVI）
指定生成的AVI文件的头部信息内容。
.sp 1
可用选项有：
.RSs
.IPs "help\ "
显示本部分描述。
.IPs name=<value>
作品的标题
.IPs artist=<value>
作品的作者
.IPs genre=<value>
原作的类别
.IPs subject=<value>
作品的内容
.IPs copyright=<value>
版权信息
.IPs srcform=<value>
数字化资料的原始格式
.IPs comment=<value>
关于作品的总体性注释
.RE
.
.TP
.B \-noautoexpand
不要自动在MEncoder滤镜链中插入扩展滤镜。
适用于将字幕内嵌入影片时控制在滤镜链中的哪一个点上渲染字幕。
.
.TP
.B \-noencodedups
不要尝试将重复的帧重复地编码；必须以输出零字节帧的方式表明有重复帧。
除非加载了能进行重复帧编码的滤镜或编码器，否则无论如何将写入零字节帧。
当前这样的滤镜只有hardup。
.
.TP
.B \-noodml（仅用于\-of avi的情况下）
对于大于1GB的AVI文件不写入OpenDML索引。
.
.TP
.B \-noskip
不要跳过任何帧。
.
.TP
.B \-o <filename>
输出至所给的文件名。
.br
如果你需要有一个默认的输出文件名，你可以将此选项放在MEncoder的配置文
件中。
.
.TP
.B \-oac <codec name>
使用所给的音频编解码器编码（没有默认值）。
.br
.I 注意：
使用\-oac help来获取可用音频编解码器的列表。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-oac copy"
不编码，直接复制音频流
.IPs "\-oac pcm"
编码为未压缩的PCM格式。
.IPs "\-oac mp3lame"
编码为MP3格式（使用LAME）。
.IPs "\-oac lavc"
使用libavcodec编解码器编码。
.RE
.PD 1
.
.TP
.B \-of <format>（BETA测试版代码！）
编码为指定的容器格式（默认值：AVI）。
.br
.I 注意：
使用\-of help以获取可用的容器格式的列表。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-of avi"
编码为AVI格式。
.IPs "\-of mpeg"
编码为MPEG格式（另参见\-mpegopts）。
.IPs "\-of lavf"
使用libavformat流合并器编码（另参见\-lavfopts）。
.IPs "\-of rawvideo"
原始视频流（不合并——只含一个视频流）
.IPs "\-of rawaudio"
原始音频流（不合并——只含一个音频流）
.RE
.PD 1
.
.TP
.B \-ofps <fps>
为输出文件指定一个每秒帧数（fps）值，该值可以与原来视频中的不
同。
必须为可变fps（ASF、一些MOV）以及逐行扫描（30000/1001 fps电视
图像模式的MPEG）文件设置该值。
.
.TP
.B \-ovc <codec name>
使用给出的视频编解码器编码（没有默认值）。
.br
.I 注意：
使用\-ovc help来获取可用视频编解码器的列表。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-ovc copy"
不编码，直接复制视频流
.IPs "\-ovc raw"
编码为任意的未压缩格式（使用‘\-vf format’选择具体格式）。
.IPs "\-ovc lavc"
使用libavcodec编解码器编码。
.RE
.PD 1
.
.TP
.B \-passlogfile <filename>
在二阶段编码模式中将第一阶段的信息导出至<filename>，而不是默认的divx2pass.log。
.
.TP
.B \-skiplimit <value>
指定编码了一帧之后最多可以跳过的帧的数量（\-noskiplimit表示无限
制）。
.
.TP
.B \-vobsubout <basename>
指定输出的.idx和.sub文件的主文件名。
该选项使字幕不在编码后影片得到渲染，而是将其转而输出至VOBsub的字幕文件。
.
.TP
.B \-vobsuboutid <langid>
为字幕指定双字母的语言代码。
该选项改写了从DVD或.ifo文件中读取的语言代码。
.
.TP
.B \-vobsuboutindex <index>
指定输出文件中字幕的索引号（默认值：0）。
.
.
.
.SH "特定编解码器专用的编码选项（仅用于MENCODER）"
你可以使用以下的句法指定特定编解码器专用的参数：
.
.TP
.B \-<codec>opts <option1[=value1]:option2[=value2]:...>
.
.PP
这里<codec>可以是：lavc、xvidenc、mp3lame、toolame、twolame、nuv、xvfw、faac、
x264enc、mpeg、lavf。
.
.
.SS mp3lame (\-lameopts)
.
.TP
.B "help\ \ \ "
获取帮助信息
.
.TP
.B vbr=<0\-4>
可变比特率方式
.PD 0
.RSs
.IPs 0
cbr
.IPs 1
mt
.IPs 2
rh（默认值）
.IPs 3
abr
.IPs 4
mtrh
.RE
.PD 1
.
.TP
.B "abr\ \ \ \ "
平均比特率
.
.TP
.B "cbr\ \ \ \ "
恒定比特率
同时强制在后面指定的ABR预设模式中使用CBR模式。
.
.TP
.B br=<0\-1024>
以kbps计量的比特率（仅用于CBR和ABR）
.
.TP
.B q=<0\-9>
质量（0 \- 最好，9 \- 最差）（仅用于VBR）
.
.TP
.B aq=<0\-9>
算法质量（0 \- 最好/最慢，9 \- 最差/最快）
.
.TP
.B ratio=<1\-100>
压缩比
.
.TP
.B vol=<0\-10>
音频输入的增益
.
.TP
.B mode=<0\-3>
（默认方式：自动判断）
.PD 0
.RSs
.IPs 0
立体声
.IPs 1
共享式立体声
.IPs 2
双声道
.IPs 3
单声道
.RE
.PD 1
.
.TP
.B padding=<0\-2>
.PD 0
.RSs
.IPs 0
无填充
.IPs 1
所情况下均填充
.IPs 2
调整
.RE
.PD 1
.
.TP
.B "fast\ \ \ "
打开后面所指定的VBR预设模式中的较快编码方式。
这将造成质量稍差而比特率稍高。
.
.TP
.B highpassfreq=<freq>
设置高通过滤的频率值，单位为Hz。
低于所指定值的频率将被滤除。
值\-1将禁用过滤，值0将让LAME自动选择一个值。
.
.TP
.B lowpassfreq=<freq>
设置低通过滤的频率值，单位为Hz。
高于所指定值的频率将被滤除。
值\-1将禁用过滤，值0将让LAME自动选择一个值。
.
.TP
.B preset=<value>
预设值
.RSs
.IPs "help\ "
打印预设设置的其它选项与信息。
.IPs medium
VBR编码，质量不错，比特率范围为150\-180 kbps
.IPs standard
VBR编码，高质量，比特率范围为170\-210 kbps
.IPs extreme
VBR编码，超高质量，比特率范围为200\-240 kbps
.IPs insane
CBR编码，最高的预设质量，比较率为320bps
.IPs <8\-320>
ABR编码，平均比特率为所给的kbps值
.RE
.sp 1
.RS
.I 示例：
.RE
.PD 0
.RSs
.IPs fast:preset=standard
适用大多数人以大多数音乐类型，质量已经相当高了
.IPs cbr:preset=192
使用192kbps的ABR预设模式，强制使用固定比特率编码。
.IPs preset=172
使用ABR预设模式、172kbps的平均比特率编码。
.IPs preset=extreme
用于那些有极好听力和极好设备的人
.RE
.PD 1
.
.
.SS toolame和twolame（分别对应\-toolameopts和\-twolameopts）
.
.TP
.B br=<32\-384>
在CBR模式下该参数指明比特率值，单位为kbps，而在VBR模式下则是每个音频帧所允许的最
小比特率。VBR模式不能在该值低于112时工作。
.
.TP
.B vbr=<\-50\-50>（仅用于VBR）
比特率可变范围；如果为负值，则编码器使平均比特率向所限制最低值靠拢，如果为正值，
则向最高值靠拢。
设为0时使用CBR模式（默认值）。
.
.TP
.B maxvbr=<32\-384>（仅用于VBR）
每个音频帧所允许的最大比特率，单位为kbps
.
.TP
.B mode=<stereo  |  jstereo  |  mono  |  dual>
（默认值：单声道音频使用mono，否则为stereo）
.
.TP
.B psy=<\-1\-4>
心理声学模型（默认值：2）
.
.TP
.B errprot=<0 | 1>
使用错误保护功能。
.
.TP
.B debug=<0\-10>
调试等级
.RE
.PD 1
.
.
.SS faac（\-faacopts）
.
.TP
.B br=<bitrate>
平均比特率，单位为kbps（与quality选项不能同时使用）
.
.TP
.B quality=<1\-1000>
质量模式，值越高效果越好（与br选项不能同时使用）
.
.TP
.B object=<1\-4>
目标类型的复杂度
.PD 0
.RSs
.IPs 1
MAIN（默认值）
.IPs 2
LOW
.IPs 3
SSR
.IPs 4
LTP（运行极慢）
.RE
.PD 1
.
.TP
.B mpeg=<2|4>
MPEG版本（默认值：4）
.
.TP
.B "tns\ \ \ \ "
启用瞬时噪声整形（TNS）功能。
.
.TP
.B cutoff=<0\-采样频率/2>
截断频率（默认值：采样频率/2）
.
.TP
.B "raw\ \ \ \ "
将比特流保存为原始负载，而额外的数据保存在容器文件的头部中（默认值：0，与ADTS相
一致）。如果没有明确的需要就不要设置这个标志位，否则你以后将不能重新将音频流合并
进容器文件了。
.RE
.PD 1
.
.
.SS lavc（\-lavcopts）
.
有许多libavcodec（简称lavc）选项只是简要说明。
要了解详情请阅读源代码。
.PP
.I 示例：
.PD 0
.RSs
.IPs vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
.RE
.PD 1
.
.TP
.B o=<key>=<value>[,<key>=<value>[,...]]
将 AVOption 选项传递至 libavcodec 编码器。
注意，欢迎提供一个使 o= 选项不再需要，而将所有未知选项传递至 AVOption 系统的补丁。
AVOption 的完整列表可以 FFmpeg 用户手册中找到。
注意有些 AVOption 选项可能与 MEncoder 选项冲突。
.sp 1
.RS
.I 示例：
.RE
.RSs
.PD 0
.IPs o=bt=100k
.PD 1
.RE
.
.TP
.B acodec=<value>
音频编解码器（默认值：mp2）
.PD 0
.RSs
.IPs "ac3\ \ "
Dolby Digital（AC-3）
.IPs adpcm_*
自适应PCM格式——参见HTML文档以获取详细信息。
.IPs "flac\ "
Free Lossless Audio Codec（FLAC，免费无损音频编解码器）
.IPs "g726\ "
G.726 ADPCM
.IPs libfaac
Advanced Audio Coding（AAC，高级音频编码）——使用FAAC
.IPs libmp3lame
MPEG-1音频层次3（MP3）——使用LAME
.IPs "mp2\ \ "
MPEG-1音频层次2（MP2）
.IPs pcm_*
PCM格式——参见HTML文档以获取详细信息。
.IPs roq_dpcm
Id Software的RoQ DPCM
.IPs sonic
实验性的简易有损编解码器
.IPs sonicls
实验性的简易无损编解码器
.IPs vorbis
Vorbis
.IPs wmav1
Windows Media Audio v1
.IPs wmav2
Windows Media Audio v2
.RE
.PD 1
.
.TP
.B abitrate=<value>
音频比特率，单位为kbps（默认值：224）
.
.TP
.B atag=<value>
使用所指定的Windows音频格式标签（例如atag=0x55）。
.
.TP
.B bit_exact
只使用精确到比特的算法（除了(I)DCT）。
此外，精确到比特的方式禁用了许多的优化模式，因而应当只用于回归测试。这种测试要求
即使编码器的版本变了，文件的二进制内容也要相同。
该选项同时禁用MPEG-4流中的用户数据头。
除非你确切知道你要做什么，否则不要使用这个选项。
.
.TP
.B threads=<1\-8>
最大能使用的线程数（默认值：1）。
可能对运动预测有一定负面影响。
.RE
.
.TP
.B vcodec=<value>
使用所指定的编解码器（默认值：mpeg4）。
.PD 0
.RSs
.IPs "asv1\ "
ASUS Video v1
.IPs "asv2\ "
ASUS Video v2
.IPs dvvideo
Sony Digital Video
.IPs "ffv1\ "
FFmpeg的无损视频编解码器
.IPs ffvhuff
非标准的使用YV12格式的20%提升的HuffYUV
.IPs "flv\ \ "
用在Flash视频中的Sorenson H.263
.IPs "h261\ "
H.261
.IPs "h263\ "
H.263
.IPs h263p
H.263+
.IPs huffyuv
HuffYUV
.IPs libtheora
Theora
.IPs libx264
x264 H.264/AVC MPEG-4 Part 10
.IPs libxvid
Xvid MPEG-4 Part 2（ASP）
.IPs ljpeg
Lossless JPEG
.IPs mjpeg
Motion JPEG
.IPs mpeg1video
MPEG-1 video
.IPs mpeg2video
MPEG-2 video
.IPs mpeg4
MPEG-4（DivX 4/5）
.IPs msmpeg4
DivX 3
.IPs msmpeg4v2
微软MPEG4v2
.IPs roqvideo
ID Software的RoQ Video
.IPs "rv10\ "
一个老旧的RealVideo编解码器
.IPs "snow（另参见：vstrict）"
FFmpeg实验性的基于小波变换的编解码器
.IPs "svq1\ "
Apple Sorenson Video 1
.IPs "wmv1\ "
Windows Media Video, version 1（也就是WMV7）
.IPs "wmv2\ "
Windows Media Video, version 2（也就是WMV8）
.RE
.PD 1
.
.TP
.B vqmin=<1\-31>
最低量化参数
.RSs
.IPs 1
不推荐（文件大很多，质量差别不大，而且有奇怪的副作用：msmpeg4、h263的质量会很差，
码率控制会混乱从而质量下升，而且一些解码器将不能解码）。
.IPs 2
推荐用于普通mpeg4/\:mpeg1video编码（默认值）。
.IPs 3
推荐用于h263(p)/\:msmpeg4。
建议采用3而不是2的原因是2可能造成溢出。（这在h263(p)中会在将来通过改变每个宏块的
量化参数而解决，而msmpeg4中无法修复，因为它不支持那种方式。）
.RE
.
.TP
.B lmin=<0.01\-255.0>
用于码率控制的最小帧级别的拉格朗日乘子（默认值：2.0）。
Lavc很少会使用低于vqmin值的量化参数。
降低lmin会使lavc更容易在处理某些帧选用更低的量化参数，但不会低于vqmin值。
类似的，提高lmin将使lavc更不可能选用低的量化参数，即使vqmin参数允许使用这些量化
参数。
你很可能想将lmin设为大致与vqmin相等。
当使用自适应量化模式时，改变lmin/lmax可能影响不大；参见mblmin/mblmax。
.RE
.
.TP
.B lmax=<0.01\-255.0>
用于码率控制的最大拉格朗日乘子（默认值：31.0）
.RE
.
.TP
.B mblmin=<0.01\-255.0>
用于码率控制的最小宏块级别的拉格朗日乘子（默认值：2.0）
该参数影响诸如qprd、lumi_mask等自适应量化选项。
.RE
.
.TP
.B mblmax=<0.01\-255.0>
用于码率控制的最大宏块级别的拉格朗日乘子（默认值：31.0）
.RE
.
.TP
.B vqscale=<0\-31>
恒定量化参数/\:恒定质量编码（选用固定量化参数模式）。
值越小意味着质量越好，但文件越大（默认值：\-1）。
在使用snow编解码器的情况下，值0表示无损编码。
由于其它编解码器不支持这个值，vqscale=0会有未经定义的效果。
不推荐用1（参见vqmin获取详情）。
.
.TP
.B vqmax=<1\-31>
最大量化参数，10\-31应该是一个合理的范围（默认值：31）。
.
.TP
.B mbqmin=<1\-31>
过时参数，应使用vqmin
.
.TP
.B mbqmax=<1\-31>
过时参数，应使用vqmax
.
.TP
.B vqdiff=<1\-31>
连续的I或P帧之间最大的量化参数差别（默认值：3）
.
.TP
.B vmax_b_frames=<0\-4>
非B帧之间存在的最大B帧数目：
.PD 0
.RSs
.IPs 0
无B帧（默认值）
.IPs 0\-2
对于MPEG-4来说是合理的范围
.RE
.PD 1
.
.TP
.B vme=<0\-5>
运动预测方式。
可用方式有：
.PD 0
.RSs
.IPs 0
none（质量很低）
.IPs 1
full（运行慢，当前代码未维护且已禁用）
.IPs 2
log（质量低，当前代码未维护且已禁用）
.IPs 3
phods（质量低，当前代码未维护且已禁用）
.IPs 4
EPZS：size=1的菱形模板，size可以通过*dia选项调整（默认值）
.IPs 5
X1（实验性选项，当前是EPZS的一个别名）
.IPs 8
iter（递归重叠的区块，仅用于snow）
.RE
.PD 1
.sp 1
.RS
.br
.I 注意：
目前0\-3无视所花费比特的多少，所以质量可能比较低。
.RE
.
.TP
.B me_range=<0\-9999>
运动预测的搜索范围（默认值：0（不限制））
.
.TP
.B mbd=<0\-2>（另参见*cmp、qpel）
宏块决策算法（高质量模式），将每个宏块在所有的模式下编码然后选择最佳的模式。
该模式运行很慢，但能使质量提高，文件大小降低。
当 mbd 设为1或2时，比较宏块过程中将不考虑 mbcmp 的值（但是其它地方还是使用
了 mbcmp 值，特别是运动搜索算法中）。
然而当某个比较设置（precmp、subcmp、cmp 或 mbcmp）为非零值时，将会使用一种更慢但更
好的半像素运动搜索模式，而不管 mbd 设为何值。
如果设置了 qpel 参数，则将肯定使用四分之一像素运动搜索模式。
.PD 0
.RSs
.IPs 0
使用mbcmp提供的比较函数（默认方式）。
.IPs 1
选用需要比特最少的宏块模式（=vhq）。
.IPs 2
选用码率失真最优的宏块模式。
.RE
.PD 1
.
.TP
.B "vhq\ \ \ \ "
与mbd=1相同，出于兼容性考虑而保留了下来。
.
.TP
.B "v4mv\ \ \ "
允许每个宏块有4个运动矢量（质量较好些）。
如果在mbd>0时使用效果更好。
.
.TP
.B "obmc\ \ \ "
重叠块的运动补偿（H.263+）
.
.TP
.B "loop\ \ \ "
遁环过滤（H.263+）
注意，该选项有问题
.
.TP
.B inter_threshold <\-1000\-1000>
当前没有任何作用。
.
.TP
.B keyint=<0\-300>
关键帧的最大间隔，单位为帧数（默认值：250或者说25fps的影片中每10秒一个关键帧。这
个数值是MPEG-4中推荐使用的默认值）。
大多数编解码器需要定期使用关键帧以限制不匹配错误聚积过多。
关键帧也在播放定位时需要，因为只能定位于关键帧——但关键帧比其它帧需要更多空间，
所以这里的数值设得越大意味着文件越小，但定位越不精确。
0与1相同，这将使每个帧都成为关键帧。
不推荐大于300的值，因为质量可能很差，这取决于解码器、编码器和运气。
通常MPEG-1/2使用小于等于30的值。
.
.TP
.B sc_threshold=<\-1000000000\-1000000000>
用于场景切换侦测的阈值。
当libavcodec侦测到场景切换时，它将插入一个关键帧。你可以通过这个选项指定侦测模式
的敏感度。
\-1000000000表示每个帧下都会侦测出一个场景切换，1000000000表示侦测不出任何场景切
换（默认值：0）。
.
.TP
.B sc_factor=<any positive integer>
导致使用较高量化参数的帧更容易引发场景切换的侦测，从而使libavcodec使用一个I帧
（默认值：1）。
1\-16是一个合理的范围。
2至6之间的值能提高峰值信噪比（PSNR）（最高大约为0.04dB）并且让I帧在高动态场景中
放置于更合适的位置
高于6的值可能提高一点点PSNR（大约比sc_factor=6多0.01dB），而视觉质量下降却相当可
观。
.
.TP
.B vb_strategy=<0\-2>（只用于第一阶段编码）
选用I/P/B帧的策略：
.PD 0
.RSs
.IPs 0
总是使用最多的B帧（默认值）。
.IPs 1
在高动态场景中避免使用B帧。
参观b_sensitivity选项以调试这一策略。
.IPs 2
调整使用B帧的个数以使质量最好（运行缓慢）。
你可以要通过调整brd_scale选项以减少该选项对于运行速度的负面作用。
.RE
.PD 1
.
.TP
.B b_sensitivity=<任何大于0的整数>
调整vb_strategy=1时运动侦测的敏感程度从而避免使用B帧（默认值：40）。
敏感程度越低将导致越多的B帧。
使用更多的B帧通常能提升峰值信噪比，但太多的B帧可能导致在高动态场景中质量下降。
除非运动程度极其高，否则b_sensitivity设为低于默认的值是很安全的；10在大多数情况
下是一个理想的值。
.
.TP
.B brd_scale=<0\-10>
减小动态B帧决策中帧的尺寸（默认值：0）。
brd_scale每增加一，帧的宽高将减小一半，这样就使运行速度提升至四倍。
尺寸减小后帧的宽和高都必须是偶数，所以brd_scale=1要求原来的宽高尺寸是四的倍数，
brd_scale=2要求原来的宽高尺寸是八的倍数，依次类推。
换句话说，原来帧的宽高尺寸都必须能被2^(brd_scale+1)整除。
.
.TP
.B bidir_refine=<0\-4>
优化用于双向宏块的两个运动矢量，而不是重复使用向前和向后搜索所找到的矢量。
该选项只对B帧有效。
.PD 0
.RSs
.IPs 0
禁用（默认值）。
.IPs 1\-4
使用更广泛的搜索模式（值越大运行越慢）。
.RE
.PD 1
.
.TP
.B vpass=<1\-3>
启用内置的二阶段（或更多阶段）编码模式，只有当你想使用二阶段（或更多阶段）编码模
式时才指定这个值。
.PD 0
.RSs
.IPs 1
第一阶段编码（另参见turbo）
.IPs 2
第二阶段编码
.IPs 3
第N阶段编码（N阶段编码模式中第二阶段以及之后各阶段的编码）
.RE
.RS
以下展示了其如何工作，以及如何使用：
.br
第一阶段编码（vpass=1）输出统计文件。
你可能希望关闭一些大量消耗CPU的选项，就像“turbo”模式所做的那样。
.br
在二阶段编码模式中，第二阶段（vpass=2）读取统计文件的内容并依据该内容作出码率控
制的决策。
.br
在N阶段模式中，第二阶段（vpass=3——这不是本文档的印刷错误）同时做两件事：首先读
取统计信息，然后重写这些信息。如果存在不得不终断MEncoder的可能，那么你可能希望在
做这一步前备份divx2pass.log。
你可以使用所有的编码选项，除非是非常消耗CPU的选项如“qns”。
.br
你可以反复执行与此相同的编码阶段以优化编码。
每个紧接着的编码阶段将使用上一个阶段的统计信息并进一步优化。
最后一个编码阶段可以包含任意大量消耗CPU的编码选项。
.br
如果你想用二阶段编码模式，那么先使用vpass=1，然后再用vpass=2。
.br
如果你想用三阶段或更多阶段的编码模式，那么在第一阶段使用vpass=1，接着用vpass=3，
接着不断用vpass=3直至你对编码结果满意了。
.RE
.PD 1
.sp 1
.RS
huffyuv：
.RE
.PD 0
.RSs
.IPs "第一阶段"
保存统计信息。
.IPs "第二阶段"
使用基于第一阶段统计信息的最优哈夫曼表编码。
.RE
.PD 1
.
.TP
.B turbo（仅用于二阶段编码）
使用更快的算法并禁用大量占用CPU的选项以使第一阶段编码的运行大幅加快。
该选项可能稍稍降低全局峰值信噪比（大约为0.01dB）并且改变单个帧的类型以及稍稍改变
该帧的峰值信噪比（最多至0.03dB）。
.
.TP
.B aspect=<x/y>
在文件内部保存影片的宽高比，就像MPEG文件一样。
比使用缩放功能效果好多了，因为质量不下降。
只有MPlayer能正确播放这些文件，其它播放器会以错误的宽高比显示。
宽高比参数可以以比率或浮点数字的形式给出。
.sp 1
.RS
.I 示例：
.RE
.RSs
.PD 0
.IPs "aspect=16/9或aspect=1.78"
.PD 1
.RE
.
.TP
.B autoaspect
与aspect选项相同，但是通过综合考量滤镜链上的各种调整（crop/\:expand/\:scale/\:等
等）自动计算宽高比。
不会对性能产生负面影响，所以你可以放心地让该选项保持为打开的状态。
.
.TP
.B vbitrate=<value>
指定比特率（默认值：800）。
.br
.I 警告：
1kbit = 1000 bits
.PD 0
.RSs
.IPs 4\-16000
（单位为kbit）
.IPs 16001\-24000000
（单位为bit）
.RE
.PD 1
.
.TP
.B vratetol=<value>
文件大小控制中允许出入的数量，单位为kbit。
1000\-100000是一个合理的范围。
（警告：1kbit = 1000 bits）
（默认值：8000）
.br
.I 注意：
vratetol在第二阶段编码中不应设得太大，否则当设置了vrc_(min|max)rate时，可能会产
生问题。
.
.TP
.B vrc_maxrate=<value>
最大比特率，单位为kbit/\:sec
（默认值：0，无限制）
.
.TP
.B vrc_minrate=<value>
最小比特率，单位为kbit/\:sec
（默认值：0，无限制）
.
.TP
.B vrc_buf_size=<value>
缓冲大小，单位为kbit。
在MPEG-1/2中该选项同时设置了vbv缓冲的大小，对于VCD请使用327，对于SVCD使用917，而
DVD使用1835。
.
.TP
.B vrc_buf_aggressivity
当前没有什么作用
.
.TP
.B vrc_strategy
码率控制方式。
注意当vrc_strategy不设为0时，一些影响码率控制的选项将不起任何作用。
.PD 0
.RSs
.IPs 0
使用内置的lavc码率控制方式（默认值）。
.IPs 1
使用Xvid的码率控制方式（仅供测试用；要求MEncoder编译时加入对Xvid 1.1或更高版本的
支持）。
.RE
.PD 1
.
.TP
.B vb_qfactor=<\-31.0\-31.0>
B帧和非B帧间的量化参数因数（默认值1.25）
.
.TP
.B vi_qfactor=<\-31.0\-31.0>
I帧和非I帧间的量化参数因数（默认值0.8）
.
.TP
.B vb_qoffset=<\-31.0\-31.0>
B帧和非B帧间的量化参数偏移量（默认值1.25）
.
.TP
.B vi_qoffset=<\-31.0\-31.0>
（默认值0.0）
.br
如果v{b|i}_qfactor > 0
.br
I/B帧量化参数 = P帧量化参数 * v{b|i}_qfactor + v{b|i}_qoffset
.br
否则
.br
使用常规的码率控制方式（不限定于下一个P帧的量化参数）而设置
q= \-q * v{b|i}_qfactor + v{b|i}_qoffset
.br
.I 提示：
要执行恒定量化参数的编码而对I/P和B帧应用不同的量化参数，你可以使用：
lmin= <I/P帧量化参数>:lmax= <I/P帧量化参数>:vb_qfactor= <B帧量化参数/\:I/P帧量化参数>。
.
.TP
.B vqblur=<0.0\-1.0>（第一阶段编码）
量化参数模糊系数（默认值：0.5），值越大将使量化参数在时间上分布得越平均（变化得
越慢）。
.PD 0
.RSs
.IPs 0.0
禁用量化参数模糊功能。
.IPs 1.0
使量化参数在所有先前出现的帧中平均化。
.RE
.PD 1
.
.TP
.B vqblur=<0.0\-99.0>（第二阶段编码）
量化参数高斯模糊（默认值：0.5），值越大将使量化参数在时间上分布得越平均（变化得
越慢）。
.
.TP
.B vqcomp=<0.0\-1.0>
量化参数压缩，vrc_eq选项依赖于该选项（默认值：0.5）。
.I 注意：
在两个极端值之间的某个值能使感观质量达到最优。
.
.TP
.B vrc_eq=<equation>
主码率控制方程式
.RE
.RSs
.IPs 1+(tex/\:avgTex-1)*qComp
近似于以前码率控制代码所用的方程式
.IPs tex^qComp
式中qcomp为0.5或某个类似设置（默认值）
.RE
.PP
.RS
中置运算符：
.RE
.RSs
.IPs +,\-,*,/,^
.RE
.PP
.RS
变量：
.RE
.RSs
.IPs "tex\ \ "
纹理复杂度
.IPs iTex,pTex
内部、非内部纹理复杂度
.IPs avgTex
平均纹理复杂度
.IPs avgIITex
I帧中的平均内部纹理复杂度
.IPs avgPITex
P帧中的平均内部纹理复杂度
.IPs avgPPTex
P帧中的平均非内部纹理复杂度
.IPs avgBPTex
B帧中的平均非内部纹理复杂度
.IPs "mv\ \ \ "
用于运动矢量的比特数
.IPs fCode
以log2对数值计量的最大运动矢量长度
.IPs iCount
内部宏块数/宏块数
.IPs "var\ \ "
空间复杂度
.IPs mcVar
时间复杂度
.IPs qComp
命令行输入的qcomp值
.IPs "isI, isP, isB"
若图像类型为I/P/B则为1，否则为0。
.IPs "Pi,E\ "
参见你最喜欢的数学书。
.RE
.PP
.RS
函数：
.RE
.RSs
.IPs max(a,b),min(a,b)
最大值/最小值
.IPs gt(a,b)
若a>b则为1，否则为0
.IPs lt(a,b)
若a<b则为1，否则为0
.IPs eq(a,b)
若a==b则为1，否则为0
.IPs "sin, cos, tan, sinh, cosh, tanh, exp, log, abs"
.RE
.
.TP
.B vrc_override=<options>
用户指定的针于影片特定部分（尾声、演职员表……）的质量值。
选项有<start-frame>、<end-frame>、<quality>[/<start-frame>,
<end-frame>, <quality>[/...]]：
.PD 0
.RSs
.IPs "quality (2\-31)"
量化参数
.IPs "quality (\-500\-0)"
质量修正的百分比程度
.RE
.PD 1
.
.TP
.B vrc_init_cplx=<0\-1000>
初始复杂度（第一阶段编码）
.
.TP
.B vrc_init_occupancy=<0.0\-1.0>
初始缓冲占用量，为vrc_buf_size值的一个分数（默认值：0.9）
.
.TP
.B vqsquish=<0|1>
指定如何使量化参数保持在qmin和qmax之间。
.PD 0
.RSs
.IPs 0
使用截断方式。
.IPs 1
使用一种不错的微分函数（默认值）。
.RE
.PD 1
.
.TP
.B vlelim=<\-1000\-1000>
设置亮度的单一系数消减阈值。
设为负数值则将同时考量直流系数（在以quant=1编码时应当至少设为\-4或更低）：
.PD 0
.RSs
.IPs 0
禁用（默认值）
.IPs \-4
JVT推荐值
.RE
.PD 1
.
.TP
.B vcelim=<\-1000\-1000>
设置色度的单一系数消减阈值。
设为负数值则将同时考量直流系数（在以quant=1编码时应当至少设为\-4或更低）：
.PD 0
.RSs
.IPs 0
禁用（默认值）
.IPs 7
JVT推荐值
.RE
.PD 1
.
.TP
.B vstrict=<\-2|\-1|0|1>
严格符合编码标准
.PD 0
.RSs
.IPs 0
禁用
.IPs 1
只有当你想让MPEG-4标准解码器读取编码输出结果时才推荐使用
.IPs \-1
允许使用libavcodec专用的扩展功能（默认值）。
.IPs \-2
启用实验性的编解码器和功能，这些可能在将来版本的MPlayer中无法播放（用于snow）。
.RE
.PD 1
.
.TP
.B "vdpart\ "
数据分隔。
每个视频数据包增加2字节内容，从而改善在不可靠信道上传输时（例如，在因特网上传输
流媒体）的容错能力。
每个视频数据包将编码为3个独立的部分：
.PD 0
.RSs
.IPs "1. MVs"
运动信息
.IPs "2. DC coefficients（直流系数）"
低分辨率画面
.IPs "3. AC coefficients（交流系数）"
细节
.RE
.PD 1
.RS
MV和DC最为重要，丢失这两个部分似乎远比丢失AC部分和1. & 2.部分严重得多。
(MV & DC)远比3.部分（AC）小得多，这意味着传输错误更多出现在AC部分而不是MV & DC部
分。
所以，画面在数据分割后将比未分割时看上去更好，因为未分割时传输错误将同等地损坏
AC/\:DC/\:MV三个部分。
.RE
.
.TP
.B vpsize=<0\-10000>（另参见vbpart）
视频数据包的大小，用于改善容错能力。
.PD 0
.RSs
.IPs "0\ \ \ \ "
禁用（默认值）
.IPs 100\-1000
较好的选择
.RE
.PD 1
.
.TP
.B "ss\ \ \ \ \ "
用于H.263+的分片结构模式
.
.TP
.B "gray\ \ \ "
仅灰度的编码（较快）
.
.TP
.B vfdct=<0\-10>
DCT算法
.PD 0
.RSs
.IPs 0
自动选用一个良好的算法（默认值）。
.IPs 1
快速整数式
.IPs 2
精确整数式
.IPs 3
MMX
.IPs 4
mlib
.IPs 5
AltiVec
.IPs 6
浮点AAN
.RE
.PD 1
.
.TP
.B idct=<0\-99>
IDCT算法
.br
.I 注意：
据我们所知，所有这些IDCT算法均通过IEEE1180测试。
.PD 0
.RSs
.IPs 0
自动选用一个良好的算法（默认值）。
.IPs 1
JPEG标准整数式
.IPs 2
简单式
.IPs 3
简单MMX
.IPs 4
libmpeg2mmx（不精确，不要用于keyint >100模式下的编码）
.IPs 5
ps2
.IPs 6
mlib
.IPs 7
arm
.IPs 8
AltiVec
.IPs 9
sh4
.IPs 10
simplearm
.IPs 11
H.264
.IPs 12
VP3
.IPs 13
IPP
.IPs 14
xvidmmx
.IPs 15
CAVS
.IPs 16
simplearmv5te
.IPs 17
simplearmv6
.RE
.PD 1
.
.TP
.B lumi_mask=<0.0\-1.0>
亮度屏蔽是一种‘心理感官性’的设置，一般认为其所利用的事实是人眼倾向于在画面中很
亮的部分里只注意到较少的细节。
亮度屏蔽模式比中性的模式更大幅度地压缩明亮的区域，所以它能省下不少比特将其用于其
它的帧中，从而提高整体的主观感官质量，但同时可能降低了峰值信噪比。
.br
.I 警告：
小心，值过大可能导致灾难性的后果。
.br
.I 警告：
值设得大可能在某些显示器上看起来效果好，但可能在其它显示器上就显得难看。
.PD 0
.RSs
.IPs "0.0\ \ "
禁用（默认值）
.IPs 0.0\-0.3
合理的范围
.RE
.PD 1
.
.TP
.B dark_mask=<0.0\-1.0>
暗度屏蔽是一种‘心理感官性’的设置，一般认为其所利用的事实是人眼倾向于在画面中很
暗的部分里只注意到较少的细节。
暗度屏蔽模式比中性的模式更大幅度地压缩明亮的区域，所以它能省下不少比特将其用于其
它的帧中，从而提高整体的主观感官质量，但同时可能降低了峰值信噪比。
.br
.I 警告：
小心，值过大可能导致灾难性的后果。
.br
.I 警告：
值设得大可能在某些显示器上看起来效果好，但可能在其它显示器/电视/液晶屏上就显得难
看。
.PD 0
.RSs
.IPs "0.0\ \ "
禁用（默认值）
.IPs 0.0\-0.3
合理的范围
.RE
.PD 1
.
.TP
.B tcplx_mask=<0.0\-1.0>
时间复杂度屏蔽（默认值：0.0（禁用））。
设想一下一个场景中一只鸟飞过整个场景；tcplx_mask将提高描绘鸟的宏块的量化参数（从
而降低这些宏块的质量），而人眼通常没有时间去看清鸟的所有细节。
注意如果被屏蔽的对象停止运动（例如鸟儿落地了），那么很有可能在短时间内这个对象会
显得很难看，直至编码器注意到这个对象不动了而需要更好的块来描绘。
节省下来的比特将用于视频中的其它部分，只要tcplx_mask经过精心选取，这将提高主观感
官质量。
.
.TP
.B scplx_mask=<0.0\-1.0>
空间复杂度屏蔽
如果没有解块效应滤镜用于解码过程，那么较大的值有助于消除块效应，但这可能不是一个
好办法。
.br
设想一下一个含有草丛（这通常有很大的空间复杂度）、蓝天和一间房子的场景；
scplx_mask将提高描绘草丛的宏块的量化参数，从而降低其质量，由此将更多的比特花在天
空和房子上。
.br
.I 提示：
要充分切除所有的影片黑边，因为它们使宏块的质量下降（这同样适用于不用scplx_mask的
情形）。
.PD 0
.RSs
.IPs "0.0\ \ "
禁用（默认值）
.IPs 0.0\-0.5
合理的范围
.RE
.PD 1
.sp 1
.RS
.I 注意：
这个设置与使用能更大幅度压缩高频信号的自定义量化矩阵不具有相同效果，因为
即使直流信号改变时scplx_mask也不会降低P块的质量。
scplx_mask的效果可能也不如那种方式好。
.RE
.
.TP
.B p_mask=<0.0\-1.0>（另参见vi_qfactor）
降低帧间块的质量。
这等价于提高内部块的质量，因为码率控制器仍在整个视频序列上以相同的平均码率分配了
数据资源（默认值：0.0（禁用））。
p_mask=1.0使分配到每个内部块的比特数加倍。
.
.TP
.B border_mask=<0.0\-1.0>
用于MPEG风格编码器的画面边缘处理模式。
画面边缘处理模式提高距离画面帧边缘不到1/5个帧宽度/高度的宏块的量化参数，因为这些
宏块通常对于显示效果较为不重要。
.
.TP
.B "naq\ \ \ \ "
使自适应量化模式正态化（实验性选项）。
当使用自适应量化模式（*_mask）时，平均每个宏块的量化参数大小可能不再与所需要的帧
级别的量化参数相一致。
Naq将尝试调整每个宏块的量化参数以保证平均值为适当的值。
.
.TP
.B "ildct\ \ "
使用隔行扫描的DCT。
.
.TP
.B "ilme\ \ \ "
使用隔行扫描的运动估计模式（与qpel不能同时使用）。
.
.TP
.B "alt\ \ \ \ "
使用另一种扫描表。
.
.TP
.B "top=<\-1\-1>\ \ \ "
.PD 0
.RSs
.IPs \-1
自动判断
.IPs 0
下半扫描场先进入
.IPs 1
上半扫描场先进入
.RE
.PD 1
.
.TP
.B format=<value>
.PD 0
.RSs
.IPs "YV12\ "
默认值
.IPs "444P\ "
用于ffv1
.IPs "422P\ "
用于HuffYUV、无损JPEG、dv和ffv1
.IPs "411P\ "
用于无损JPEG、dv和ffv1
.IPs "YVU9\ "
用于无损JPEG、ffv1和svq1
.IPs "BGR32"
用于无损JPEG和ffv1
.RE
.PD 1
.
.TP
.B "pred\ \ \ "
（用于HuffYUV）
.PD 0
.RSs
.IPs 0
左预测
.IPs 1
平面/\:梯度预测
.IPs 2
中位数预测
.RE
.PD 1
.
.TP
.B "pred\ \ \ "
（用于无损JPEG）
.PD 0
.RSs
.IPs 0
左预测
.IPs 1
上预测
.IPs 2
左上预测
.IPs 3
平面/\:梯度预测
.IPs 6
平均数预测
.RE
.PD 1
.
.TP
.B "coder\ \ "
（用于ffv1）
.PD 0
.RSs
.IPs 0
vlc编码（Golomb-Rice）
.IPs 1
算术编码（CABAC）
.RE
.PD 1
.
.TP
.B context
（用于ffv1）
.PD 0
.RSs
.IPs 0
小型上下文环境模式
.IPs 1
大型上下文环境模式
.RE
.PD 1
.sp 1
.RS
（用于ffvhuff）
.RE
.PD 0
.RSs
.IPs 0
预先确定的哈夫曼表（内置的或是二阶编码中产生的）
.IPs 1
自适应哈夫曼表
.RE
.PD 1
.
.TP
.B "qpel\ \ \ "
使用四分之一像素的运动补偿模式（与ilme不能同时使用）。
.br
.I 提示：
该选项似乎只对高比特率的编码有用。
.
.TP
.B mbcmp=<0\-2000>
设置用于宏块决策的比较函数，只有当 mbd=0 时才有作用。
该选项也用于一些运动搜索函数中，此时不管 mbd 设置如何它都有作用。
.PD 0
.RSs
.IPs "0 (SAD)"
绝对值差的合，运行快（默认值）
.IPs "1 (SSE)"
误差的平方合
.IPs "2 (SATD)"
Hadamard变换后绝对值差的合
.IPs "3 (DCT)"
DCT变换后绝对值差的合
.IPs "4 (PSNR)"
量化误差的平方合（避免使用，质量差）
.IPs "5 (BIT)"
块中所需的比特的数量
.IPs "6 (RD)"
码率失真最优，运行慢
.IPs "7 (ZERO)"
0
.IPs "8 (VSAD)"
垂直方向绝对值差的合
.IPs "9 (VSSE)"
垂直方向绝对值差的平方合
.IPs "10 (NSSE)"
保留噪声的差值的平方合
.IPs "11 (W53)"
5/3小波，只用于snow中
.IPs "12 (W97)"
9/7小波，只用于snow中
.IPs "+256\ "
同时使用色度信息，当前无法在B帧中（正确）运行。
.RE
.PD 1
.
.TP
.B ildctcmp=<0\-2000>
设置隔行扫描DCT决策中使用的比较函数（参见mbcmp以获取可用比较函数信息）。
.
.TP
.B precmp=<0\-2000>
设置运动估计预处理阶段所使用的比较函数（参见mbcmp以获取可用比较函数信息）（默认
值：0）。
.
.TP
.B cmp=<0\-2000>
设置整像素运动估计中所使用的比较函数（参见mbcmp以获取可用比较函数信息）（默认
值：0）。
.
.TP
.B subcmp=<0\-2000>
设置亚像素运动估计中所使用的比较函数（参见mbcmp以获取可用比较函数信息）（默认
值：0）。
.
.TP
.B skipcmp=<0\-2000>
FIXME：为这个选项写说明文档。
.
.TP
.B nssew=<0\-1000000>
该设置控制NSSE的权重，其中较大的权重将导致较多的噪声。
0 NSSE与SSE是一样的
如果你希望在你编码后的视频中保留一些噪声，而不是在编码时将他们滤除，那么你会发现
这个设置很有用（默认值：8）。
.
.TP
.B predia=<\-99\-6>
运动估计预处理阶段中使用菱形的类型和大小
.
.TP
.B dia=<\-99\-6>
运动估计中使用的菱形的类型和大小。
运动搜索是一个迭代式的过程。
使用一个较小的菱形并不会限制搜索中只找较小的运动矢量。
而是说在找到最合适的运动矢量前搜索更倾向于停止，尤其是在噪声介入的情形下。
较大的菱形将允许对于最佳运动矢量的搜索更加广泛，从而搜索更加慢但得到的结果质量更
加好。
.br
大型的常规菱形比自适应形状的菱形质量更好。
.br
自适应形状的菱形在速度和质量之间有较好的折中。
.br
.I 注意：
常规菱形和自适应形状菱形在大小概念上的含义是不同的。
.RSs
.IPs \-3
大小为3的自适形形状（快速）菱形
.IPs \-2
大小为2的自适形形状（快速）菱形
.IPs \-1
非均匀的多重六边形搜索（运行慢）
.IPs  1
size=1的常规菱形（默认值）=EPZS类型的菱形
.nf
.ne
      0
     000
      0
.fi
.IPs 2
size=2的常规菱形
.nf
.ne
      0
     000
    00000
     000
      0
.fi
.RE
.
.TP
.B "trell\ \ "
使用格子因子搜索的量化模式。
该选项将为每个8x8块找到最优的编码方式。
使用格子因子搜索的量化方式就是一种在峰值信噪比对比码率意义下最优的量化模式（假设
IDCT不造成任何数值舍入错误，这种情形显然不在讨论之列。）。
这种量化模式就是找一个具有最小错误数和lambda*bits值的块。
.PD 0
.RSs
.IPs lambda
与量化参数（QP）相关的常数
.IPs "bits\ "
编码这个块所需的比特数量。
.IPs error
量化错误数的平方和
.RE
.PD 1
.
.TP
.B "cbp\ \ \ \ "
码率失真最优的编码后块的特征。
将选取使削减值与lambda*rate值的合最小化的编码后块的特征。
该选项只能与格子因子量化模式一起使用。
.
.TP
.B "mv0\ \ \ \ "
尝行在运动矢量=<0,0>的条件下编码每个宏块并选取最好的一个。
当mbd=0时该选项没有作用。
.
.TP
.B mv0_threshold=<任意非负整数>
当周围的运动矢量为<0,0>，而当前块的运动估计评分小于mv0_threshold时，将使用<0,0>
作为运动矢量，而跳过进一步的运动估计步骤（默认值：256）。
将mv0_threshold降低至0可以使峰值信噪比有稍许（0.01dB）增加，并且可能使编码后的视
频看上去稍微好一些；将mv0_threshold设为高于320时将导致峰值信噪比和视觉质量大大降
减。
较高的值使编码加快一点点（通常低于1%，这取决于所使用的其它选项）。
.br
.I 注意：
该选项不要求启用mv0选项。
.
.TP
.B qprd（仅用于mbd=2）
对于每个宏块中给定lambda值的码率失真最优的量化参数（QP）
.
.TP
.B last_pred=<0\-99>
来自前一帧的运动预测器的数量
.PD 0
.RSs
.IPs 0
（默认值）
.IPs a
将使用2a+1 x 2a+1宏块数平方个来自前一帧的运动矢量预测器。
.RE
.PD 1
.
.TP
.B preme=<0\-2>
运动估计的预处理阶段
.PD 0
.RSs
.IPs 0
禁用
.IPs 1
只在I帧后使用（默认值）
.IPs 2
总是使用
.RE
.PD 1
.
.TP
.B subq=<1\-8>
亚像素优化质量（用于qpel）（默认值：8（高质量））
.br
.I 注意：
该选项对速度有极大影响。
.
.TP
.B refs=<1\-8>
运动补偿中所考虑的参照帧的数量（仅用于Snow）（默认值：1）
.
.TP
.B "psnr\ \ \ "
编码后打印整个视频的PSNR（峰值信噪比），并将每个帧的PSNR存放在一个名字诸如
‘psnr_hhmmss.log’的文件中。
返回的值单位为dB（分贝），值越高越好。
.
.TP
.B mpeg_quant
使用MPEG的量化器而不是H.263的。
.
.TP
.B "aic\ \ \ \ "
启用MPEG-4的AC预测模式，或是H.263+的高级帧内预测模式。
该选项将很有限地提升质量（大约0.02dB的PSNR），同时很有限地减慢编码速度（大约为
1%）。
.br
.I 注意：
vqmin应当设为8或更大以使用H.263+ AIC。
.
.TP
.B "aiv\ \ \ \ "
用于H.263+的另一种帧间vlc模式
.
.TP
.B "umv\ \ \ \ "
无限制的运动矢量（MV）（仅用于H.263+）
允许编码任意长的MV。
.
.TP
.B ibias=<\-256\-256>
帧内量化器偏向系数（256等价于1.0，MPEG类型的量化器的默认值：96，H.263类型的量化
器的默认值：0）
.br
.I 注意：
H.263 MMX量化器无法处理正值的偏向系数（应设置vfdct=1或2），
MPEG MMX量化器无法处理负值的偏向系数（应设置vfdct=1或2）。
.
.TP
.B pbias=<\-256\-256>
帧间量化器偏向系数（256等价于1.0，MPEG类型的量化器的默认值：0，H.263类型的量化器
的默认值：\-64）
.br
.I 注意：
H.263 MMX量化器无法处理正值的偏向系数（应设置vfdct=1或2），
MPEG MMX量化器无法处理负值的偏向系数（应设置vfdct=1或2）。
.br
.I 提示：
偏向系数的值越大（\-32 \- \-16而不是\-64）看上去越能提升PSNR。
.
.TP
.B nr=<0\-100000>
噪声削减模式，0表示禁用。
0\-600对于典型的视频内容来说是一个有用的范围，但是你可能希望将其调高一点以用于噪
点十分多的视频内容（默认值：0）。
考虑到该选项对于编码速度影响小，你可能想更倾向于使用这个选项，而不是用诸如
denoise3d或hqdn3d之类的视频滤镜来过滤噪声。
.
.TP
.B qns=<0\-3>
量化器噪声整形模式。
该选项不是选择在PSNR上最接近源视频的量化模式，而是选择能使噪声（通常是色斑）会被
图像中相近频率内容所屏蔽的量化模式。
较大的值运行速度较慢，但可能不能产生较好的编码质量。
该选项可以并且应当与格子因子量化模式一起使用，在这种情况下格子因子量化模式（对于
恒定权值是最优的）将作为迭代搜索的起始操作。
.PD 0
.RSs
.IPs 0
禁用（默认值）
.IPs 1
仅降低系数的绝对值。
.IPs 2
仅改变最后一个非零系数+1之前的系数。
.IPs 3
尝试所有可能操作。
.RE
.PD 1
.
.TP
.B inter_matrix=<逗号分隔的矩阵>
使用自定义的帧间矩阵。
该选项需要一个用逗号分隔的64个整数组成的字符串。
.
.TP
.B intra_matrix=<comma separated matrix>
使用自定义的帧内矩阵。
该选项需要一个用逗号分隔的64个整数组成的字符串。
.
.TP
.B vqmod_amp
实验性的量化器调整模式
.
.TP
.B vqmod_freq
实验性的量化器调整模式
.
.TP
.B "dc\ \ \ \ \ "
以比特为单位的帧内DC精度（默认值：8）。
如果你指定了vcodec=mpeg2video，那么这个值可以是8、9、10或11。
.
.TP
.B cgop（另参见sc_threshold）
关闭所有的GOP。
当前该选项只有当场景切换侦测功能禁用时才能工作（sc_threshold=1000000000）。
.
.TP
.B "gmc\ \ \ \ "
启动全局动作补偿。
.
.TP
.B (no)lowdelay
设置用于 MPEG-1/2 的低延迟标志（禁用B帧）。
.
.TP
.B vglobal=<0\-3>
控制写入全局视频头部信息的方式。
.PD 0
.RSs
.IPs 0
编解码器决在哪里写入全局头部信息（默认值）。
.IPs 1
只在extradata（额外数据）域中写入全局头部信息（.mp4/MOV/NUT需要这样做）。
.IPs 2
只在关键帧之前写入全局头部信息。
.IPs 3
结合1和2两种方式。
.RE
.PD 1
.
.TP
.B aglobal=<0\-3>
与vglobal相同，用于音频头部信息。
.
.TP
.B level=<value>
设置编解码器环境等级。
使用31或41以在Playstation 3上播放视频。
.
.TP
.B skip_exp=<0\-1000000>
FIXME：为这个选项写说明文档。
.
.TP
.B skip_factor=<0\-1000000>
FIXME：为这个选项写说明文档。
.
.TP
.B skip_threshold=<0\-1000000>
FIXME：为这个选项写说明文档。
.
.
.SS nuv（\-nuvopts）
.
Nuppel视频基于RTJPEG和LZO。
默认方式下，帧首先以RTJPEG方式编码，然后再用LZO压缩，但可以禁用这两个阶段的一个
或两个。
于是，你可以实际上输出的是原始的i420、LZO压缩的i420、RTJPEG或默认情况下的经LZO压
缩的RTJPEG。
.br
.I 注意：
nuvrec文件包含了一些关于用于大多数常见TV编码的设置的建议和示例。
.
.TP
.B c=<0\-20>
色度阈值（默认值：1）
.
.TP
.B l=<0\-20>
亮度阈值（默认值：1）
.
.TP
.B "lzo\ \ \ \ "
启用LZO压缩（默认值）。
.
.TP
.B "nolzo\ \ "
禁用LZO压缩。
.
.TP
.B q=<3\-255>
质量等级（默认值：255）
.
.TP
.B "raw \ \ \ "
禁用RTJPEG编码。
.
.TP
.B "rtjpeg\ "
启用RTJPEG编码。（默认值）。
.
.
.SS xvidenc (\-xvidencopts)
.
有三个模式可以使用：恒定比特率模式（CBR）、固定量化器模式和二阶段编码模式。
.
.TP
.B pass=<1|2>
在二阶段编码模式中指定哪一个阶段。
.
.TP
.B turbo（仅用于二阶段编码模式）
通过使用更快的算法并禁用大量消耗CPU的选项，以加速第一阶段编码。
该选项可能稍许降低全局的PSNR，并且改变单个帧的类型，以及稍许提升这个帧的PSNR。
.
.TP
.B bitrate=<value>（用于CBR或二阶段编码模式）
设置所使用的比特率。若值小于16000，则单位为千比特/\:秒；若值大于16000，则单位
为bits/\:second。
如果<value>为负数，那么Xvid将把这个值的绝对值作为视频的目标大小（单位为
kBytes），并自动计算出相应的比特率（默认值：687kbits/s）。
.
.TP
.B fixed_quant=<1\-31>
切换至固定量化器模式，并指定所使用的量化器。
.
.TP
.B zones=<zone0>[/<zone1>[/...]]（CBR或二阶段编码模式）
用户指定的针对影片特定部分（片尾、演职员表、……）的质量值。
每个zone的格式是<start-frame>,<mode>,<value>，其中<mode>可以是
.PD 0
.RSs
.IPs "q"
更改恒定量化器，在这种模式下value=<2.0\-31.0>，代表量化参数值。
.IPs "w"
更改码率控制权值，在这种模式下value=<0.01\-2.00>，代表单位为%的质量修正值。
.RE
.PD 1
.sp 1
.RS
.I 示例：
.RE
.PD 0
.RSs
.IPs zones=90000,q,20
将90000开始的所有帧以恒定量化参数20编码。
.IPs zones=0,w,0.1/10001,w,1.0/90000,q,20
将0\-10000帧以10%的比特率编码，将90000直至结尾的帧以20的恒定量化参数编码。
注意需要有第二个zone以限定第一个zone，因为没有它直至89999的所有帧都会以10%的比特
率编码。
.RE
.PD 1
.
.TP
.B me_quality=<0\-6>
该选项控制运动估计子系统。
值越高，运动估计就越精确（默认值：6）。
运动估计越精确，就能节省越多的比特。
提高精度是以牺牲CPU时间为代价的，所以如果你需要实时编码，那么就降低这个设置。
.
.TP
.B (no)qpel
MPEG-4默认在其运动搜索中采用半像素的精度。
标准中提出了一种允许编码器采用四分之一像素精度的模式。
该选项通常导致图像较为锐化。
不幸的是，该选项对于比特率有很大影响，并且有时候这种较高的比特率的占用阻碍其在固
定比特率下给予图像较好质量。
最好在启用和禁用这个选项的情况下测试一下，以看看是否值得激活该选项。
.
.TP
.B (no)gmc
启用全局运动补偿模式，该模式使Xvid生成特殊的帧（GMC帧），这种帧相当适合带有摇摄
/\:推近/\:旋转等镜头的画面。
使用该选项是否能节省比特是高度取决于源视频素材。
.
.TP
.B (no)trellis
格子因子量化模式是一种自适应的量化方式，该方式通过修改量化后的系数，以使这些系数
能被熵编码器更大幅度地压缩，从而节省比特。
其对质量的提升是不错的，如果VHQ对你来说占用了太多CPU，那么这个设置可能是相比VHQ
而言以较少代价节省一些比特（并且提升固定比特率下画面质量）的一种替代方法（默认
值：打开）。
.
.TP
.B (no)cartoon
如果你编码的帧序列是动画/\:卡通的话，那么就激活这个选项。
这个选项修改Xvid内部的一些阈值，以使Xvid在针对外观平面化的卡通片的帧类型和运动矢
量的决策中有较好判断。
.
.TP
.B (no)chroma_me
通常的运动估计算法仅使用亮度信息寻找最佳的运动矢量。
然而对于一些视频素材，使用色度平面能有助于找到更好的矢量。
该设置开启在运动估计中对于色度平面的使用（默认值：开启）。
.
.TP
.B (no)chroma_opt
启用色度优化器的一个预过滤器。
这个预过滤器将对色彩信息做一些额外的特殊处理，以使图形边缘的阶梯性变化效果降至最
低。
这个预过滤器会以牺牲编码速度为代价以提升质量。
这自然会降低PSNR，因为相对于原始画面的数学上的偏移将增大，但是主观感觉上图像的质
量将得到提升。
由于其依据色彩信息而工作，因而在以灰度模式编码时你可能想把这个选项关掉。
.
.TP
.B (no)hq_ac
对于来自邻近块的内部帧，激活对于AC系数的高质量预测模式（默认值：开启）。
.
.TP
.B vhq=<0\-4>
运动搜索算法基于一种对于通常色彩域的搜索，并且尝试找到一个能将参照帧和编码所得帧
的差别降至最小的运动矢量。
激活该选项时，Xvid将同时利用频率域（DCT）以搜索到一个既将空间上的差别降至最小，
又将块的编码长度降至最短的运动矢量。
从运行最快至运行最慢的设置有：
.PD 0
.RSs
.IPs 0
关闭
.IPs 1
根椐模式决定（帧间/\:帧内宏块）（默认值）
.IPs 2
限制性搜索
.IPs 3
中性搜索
.IPs 4
宽泛性搜索
.RE
.PD 1
.
.TP
.B (no)lumi_mask
自适应的量化模式使宏块的量化器能在每个帧中有所不同。
这是一种‘心理感官性’的设置，一般认为它所利用的事实是人眼倾向于在画面中十分亮的
和十分暗的部分只注意到较少的细节。
相对于中性的区域，该选项对于这些区域压缩幅度更大，这将节省一些比特而将其用在其它
的帧中，从而提升整体的主观视觉质量但可能降低了PSNR。
.
.TP
.B (no)grayscale
使Xvid丢弃色度平面信息，从而使编码得到的视频只是灰度模式的。
注意该选项并不加快编码速度，而只是在编码的最后阶段阻止写入色度数据。
.
.TP
.B (no)interlacing
编码隔行扫描视频内容的扫描场。
打开该选项以用于隔行扫描内容。
.br
.I 注意：
如果你要改变视频的尺寸，那么你需要一个能识别隔行扫描内容的缩放器，你可以使用
\-vf scale=<width>:<height>:1来激活这种缩放器。
.
.TP
.B min_iquant=<0\-31>
最小I帧量化参数（默认值：2）
.
.TP
.B max_iquant=<0\-31>
最大I帧量化参数（默认值：31）
.
.TP
.B min_pquant=<0\-31>
最小P帧量化参数（默认值：2）
.
.TP
.B max_pquant=<0\-31>
最大P帧量化参数（默认值：31）
.
.TP
.B min_bquant=<0\-31>
最小B帧量化参数（默认值：2）
.
.TP
.B max_bquant=<0\-31>
最大B帧量化参数（默认值：31）
.
.TP
.B min_key_interval=<value>（仅用于二阶段编码模式）
关键帧间的最小间隔（默认值：0）
.
.TP
.B max_key_interval=<value>
关键帧间的最大间隔（默认值：10*fps）
.
.TP
.B quant_type=<h263|mpeg>
设置所使用的量化器类型。
对于高码率，你会发现MPEG量化模式保留了更多的细节。
对于低码率，H.263的平滑特性会为了你带来较少的宏噪声。
当使用自定义的量化矩阵时，
.B 必须
使用MPEG量化模式。
.
.TP
.B quant_intra_matrix=<filename>
载入一个自定义的帧内量化矩阵文件。
你可以使用xvid64conf的矩阵编码器以构建这样的文件。
.
.TP
.B quant_inter_matrix=<filename>
载入一个自定义的帧间量化矩阵文件。
你可以使用xvid64conf的矩阵编码器以构建这样的文件。
.
.TP
.B keyframe_boost=<0\-1000>（仅用于二阶段编码模式）
将一些比特从其它帧类型的空间储备中转移至内部帧中，从而提高关键帧的质量。
该数量是增加的百分比量，所以值为10将给你的关键帧带来比通常情况下多10%的比特量
（默认值：0）。
.
.TP
.B kfthreshold=<value>（仅用于二阶段编码模式）
与kfreduction一同使用。
定义一个最小距离，低于这个距离你就认为两个帧应当视作是连续的，从而根据
kfreduction的设置处理这个情况
（默认值：10）。
.
.TP
.B kfreduction=<0\-100>（仅用于二阶段编码模式）
以上两个设置可用于调整那些你认为过于接近（一个序列中）头个帧的关键帧的大小。
kfthreshold设置了在哪个范围内的关键帧要被削减，而kfreduction决定了这些关键帧被削
减比特率的量。
最后一个I帧将以通常的方式处理
（默认值：30）。
.
.TP
.B max_bframes=<0\-4>
放置于I/P帧间的B帧的最大数量（默认值：2）。
.
.TP
.B bquant_ratio=<0\-1000>
B帧与非B帧间的量化参数比，150=1.50（默认值：150）
.
.TP
.B bquant_offset=<\-1000\-1000>
B帧与非B帧间的量化参数差值，100=1.00（默认值：100）
.
.TP
.B bf_threshold=<\-255\-255>
该选项让你指定使用B帧的优先级。
这个值越高，B帧就越可能被使用（默认值：0）。
不要忘了B帧通常量化参数比较高，从而过分产生B帧可能导致视觉质量变差。
.
.TP
.B (no)closed_gop
该选项告诉Xvid封闭每个GOP（Group Of Pictures——由两个I帧分隔出来的画面组），这
使GOP彼此之间相互独立。
这就是意味着GOP的最后一个帧要么是P帧，要么是N帧，而不是B帧。
通常开启这个选项是比较好的（默认值：开启）。
.
.TP
.B (no)packed
该选项意在解决编码至诸如AVI之类的不能处理乱序帧序列的容器格式时，所发生的帧顺序
问题。
实际应用中，大多数解码器（无论是软件的还是硬件的）都能够自己处理帧的顺序，因而当
此选项开启时可能反而引起混乱，所以你可以放心地让这个选项保留为关闭状态，除非你确
实知道你在做什么。
.br
.I 警告：
该选项会产生非法的比特流，从而不能被DivX/\:libavcodec/\:Xvid以外的ISO-MPEG-4的解
码器解码。
.br
.I 警告：
该选项同时会在文件中存入一个虚假的DivX版本号，所以某些解码器中有问题的自动侦测系
统可能会搞不清楚。
.
.TP
.B frame_drop_ratio=<0\-100>（仅用于max_bframes=0时）
该设置控制可变帧率视频流的创建。
该设置的值指定了一个阈值，如果后一个帧相对于前一个帧的差别低于或等于这个阈值，那
么将跳过对于一个帧的编码（一个所谓的n-vop将放置于视频流中）。
在播放时，当遇到一个n-vop时，将显示前一个帧。
.br
.I 警告：
滥用这个设置可能导致视频跳跃，所以使用该选项后果自负！
.
.TP
.B rc_reaction_delay_factor=<value>
该参数控制CBR码率控制在对于比特率变后作出反应并且对其作出补偿，以使比特率在一个
平均化范围内的帧中保持恒定前，所等待的帧的数量。
.
.TP
.B rc_averaging_period=<value>
真正的CBR是很难达到的。
由于视频素材的不同，比特率可能是变化而难以预测的。
所以Xvid采用了一种平均化周期，在这个周期中它保证比特数量为给定的一个值（减去一个
较小的可变值）。
这个设置所表达的是Xvid使“多少数量的帧”的比特率平均化从而达到CBR。
.
.TP
.B rc_buffer=<value>
码率控制缓冲的大小
.
.TP
.B curve_compression_high=<0\-100>
该设置让Xvid从高比特率的场景中拿出一定百分比的比特，而将这些比特还给比特预留储备
中。
你也可以使用这个设置，如果你的一个视频有太多的比特分配给了高比特率的场景，以致于
（较）低比特率的场景变得看上去很糟糕（默认值：0）。
.
.TP
.B curve_compression_low=<0\-100>
该设置让Xvid将一定百分比的额外的比特分给低比特率的场景，而从整个视频剪辑中拿去一
部分比特。
如果你的一些低比特率场景仍然有马赛克，那么这个设置可能很好用（默认值：0）。
.
.TP
.B overflow_control_strength=<0\-100>
在二阶段编码模式的第一阶段，计算出了一个经过缩放的比特率曲线。
这个所期望曲线与编码中得到的曲线之间的差值称为溢出。
显然，二阶段编码的码率控制器尝试弥补这个溢出量，将这个差值派分到后续帧中。
该设置控制了每次有一个新帧时，有多少溢出量分配至其上。
较低的值允许使用较迟缓的溢出控制，较大的码率喷发将较慢地得到补偿（可能导致小型视
频剪辑中缺乏精度）。
较大的值将使比特再分配过程中的变化更具突发性，如果你设得太高则可能太突然，以致产
生损伤（默认值：5）。
.br
.I 注意：
该设置对于质量极具影响，小心使用！
.
.TP
.B max_overflow_improvement=<0\-100>
在帧所用比特的分配过程中，溢出控制可能增加帧的大小。
该参数溢出控制所允许相对理想分配曲线所增加帧大小的最大的百分比
（默认值：5）。
.
.TP
.B max_overflow_degradation=<0\-100>
在帧所用比特的分配过程中，溢出控制可能减少帧的大小。
该参数溢出控制所允许相对理想分配曲线所减小帧大小的最大的百分比
（默认值：5）。
.
.TP
.B container_frame_overhead=<0...>
指定每帧的平均开销，单位为字节。
大多数时候用户表达的是他们针对视频的目标比特率，而不关心视频容器文件的开销。
这种较小的但（往往）恒定的开销可以导致目标文件大小超过预期值。
Xvid让用户设置容器产生的平均每帧的开销数量（只给出每帧的平均值）。
0具有特殊的含义，这个值让Xvid采用自己的默认值（默认值：24——AVI的平均开销）。
.
.TP
.B profile=<profile_name>
根据简单配置集（Simple Profile）、高级简单配置集（Advanced Simple Profile）以及
DivX配置集（DivX Profile）限制选项的使用和VBV（短时间内的峰值比特率）。
所产生的视频应该能够在符合这些配置集标准的独立播放器上播放。
.PD 0
.RSs
.IPs unrestricted
没有限制（默认值）
.IPs "sp0\ \ "
第0级的简单配置集
.IPs "sp1\ \ "
第1级的简单配置集
.IPs "sp2\ \ "
第2级的简单配置集
.IPs "sp3\ \ "
第3级的简单配置集
.IPs "asp0\ "
第0级的高级简单配置集
.IPs "asp1\ "
第1级的高级简单配置集
.IPs "asp2\ "
第2级的高级简单配置集
.IPs "asp3\ "
第3级的高级简单配置集
.IPs "asp4\ "
第4级的高级简单配置集
.IPs "asp5\ "
第5级的高级简单配置集
.IPs dxnhandheld
DXN手持式设备配置集
.IPs dxnportntsc
DXN便携NTSC制式设备配置集
.IPs dxnportpal
DXN便携PAL制式设备配置集
.IPs dxnhtntsc
DXN家庭影院NTSC制式设备配置集
.IPs dxnhtpal
DXN家庭影院PAL制式设备配置集
.IPs dxnhdtv
DXN高清电视设备配置集
.RE
.PD 1
.RS
.I 注意：
这些配置集应当与适当的\-ffourcc选项一起使用。
通常DX50是可以采用的，因为某些播放器不能识别Xvid但大多数能识别DivX。
.RE
.
.TP
.B par=<mode>
指定像素宽高比（Pixel Aspect Ratio）模式（不要与DAR——屏幕宽高比——混淆在一起
）。
PAR是单个像素的宽度和高度的比例。
所以两者的关系如下：DAR = PAR * (宽度/高度)。
.br
MPEG-4定义了5种像素宽高比以及一种泛用宽高比，这为指定一种专用的像素宽高比
留下了余地。
可以指定5种标准模式：
.PD 0
.RSs
.IPs vga11
这是通常用于PC视频内容的PAR。
像素是正方形单元。
.IPs pal43
PAL标准的4:3的PAR。
像素是长方形的。
.IPs pal169
与前面同理
.IPs ntsc43
与前面同理
.IPs ntsc169
与前面同理（不要忘了给出精确的比率）
.IPs "ext\ \ "
允许你使用par_width和par_height指定你自己的像素宽高比。
.RE
.PD 1
.RS
.I 注意：
通常，设置aspect和autoaspect选项就已经足够了。
.RE
.
.TP
.B par_width=<1\-255>（仅用于par=ext时）
指定自定像素宽高比的宽度。
.
.TP
.B par_height=<1\-255>（仅用于par=ext时）
指定自定像素宽高比的高度。
.
.TP
.B aspect=<x/y | f（浮点值）>
将影片的宽高比存放于文件内部，就像MPEG文件一样。
与重新缩放的效果好很多，因为质量并不下降。
MPlayer与其它一些播放器能正确播放这些文件，除此之外的播放器会以错误的宽高比显示
这些文件。
宽高比参数可以以比率或是浮点数的形式给出。
.
.TP
.B (no)autoaspect
与aspect选项相同，但是是自动计算宽高比，在此过程中考虑了滤镜链中所进行的所有的调
整（crop/\:expand/\:scale/\:等等）。
.
.TP
.B "psnr\ \ \ "
编码之后打印出整个视频的PSNR（峰值信噪比），并将逐帧计算的PSNR保存在当前目录中名
字诸如‘psnr_hhmmss.log’的一个文件里。
返回值的单位是dB（分贝），值越高越好。
.
.TP
.B "debug\ \ "
将逐帧计算的统计信息保存在./xvid.dbg中。（这个文件不是二阶段编码模式中的码率控制
文件。）
.RE
.
.PP
.sp 1
以下选项只存在于Xvid 1.1.x中。
.
.TP
.B bvhq=<0|1>
该设置允许通过使用一种针对码率失真优化的运算，来选取用于编码中使用的B帧的候
选运动矢量，对于P帧这种方式是通过vhq选项实现的。
该方式产生的B帧看上去较好，而同时也几乎不影响性能（默认值：1）。
.
.PP
.sp 1
以下选项只存在于1.2.x版的Xvid中。
.
.TP
.B threads=<0\-n>
创建n个线程用以运行运动估计任务（默认值：0）。
最多可以使用的线程的数量为画面的高度除以16所得的值。
.
.
.SS x264enc（\-x264encopts）
.
.TP
.B bitrate=<value>
设置所采用的平均比特率，单位为千比特/\:秒（默认值：关闭）。
由于局部比特率会变化，因而这个平均值对于十分短的视频来说可以不精确
（参见ratetol）。
可以通过将此设置与vbv_maxrate一起使用来实现恒定的比特率，代价是质量严重下降。
.
.TP
.B qp=<0\-51>
该选项选择的是用于P帧的量化器。
I与B帧的话分别是该值加上ip_factor与pb_factor后得到的值。
20\-40是一个有用的范围。
较低的值产生较好的精确，但导致比特率较高。
0代表无损。
注意H.264的量化模式与MPEG-1/2/4的工作方式不同：
H.264的量化参数是基于对数尺度的。
两者之间的映射关系大至是H264QP = 12 + 6*log2(MPEGQP)。
例如，MPEG的QP=2与H.264的QP=18是等价的。
.
.TP
.B crf=<1.0\-50.0>
启用恒定质量模式，并选择质量值。
该质量值的尺度与QP的相类似。
就像基于比特率的模式一样，该模式允许每个帧根据帧的复杂度使用不同的QP。
.
.TP
.B pass=<1\-3>
启用2或3阶段编码模式。
推荐总是以2或3阶段编码模式编码，因为该模式使比特的分配更佳，从而提升整体质量。
.PD 0
.RSs
.IPs 1
第一阶段
.IPs 2
（二阶段编码模式中的）第二阶段
.IPs 3
第N阶段（三阶段编码模式的第二和第三阶段）
.RE
.RS
以下介绍的是其如何工作，以及使用这个参数：
.br
第一阶段（pass=1）收集视频上的统计信息，并将这些信息写入一个文件中。
除了那些默认为打开的选项，你可能想关闭一些消耗CPU的选项。
.br
在二阶段编码模式，第二阶段（pass=2）读取统计信息文件，并基于这个文件进行码率控制
决策。
.br
在三阶段编码模式中，第二阶段（pass=3——这是不打印错误）同时做两件事：其首先读取
统计信息，然后重写这些统计信息。
你可以使用所有的编码选项，除了那些十分消耗CPU的选项。
.br
第三阶段（pass=3）与第二阶段相同，只是这一阶段基于第二阶段产生的统计信息工作。
你可以使用所有的编码选项，包括消耗CPU的那些选项。
.br
第一阶段可以使用平均比特率模式，或是使用恒定量化器模式。
推荐使用ABR，因为该模式不需求猜测所要使用的量化器。
后续的阶段是ABR模式的，并且必须指定比特率。
.REss
.
.TP
.B turbo=<0\-2>
快速第一阶段模式。
在二阶段或更多阶段编码的第一阶段中，可以通过禁用一些对于最终阶段输出质量影响甚
小，甚至没有影响的选项，以提升运行速度。
.PD 0
.RSs
.IPs 0
禁用（默认值）
.IPs 1
减小subq、frameref的值，并且禁用一些宏块间划分分析的模式。
.IPs 2
减小subq、frameref至1，使用菱形运动估计搜索，并且禁用所有划分分析模式。
.RE
.RS
第1级可以最多使第一阶段的速度加快至2倍，而与完全质量的第一阶段模式相比，对于最
终阶段的全局PSNR没有任何改变。
.br
第2级可以最多使第一阶段的速度加快至4倍，而与完全质量的第一阶段模式相比，对于最
终阶段的全局PSNR有大约+/\- 0.05dB的改变。
.REss
.
.TP
.B keyint=<value>
设置IDR帧间的最大间隔（默认值：250）。
较大的值节省比特，从而提高质量，代价是降低播放中的定位精度。
与MPEG-1/2/4不同，H.264在keyint值很大是并不受DCT漂移效应影响。
.
.TP
.B keyint_min=<1\-keyint/2>
设置IDR帧间的最小间隔（默认值：25）。
如果这个间隔中出现了场景切换，那么这个切换仍然编码为I帧，但不产生新的GOP。
在H.264中，I帧并不一定约束出一个封闭的GOP，因为这里允许P帧在其前面的一帧之前预测
出来（另参见frameref）。
所以，I帧并不一定可用于播放定位。
IDR帧限制其后续P帧，不让它们参照该IDR帧之前的帧。
.
.TP
.B scenecut=<\-1\-100>
控制插入额外I帧行为的激进程度（默认值：40）。
当scenecut值小时，编解码器在即将超过keyint所规定值时总是强制使用I帧。
scenectu值设置得好可能为I帧找到一个更好的位置。
较大的数值导致使用多于所需要的I帧，从而浪费了比特。
\-1表示禁用场景切换侦测，这样I帧只有每过keyint个帧时才会插入一个，即使场景切换之
前就已发生。
这种方式不推荐使用，并且其浪费比特率，因为场景切换编码为P帧与编码为I帧几乎差不多
大，但其并不重置‘keyint计数器’。
.
.TP
.B (no)intra_refresh
使用周期性的内部区域更新而不使用关键帧（默认值：禁用）。
该选项禁用 IDR 帧，而是使用由一组内部编码的区域组成的移动垂直带。该模式降低了
压缩效率但减小了流传输的延并增强了对丢包的容错能力。
.
.TP
.B frameref=<1\-16>
B帧和P帧中的预测器里所使用的之前出现的帧的数量（默认值：3）。
该选项在动画是有效果的，但在实况视频素材中，大约6个参照帧之后参照帧的优化效果急
剧下降。
该选项对于解码速度没有影响，但确实增加了解码所需的内存量。
某些解码器最多只能处理15个参照帧。
.
.TP
.B bframes=<0\-16>
I帧和P帧之间连续出现的B帧的最大数量（默认值：3）
.
.TP
.B (no)b_adapt
自动决定何时使用B帧以及使用多少，数量上限为以上所指定的最大值（默认值：开启）。
如果禁用了这个该项，那么将使用的B帧数为最大值。
.
.TP
.B b_bias=<\-100\-100>
控制b_adapt所做的决策。
b_bias值最高产生的B帧越多（默认值：0）。
.
.TP
.B (no)b_pyramid
允许B帧作用预测其它帧的参照帧。
例如，考虑3个连续的B帧：IO B1 B2 B3 P4。
不用这个选项的话，B帧的样式与MPEG-[124]中的一样。
这样这些帧将以IO P4 B1 B2 B3的次序编码，而所有的B帧都是从IO和P4中预测出来的。
使用了这个选项后，这些帧将编码为IO 04 B2 B1 B3。
B2与前面所述的一样，但B1是从IO和B2预测出来的，而B3是从B2和P4预测出来的。
这种方式通常产生稍许好一些的压缩效果，而几乎没有运行速度上的开销。
然而，这是一个实验性的选项：没有完全调整好并且可能不能总是起作用。
要求bframes >= 2。
缺点：将解码延迟量增加至2帧。
.
.TP
.B (no)deblock
使用反块效应滤镜（默认值：开启）。
由于相对于其提高的质量而言，该选项占用极少时间，所以不推荐禁用这个选项。
.
.TP
.B deblock=<\-6\-6>,<\-6\-6>
第一个参数是AlphaC0（默认值：0）。
该参数调整的是H.264内循环反块效应滤镜所用的阈值。
第一，该参数调整的是滤镜对于任何一个像素所允许产生的变动的最大数量。
第二，该参数影响的是将被滤除的边界两侧差别的阈值。
正数值使更多的块效应损伤得到削减，但同时也会损伤画面细节。
.br
第二个参数是Beta（默认值：0）。
该参数影响的是画面细节的阈值。
细节很多的块将不被过滤，因为滤镜产生的平滑效果会比原来的块效应效果更加明显。
.br
滤镜的默认行为几乎总是带来最优的质量，所以最好要么不调这个选项，要么只对其作少量
调整。
然而，如果你的源视频素材已经有一些块效应或噪声效果你想要去除，那么可能将这个选项
调高一点是个不错的办法。
.
.TP
.B (no)cabac
使用CABAC模式（Context-Adaptive Binary Arithmetic Coding，上下文自适应的二进制算
术编码）（默认值：开启）。
稍稍减慢编码和解码的速度，但应该可以节省10\-15%的比特率。
除非你要解码速度，否则你不该禁用这个选项。
.
.TP
.B qp_min=<1\-51>（用于ABR或二阶段编码模式）
最小量化参数，10\-30似乎是一个有用的范围（默认值：10）。
.
.TP
.B qp_max=<1\-51>（用于ABR或二阶段编码模式）
最大量化参数（默认值：51）
.
.TP
.B qp_step=<1\-50>（用于ABR或二阶段编码模式）
量化参数在帧之间增加/降低的最大数值（默认值：4）
.
.TP
.B (no)mbtree
启用宏块树结构的码率控制（默认值：启用）。
采用大量的预读以跟上数据在时间上的变化并相应地设置编码质量的权重。
在多阶段的编码模式中，该模式将信息写入一个名为 <passlogfile>.mbtree 的独立的状态文
件中。
.
.TP
.B rc_lookahead=<0\-250>
调整 mbtree 的预读范围（默认值：40）。
较大的值将运行得较慢并使 x264 消耗较多的内存，但同时能产生较高的质量。
.
.TP
.B ratetol=<0.1\-100.0>（用于ABR或二阶段编码模式）
相对于平均比特率的所允许的变化程度（不针对特定编码单元）（默认值：1.0）
.
.TP
.B vbv_maxrate=<value>（用于ABR或二阶段编码模式）
局部最大的比特率，单位为千比特/\:秒（默认值：禁用）
.
.TP
.B vbv_bufsize=<value>（用于ABR或二阶段编码模式）
计算vbv_maxrate时所使用的平均化周期，单位为千比特
（默认值：无，如果启用了vbv_maxrate那么必须指定这个选项）
.
.TP
.B vbv_init=<0.0\-1.0>（用于ABR或二阶段编码模式）
初始缓冲占用量，为相对于vbv_bufsize值的一个分数（默认值：0.9）
.
.TP
.B ip_factor=<value>
I帧和P帧间的量化参数因数（默认值：1.4）
.
.TP
.B pb_factor=<value>
P帧和B帧间的量化参数因数（默认值：1.3）
.
.TP
.B qcomp=<0\-1>（用于ABR或二阶段编码模式）
量化器压缩率（默认值：0.6）。
值越小使比特率越恒定，
而值越大使量化参数越恒定。
.
.TP
.B cplx_blur=<0\-999>（仅用于二阶段编码模式）
估计出的帧复杂度的时间模糊度，应用于曲线压缩之前（默认值：20）。
值越低则让量化参数值浮动得越多，
值越高则使其变化得越平滑。
cplx_blur保证每个I帧的质量与其后的P帧相当，并保证复杂度高低交替变化的帧（例如，
低帧率的动画）不会因为量化参数的波动而浪费比特。
.
.TP
.B qblur=<0\-99>（仅用于二阶段编码模式）
量化参数的时间模糊度，应用于曲线压缩之后（默认值：0.5）。
值越低则允许量化参数浮动得越多，
值越高则使其变化得越平滑。
.
.TP
.B zones=<zone0>[/<zone1>[/...]]
用户指定的用于影片特定部分（片尾、演职员表、……）的质量值。
每个zone的格式是<start-frame>,<end-frame>,<option>，其中option可能是
.PD 0
.RSs
.IPs "q=<0\-51>"
量化参数
.IPs "b=<0.01\-100.0>"
比特率的倍数
.RE
.PD 1
.RS
.I 注意：
量化参数选项不是严重执行的。
其影响的只是码率控制过程中的计划阶段，并且仍然受制于溢出补偿和qp_min/qp_max选项。
.RE
.
.TP
.B direct_pred=<name>
决定用于B帧中直接模式宏块的运动预测的类型。
.PD 0
.RSs
.IPs none
不使用直接模式的宏块。
.IPs spatial
运动矢量由邻接块推断出来。（默认值）
.IPs temporal
运动矢量由其后的P帧推断出来。
.IPs auto
编解码器为每个帧分别选择是用spatial还是用temporal。
.RE
.PD 1
.RS
spatial和temporal速度上和PSNR上大致相同，选择两者中的哪一个取决于视频的内容。
auto稍稍好一些，但运行慢一些。
当与多阶段编码模式一同使用时，auto非常有效。
direct_pred=none不仅运行速度较慢而且质量也较差。
.RE
.
.TP
.B weightp
基于权重的 P 帧预测模式（默认值：2）。
Weighted P-frame prediction mode (default: 2).
.PD 0
.RSs
.IPs 0
禁用（运行最快）
.IPs 1
盲目模式（质量稍好）
.IPs 2
智能模式（质量最好）
.RE
.PD 1
.
.TP
.B (no)weight_b
使用B帧中带权重的预测模式。
不用这个选项的话，双向预测出的宏块给每个所参照的帧相等的权重值。
使用了这个选项后，权重值是根据B帧相对参照帧的时间位置而决定的。
要求bframes > 1。
.
.TP
.B partitions=<list>
启用一些可选的宏块类型（默认值：p8x8,b8x8,i8x8,i4x4）。
.PD 0
.RSs
.IPs p8x8
启用p16x8、p8x16、p8x8类型。
.IPs p4x4
启用p8x4、p4x8、p4x4类型。
p4x4只在subq >= 5，并且分辨率低时才推荐使用。
.IPs b8x8
启用b16x8、b8x16、b8x8类型。
.IPs i8x8
启用i8x8类型。
除非启用了8x8dct，否则i8x8没有任何效果。
.IPs i4x4
启用i4x4类型。
.IPs all
启用以上所有类型。
.IPs none
禁用以上所有类型。
.RE
.PD 1
.RS
不管这个选项设为何值，p16x16、b16x16和i16x16三种宏块类型总是启用的。
.br
其思想是找到最适合描绘画面某一区域的宏块类型和尺寸。
例如，全局摇摄镜头较好以16x16的块来表示，而小型移动物体较好以小一点的块来表示。
.RE
.
.TP
.B (no)8x8dct
自适应空间变换尺寸：允许宏块在4x4和8x8的DCT间选择一种。
同时允许使用i8x8的宏块类型。
不使用这个选项，则只使用4x4的DCT。
.
.TP
.B me=<name>
选择全像素运动估计算法。
.PD 0
.RSs
.IPs dia
菱形搜索，半径为1（运行快）
.IPs hex
六边形搜索，半径为2（默认值）
.IPs umh
非均匀的多六边形搜索（运行慢）
.IPs esa
彻底性搜索（运行非常慢，而且不比umh好多少）
.RE
.PD 1
.
.TP
.B me_range=<4\-64>
彻底性运动搜索或多六边形运动搜索的半径（默认值：16）
.
.TP
.B subq=<0\-9>
调整亚像素优化质量。
该参数控制的是运动估计决策过程中质量与速度的权衡。
subq=5能比subq=1多压缩掉10%。
.PD 0
.RSs
.IPs 0
对于所有候选宏块类型运行全像素精度的运动估计操作。
然后选择 SAD 指标最佳的类型（比 subq=1 快，不推荐，除非
你需要极其快速的编码）。
.IPs 1
执行值为 0 时的操作，
然后优化这种类型的运动值，使其达到快速四分之一像素模式的精度（运行快）。
.IPs 2
对于所有候选宏块类型运行半像素精度的运动估计操作。
然后选择 SATD 指标最佳的类型。
然后优化这种类型的运动值，使其达到快速四分之一像素模式的精度。
.IPs 3
与2相似，但采用较慢的四分之一像素优化模式。
.IPs 4
对于所有候选宏块类型运行快速四分之一像素精度的运动估计操作。
然后选择 SATD 指标最佳的类型。
然后完成对于此种类型的四分之像素模式的优化操作。
.IPs 5
在选择最佳类型之前，对于所有候选宏块类型运行最佳质量的四分之一像素精度的运动估计
操作。
同时也使用 SATD 指标优化双向宏块中使用的两个运动矢量，而不是重用向前和向后搜索中
找到的矢量。
.IPs 6
启用I帧和P帧中宏块类型的码率失真优化模式。
.IPs 7
在所有帧中启用宏块类型的码率失真优化模式。（默认值）
.IPs 8
启用运动矢量的码率失真优化模式，以及I帧和P帧中的内部预测模式。
.IPs 9
启用运动矢量的码率失真优化模式，以及所有帧中的内部预测模式。（最佳）
.RE
.PD 1
.RS
以上内容中，“所有的候选宏块类型”并不恰恰意味着所有已启用的类型：
4x4、4x8、8x4只有当8x8比16x16好时才尝试采用。
.RE
.
.TP
.B (no)chroma_me
在亚像素运动搜索中考虑色度信息（默认值：启用）。
要求subq>=5。
.
.TP
.B (no)mixed_refs
允许每个8x8或16x8的运动部分独立地选取一个参照帧。
不用这个选项的话，整个宏块必须采用同一个参照帧。
要求frameref>1。
.
.TP
.B trellis=<0\-2>（仅适用于 cabac）
码率失真最优的量化模式
.PD 0
.RSs
.IPs 0
禁用
.IPs 1
仅对最终编码启用（默认值）
.IPs 2
启用所有模式下的决策（运行慢，要求subq>=6）
.RE
.PD 1
.
.TP
.B psy-rd=rd[,trell]
设置心理视觉优化模式的强度。
.PD 0
.RSs
.IPs rd=<0.0\-10.0>
心理视觉优化模式的强度（要求 subq>=6）（默认值：1.0）
.IPs trell=<0.0\-10.0>
trellis（要求 trellis，实验性）（默认值：0.0）
.RE
.PD 1
.
.TP
.B (no)psy
启用心理视觉优化模式，该模式降低 PSNR 和 SSIM 但应该视觉效果更好（默认值：启
用）。
.
.TP
.B deadzone_inter=<0\-32>
设置非格子因子量化模式中帧间亮度量化无效区的大小（默认值：21）。
较小的值有助于保留最好的细节和影片的粒度感（特别是对于高比特率/质量编码有用），
而较大的值有助于滤除这些细节从而省下比特以用在其它宏块和帧上（特别是对于低比特率
的编码有用）。
推荐你在更改这个参数先调试一下deadzone_intra。
.
.TP
.B deadzone_intra=<0\-32>
置非格子因子量化模式中帧内亮度量化无效区的大小（默认值：11）。
该选项与deadzon_inter有相同的效果，不同在于其影响的是内部帧。
推荐你在更改deadzone_inter之前先调试一下这个参数。
.
.TP
.B (no)fast_pskip
执行P帧中的早期跳跃侦测功能（默认值：启用）。
该选项通常不花任何代价而提升编码速度，但其有时可能在缺乏细节的画面区域，如天空，
产生画面损伤。
.
.TP
.B (no)dct_decimate
去除只含有单个微小系数的P帧中的DCT块（默认值：启用）。
该选项会去除一切画面细节，所以其会省下一些比特以用在其它帧上，从而有可能提升整体
的主观质量。
如果你正以较高的目标比特率压缩非动画视频内容，那么你可能希望禁用这个选项以尽可能
保留画面细节。
.
.TP
.B nr=<0\-100000>
噪声削减强度，0表示禁用。
100\-1000对于典型内容来说是一个有用的范围，但你可能希望对噪声很强的视频内容调高
一些这个选项。
考虑到这个选项对于运行速度影响小，你可能希望倾向于使用这个选项，而不是使用诸如
denoise3d或hqdn3d之类的视频滤镜来滤除噪声。
.
.TP
.B chroma_qp_offset=<\-12\-12>
相对于亮度来说为色度使用一个不同的量化参数。
有用值的范围是<\-2\-2>（默认值：0）。
.
.TP
.B aq_mode=<0\-2>
定议自适应量化模式（AQ）如何分配比特：
.PD 0
.RSs
.IPs 0
禁用
.IPs 1
避免在帧间转移比特。
.IPs 2
在帧间转移比特（依据默认方式）。
.RE
.PD 1
.
.TP
.B aq_strength=<positive float value>
控制自适应量化模式（AQ）在平坦和有纹理的区域能减少多少块效应和模糊（默认值：1.0）。
值为 0.5 将导致较弱的 AQ 和较少的细节，而值为 1.5 则能产生较强的 AQ 和更多的细节。
.
.TP
.B cqm=<flat|jvt|<filename>>
要么使用一个预先定义好的自定义量化矩阵，要么加一个JM格式的矩阵文件。
.PD 0
.RSs
.IPs "flat\ "
使用预先定义好的平坦16矩阵（默认值）。
.IPs "jvt\ \ "
使用预先定义好的JVT矩阵。
.IPs <filename>
使用所给出的JM格式矩阵文件。
.PD 1
.RE
.RS
.I 注意：
Windows CMD.EXE的用户如果尝试使用全部CQM列表时，可能在解析命令行时遇到问题。
这是因为命令行长度有限制。
在这种情况下推荐将列表存在一个JM格式的CQM文件中，然后像上面所说那样加载进来。
.RE
.
.TP
.B cqm4iy=<list>（另参见cqm）
自定义的4x4帧内亮度矩阵，以由16个逗号分隔值域为1\-255的值组成的列表的形式给出。
.
.TP
.B cqm4ic=<list>（另参见cqm）
自定义的4x4帧内色度矩阵，以由16个逗号分隔值域为1\-255的值组成的列表的形式给出。
.
.TP
.B cqm4py=<list>（另参见cqm）
自定义的4x4帧间亮度矩阵，以由16个逗号分隔值域为1\-255的值组成的列表的形式给出。
.
.TP
.B cqm4pc=<list>（另参见cqm）
自定义的4x4帧间色度矩阵，以由16个逗号分隔值域为1\-255的值组成的列表的形式给出。
.
.TP
.B cqm8iy=<list>（另参见cqm）
自定义的8x8帧内亮度矩阵，以由64个逗号分隔值域为1\-255的值组成的列表的形式给出。
.
.TP
.B cqm8py=<list>（另参见cqm）
自定义的8x8帧间亮度矩阵，以由64个逗号分隔值域为1\-255的值组成的列表的形式给出。
.
.TP
.B level_idc=<10\-51>
将比特率的等级设置为H.264标准附件A中定义的值（默认值：51——5.1级）。
该选项用于告诉解码器其需要支持怎么样的性能。
只有当你知道这个参数是什么意思，并且需要设置它时，才使用这个参数。
.
.TP
.B threads=<0\-16>
生成线程以在多个CPU上平行编码（默认值：0）。
该选项对于压缩质量稍有一些影响。
0或‘auto’告诉x264让其侦测你有多个CPU，并选取一个适当的线程数。
.
.TP
.B (no)sliced_threads
使用基于片段的多线程模式（默认值：禁用）。
与通常的多线程模式不同，该选项不增加编程延迟，但运行稍慢且压缩上较低效。
.
.TP
.B slice_max_size=<0 或正整数>
最大的片段尺寸，单位为字节（默认值：0）。
值为零则没有最大值。
.
.TP
.B slice_max_mbs=<0 或正整数>
最大的片段尺寸，单位为宏块数（默认值：0）。
值为零则没有最大值。
.
.TP
.B slices=<0 或正整数>
每帧最大的片段数（默认值：0）。
值为零则没有最大值。
.
.TP
.B sync_lookahead=<0\-250>
调整基于多线程的预读缓冲的大小（默认值：0）。
0 或‘auto’告诉 x264 自动确定缓冲大小。
.
.TP
.B (no)deterministic
仅使用多线程编程的确定性优化模式（默认值：启用）。
.
.TP
.B (no)global_header
使SPS和PPS只出现一次，即在比特流的开始部分（默认值：禁用）。
某些播放器，诸如Sony PSP，需要使用这个选项。
默认的行为是使SPS和PPS在每个IDR帧前重复出现。
.
.TP
.B (no)interlaced
将视频内容作为隔行扫描内容对待。
.
.TP
.B (no)constrained_intra
启用受限制的帧内预测模式（默认值：禁用）。
该选项稍稍降低压缩率，但对于 SVC 编码中的基础编码层次是必须的。
.
.TP
.B (no)aud
将存取单元的分隔标志写入数据流（默认值：禁用）。
.
.TP
.B log=<\-1\-3>
调整打印在屏幕上的日志信息的量。
.PD 0
.RSs
.IPs "\-1"
无
.IPs " 0"
只打印错误信息。
.IPs " 1"
警告信息
.IPs " 2"
当编码结束时打印PSNR以及其它分析统计信息（默认值）
.IPs " 3"
每个帧的PSNR、QP、帧类型、大小，以及其它统计信息
.RE
.PD 1
.
.TP
.B (no)psnr
打印信噪比统计信息。
.br
.I 注意：
PSNR的‘Y’、‘U’、‘V’和‘Avg’域在数学上并不完美（这些值只是逐帧PSNR的平均值
）。
这些只是为了与JM标准的编解码器相比较，而保留下来的。
出于其它目的的话，请采用log=3打印的‘Global’PSNR，或是逐帧的PSNR。
.
.TP
.B (no)ssim
打印结构相似度计量结果。
该值为PSNR的一种替代计量值，并且可能与压缩后视频上观察到的质量有更好的相关性。
.
.TP
.B (no)visualize
启用x264在编码时的可视化效果。
如果你系统上的x264支持这个选项，那么在编码过程中将打开一个新窗口，在这个窗口中，
x264会尝试总体性地显示出每一帧是如何编码。
在可视化模式下影片的每种块类型将以如下方式着色：
.
.TP
.B dump_yuv=<file name>
将 YUV 帧导出到指定的文件中。
用于调试。
.PD 0
.RSs
.IPs 红/粉红
帧内块
.IPs "蓝\ "
帧间块
.IPs 绿
跳跃
.IPs 黄
B块
.RE
.PD 1
.RS
该功能可以认为是实验性，并且容易变化。
特别是，其需要x264编译时启用可视化功能。
注意在写这部分内容时，x264在编码并可视化显示每一帧后会暂停，等待用户按一个键，
在此之后才编码下一帧。
.RE
.
.
.SS xvfw（\-xvfwopts）
.
使用Windows视频编解码器编码基本上是过时的做法，除非你希望编码为某种难懂而极端的
编解码器格式。
.
.TP
.B codec=<name>
用于编码的二进制编解码器文件的文件名。
.
.TP
.B compdata=<file>
vfw2menc创建的编解码器设置文件的文件名（如firstpass.mcf）。
.
.
.SS MPEG muxer（\-mpegopts）
.
MPEG muxer可以生成5种类型的视频流，每种都有较好的默认参数，而用户可以更改这些参
数。
通常，当生成MPEG文件时，建议禁用MEncoder的跳帧指令（参见\-noskip、\-mc以及视频滤
镜harddup和softskip）。
.PP
.I 示例：
.PD 0
.RSs
.IPs format=mpeg2:tsaf:vbitrate=8000
.RE
.PD 1
.
.TP
.B format=<mpeg1 | mpeg2 | xvcd | xsvcd | dvd | pes1 | pes2>
视频流格式（默认值：mpeg2）。
pes1与pes2是非常有问题的格式（没有打包头，没有填充），但VDR使用这些格式；不要选
用这些格式，除非你确切知道你在做什么。
.
.TP
.B size=<最大65535>
单位为字节的打包大小，不要更改这个值除非你确切知道你在做什么（默认值：2048）。
.
.TP
.B muxrate=<int>
打包头部信息中的单位kbit/s的标称复合流速率（默认值：1800 kb/s）。
当‘format=mpeg1’或‘mpeg2’时将根据需要获得更新。
.
.TP
.B "tsaf\ \ \ "
如果可能，在所有帧上设置时间戳值；推荐当format=dvd时使用。
如果dvdauthor报警输出信息，例如“..audio sector out of range...”时，那么你可能
不该启用这个选项。
.
.TP
.B interleaving2
使用一种更好的算法来交织音频和视频数据包，其所基于的原则是流合并器将总是尝试在空
闲空间所占百分比最大的条件下填充流。
.
.TP
.B vdelay=<1\-32760>
初始视频延迟时间，单位为毫秒（默认值：0），
如果你想让视频相对音频有一定延后，那么就使用这个选项。
这个选项在使用了:drop时无效。
.
.TP
.B adelay=<1\-32760>
初始音频延迟时间，单位为毫秒（默认值：0），
如果你想让音频相对视频有一定延后，那么就使用这个选项。
.
.TP
.B "drop\ \ \ "
当与vdelay一起使用时，流合并器将丢弃先于视频出现的那部分音频。
.
.TP
.B vwidth, vheight=<1\-4095>
当视频是MPEG-1/2时，设置视频的宽度和高度。
.
.TP
.B vpswidth, vpsheight=<1\-4095>
当视频是MPEG-2时，设置全景显示模式（pan-scan）下视频的宽度和高度。
.
.TP
.B vaspect=<1 | 4/3 | 16/9 | 221/100>
设置MPEG-2视频的显示宽高比。
不要对MPEG-1视频使用这个选项，否则产生的宽高比将完全错误。
.
.TP
.B vbitrate=<int>
设置MPEG-1/2视频单位为kbit/s的视频比特率。
.
.TP
.B vframerate=<24000/1001 | 24 | 25 | 30000/1001 | 30 | 50 | 60000/1001 | 60 >
设置MPEG-1/2视频的帧率。
如果与telecine选项一同使用，那么将忽略这个选项。
.
.TP
.B telecine
启用3:2下拉软性电视电影化模式：流合并器将使视频流看上去像是以30000/1001fps编码
的。
只有当输出帧率为24000/1001fps时这个选项才对MPEG-2有效，如需要则使用\-ofps改变输
出帧率。
其它的帧率与该选项不兼容。
.
.TP
.B film2pal
启用FILM和NTSC至PAL软性电视电影化模式：流合并器将使视频流看上去像是以25fps编码
的。
只有当输出帧率为24000/1001fps时这个选项才对MPEG-2有效，如需要则使用\-ofps改变输
出帧率。
其它的帧率与该选项不兼容。
.
.TP
.B tele_src 与 tele_dest
使用Donand Graft的DGPulldown代码启用任意电视电影化模式。
你需要指定原始帧率和所期望的帧率；流合并器将使视频流看上去像是以所期望的帧率编码
的。
只有当输入的帧率比输出的帧率小，并且帧率的增加量 <= 1.5时，这个选项才对MPEG-2视
频有效。
.sp 1
.RS
.I 示例：
.RE
.PD 0
.RSs
.IPs tele_src=25，tele_dest=30000/1001
PAL至NTSC的电视电影化处理
.RE
.PD 1
.
.TP
.B vbuf_size=<40\-1194>
设置视频解码器的缓冲大小，以千字节为单位表示。
只有当视频流的比特率对于所选的格式来说太高了，并且你完全了解你在做什么时，才指定
这个选项。
太高的值可能导致影片无法播放，这取决于播放器的能力。
当合并HDTV视频流时，400的值应该足够了。
.
.TP
.B abuf_size=<4\-64>
设置音频解码器的缓冲大小，以千字节为单位表示。
针对vbuf_size的原则在此同样适用。
.
.
.SS FFmpeg libavformat demuxers（\-lavfdopts）
.
.TP
.B analyzeduration=<value>
单位为秒的分析媒体流属性时的最大长度。
.
.TP
.B format=<value>
强制使用一个特定的 libav 格式库的分离器。
.
.TP
.B o=<键>=<值>[,<键>=<值>[,...]]
传递 AVOption 选项至 libavformat 流分解器。
注意，欢迎制造一个使 o= 不再需要，而将所有未知选项传递至 AVOption 系统的补丁。
AVOption 的完整列表可在 FFmpeg 用户手册中找到。
注意某些选项可能与 MPlayer/MEncoder 选项冲突。
.sp 1
.RS
.I 示例：
.RE
.RSs
.PD 0
.IPs o=ignidx
.PD 1
.RE
.
.TP
.B probesize=<value>
在侦测阶段所探测的最大数据量。
在MPEG-TS的情况下，这个值指定了所扫描TS包的最大个数。
.
.TP
.B cryptokey=<hexstring>
分离器要使用的加密密钥。
该值是密钥的原始二进制数据转换后得到十六进制字符串。
.
.
.SS FFmpeg libavformat muxers（\-lavfopts）（另参见\-of lavf）
.
.TP
.B delay=<value>
当前只对MPEG[12]有意义：单位为秒的，对于任意出现的流，输出流参照计时器（SCR）和
解码时间戳（DTS）之间的最大所允许的差距。
默认值为0.7（与MPEG标准所定义的强制执行值相同）。
较高的值要求较大的缓冲，因而不应使用。
.
.TP
.B format=<container_format>
重新定义所合并输出的是哪种容器格式
（默认值：根据输出文件的扩展名自动侦测）。
.PD 0
.RSs
.IPs "mpg\ \ "
MPEG-1系统以及MPEG-2 PS
.IPs "asf\ \ "
高级流媒体格式
.IPs "avi\ \ "
音视频交织文件
.IPs "wav\ \ "
波形音频
.IPs "swf\ \ "
Macromedia Flash
.IPs "flv\ \ "
Macromedia Flash视频文件
.IPs "rm\ \ \ "
RealAudio和RealVideo
.IPs "au\ \ \ "
SUN AU格式
.IPs "nut\ \ "
NUT开放容器格式（实验性）
.IPs "mov\ \ "
QuickTime
.IPs "mp4\ \ "
MPEG-4格式
.IPs "ipod\ "
含有苹果 iPod 固件所需额外标志数据的 MPEG-4 格式
.IPs "dv\ \ \ "
Sony 数字视频容器格式
.IPs "matroska\ \ \ "
Matroska
.RE
.PD 1
.TP
.B muxrate=<rate>
流合流时的标称比特率，单位为比特每秒；
当前该选项只对MPEG[12]有意义。
有时需要提高这个值以防止“缓冲下溢”。
.
.TP
.B o=<键>=<值>[,<键>=<值>[,...]]
传递 AVOption 选项至 libavformat 流合并器。
注意，欢迎制造一个使 o= 不再需要，而将所有未知选项传递至 AVOption 系统的补丁。
AVOption 的完整列表可在 FFmpeg 用户手册中找到。
注意某些选项可能与 MEncoder 选项冲突。
.sp 1
.RS
.I 示例：
.RE
.RSs
.PD 0
.IPs o=packetsize=100
.PD 1
.RE
.
.TP
.B packetsize=<size>
所选格式单个数据包的大小，以字节为单位表示。
当将流合并至MPEG[12]的实现格式时，默认值为：
对于[S]VCD为2324，对于所有其它格式为2048。
.
.TP
.B preload=<distance>
当前只对MPEG[12]有意义：单位为秒，对于任意出现的流，输出流参照计时器（SCR）和解
码时间戳（DTS）间的初始差距（流分离至解码间的延迟）。
.
.
.
.
.\" --------------------------------------------------------------------------
.\" 环境变量
.\" --------------------------------------------------------------------------
.
.SH "环境变量"
.
有环境变量用于控制 MPlayer 和 MEncoder 的行为。
.
.TP
.B MPLAYER_CHARSET (也请参见 \-msgcharset)
转换控制台的消息显示为指定字符集 (默认值是自动检测: autodetect)。
值 "noconv" 表示不要转换。
.
.TP
.B MPLAYER_HOME
MPlayer 寻找设置的目录。
.
.TP
.B MPLAYER_VERBOSE (也请参见 \-v 和 \-msglevel)
对所有的消息模块设置初始冗赘级别 (默认是: 0)。
最终的冗赘级别是 \-msglevel 5 的级别再加上 MPLAYER_VERBOSE 的值。
.
.SS libaf:
.
.TP
.B LADSPA_PATH
如果设置了 LADSPA_PATH, 它会寻找指定的文件。
如果没设置, 你就必须提供完整的路径名。
FIXME: 这也在 ladspa 一节有提到.
.
.SS libdvdcss:
.
.TP
.B DVDCSS_CACHE
指定目录以储存标题的钥匙值。
这会加速 DVD 在缓存中的译码过程。
如果 DVDCSS_CACHE 目录不存在就创建它,
并创建以 DVD 标题或生产日期为名称的子目录。
如果 DVDCSS_CACHE 没设置或是空的, libdvdcss 会使用默认值为
Unix 的 "${HOME}/.dvdcss/" 或
Win32 的 "C:\\Documents and Settings\\$USER\\Application Data\\dvdcss\\"。
特殊值 "off" 停用缓存。
.
.TP
.B DVDCSS_METHOD
设置 libdvdcss 用于解读加密盘片的认证和解密方法。
可以是 title(标题), key(钥匙) 或 disc(盘片) 的其中之一。
.PD 0
.RSs
.IPs "key\ \ "
是默认方法。
libdvdcss 会使用一套计算过的播放器密钥,尝试取得盘片的钥匙。
如果驱动器不认识播放器的任何钥匙就会失败。
.IPs "disc\ "
是钥匙方法失败的备用方法。
代之使用播放器钥匙, libdvdcss 会使用蛮横暴力的算法破解盘片钥匙。
此过程需要 CPU 高强度运行和 64 MB 内存以储存临时的数据。
.IPs title
是所有其它方法的备用方法。
它不依靠与 DVD 设备交换钥匙, 而是使用一种密码机(crypto)攻击法来猜测标题钥匙。
此失败的情况极少, 因为盘片上没有足够的加密数据来低档统计攻击法,
但是另一方面这是仅有的方法来破译储存在硬盘上的 DVD,
和 RPC2 设备上不同地区码的 DVD。
.RE
.PD 1
.
.TP
.B DVDCSS_RAW_DEVICE
指定使用的原始设备。
确切的用法依赖于你的操作系统, 例如 Linux 工具建立的原始设备是 raw(8)。
请注意在大多数操作系统上, 使用原始设备需要高度对齐的缓冲(aligned buffers):
Linux 需要 2048 字节(等于 DVD 扇区大小)的对齐。
.
.TP
.B DVDCSS_VERBOSE
设置 libdvdcss 冗赘级别。
.PD 0
.RSs
.IPs 0
一点都不输出消息。
.IPs 1
输出错误消息到 stderr。
.IPs 2
输出错误和调试消息到 stderr。
.RE
.PD 1
.
.TP
.B DVDREAD_NOKEYS
启动时跳过访问所有的钥匙。
目前停用。
.
.TP
.B HOME
FIXME: 待解释。
.
.SS libao2:
.
.TP
.B AO_SUN_DISABLE_SAMPLE_TIMING
FIXME: 待解释。
.
.TP
.B AUDIODEV
FIXME: 待解释。
.
.TP
.B AUDIOSERVER
指定 nas 音频输出驱动应该去连接的和传输的
网络音频系统(Network Audio System)服务器。
如果没设置, 就使用 DISPLAY。
传输可以是 tcp 和 unix 其中之一。
语法是 tcp/<某主机>:<某端口>, <某主机>:<实例号> 或 [unix]:<实例号>。
NAS 基端口是 8000 而 <实例号> 在其之上再增加。
.sp 1
.RS
.I 示例:
.RE
.PD 0
.RSs
.IPs AUDIOSERVER=somehost:0
连接到 NAS 服务器, 某主机上使用默认的端口和传输协议。
.IPs AUDIOSERVER=tcp/somehost:8000
连接到 NAS 服务器, 某主机上监听 TCP 端口8000。
.IPs AUDIOSERVER=(unix)?:0
连接到 NAS 服务器, 本地主机上的实例 0 使用 unix 域套接口。
.RE
.PD 1
.
.TP
.B DISPLAY
FIXME: 待解释。
.
.SS vidix:
.
.TP
.B VIDIX_CRT
FIXME: 待解释。
.
.TP
.B VIDIXIVTVALPHA
将该选项设为‘disable’可以阻止 VIDIX 驱动控制阿尔法混合的参数。
然后你就可以自己使用‘ivtvfbctl’操作这一参数。
.
.SS osdep:
.
.TP
.B TERM
FIXME: 待解释。
.
.SS libvo:
.
.TP
.B DISPLAY
FIXME: 待解释。
.
.TP
.B FRAMEBUFFER
FIXME: 待解释。
.
.TP
.B HOME
FIXME: 待解释。
.
.SS libmpdemux:
.
.TP
.B HOME
FIXME: 待解释。
.
.TP
.B HOMEPATH
FIXME: 待解释。
.
.TP
.B http_proxy
FIXME: 待解释。
.
.TP
.B LOGNAME
FIXME: 待解释。
.
.TP
.B USERPROFILE
FIXME: 待解释。
.
.SS libmpcodecs:
.
.TP
.B XANIM_MOD_DIR
FIXME: 待解释。
.
.SS GUI:
.
.TP
.B CHARSET
FIXME: 待解释。
.
.TP
.B DISPLAY
FIXME: 待解释。
.
.TP
.B HOME
FIXME: 待解释。
.
.SS libavformat:
.
.TP
.B AUDIO_FLIP_LEFT
FIXME: 待解释。
.
.TP
.B BKTR_DEV
FIXME: 待解释。
.
.TP
.B BKTR_FORMAT
FIXME: 待解释。
.
.TP
.B BKTR_FREQUENCY
FIXME: 待解释。
.
.TP
.B http_proxy
FIXME: 待解释。
.
.TP
.B no_proxy
FIXME: 待解释。
.
.
.
.\" --------------------------------------------------------------------------
.\" 文件
.\" --------------------------------------------------------------------------
.
.SH "相关文件"
.
.TP
/usr/\:local/\:etc/\:mplayer/\:mplayer.conf
MPlayer 范围的设置
.
.TP
/usr/\:local/\:etc/\:mplayer/\:mencoder.conf
MEncoder 范围的设置
.
.TP
~/.mplayer/\:config
MPlayer 用户设置
.
.TP
~/.mplayer/\:mencoder.conf
MEncoder 用户设置
.
.TP
~/.mplayer/\:input.conf
输入绑定 (按键的完整列表请参见 "\-input keylist" 的输出)
.
.TP
~/.mplayer/\:gui.conf
GUI 配置文件
.
.TP
~/.mplayer/\:gui.pl
GUI 播放列表
.
.TP
~/.mplayer/\:font/
字体目录 (里面必须有一个 font.desc 文件和带 .RAW 后缀的文件。)
.
.TP
~/.mplayer/\:DVDkeys/
缓存的 CSS 钥匙
.
.TP
假如播放文件是 /path/\:to/\:movie.avi, MPlayer 按以下顺序搜索字幕文件:
.RS
/path/\:to/\:movie.sub
.br
~/.mplayer/\:sub/\:movie.sub
.RE
.PD 1
.
.
.\" --------------------------------------------------------------------------
.\" 示例
.\" --------------------------------------------------------------------------
.
.SH "MPLAYER的使用范例"
.
.PP
.B 快速上手播放 DVD:
.nf
mplayer dvd://1
.fi
.
.PP
.B 播放日文对话和英文字幕:
.nf
mplayer dvd://1 \-alang ja \-slang en
.fi
.
.PP
.B 只播放第 5, 6, 7 场景:
.nf
mplayer dvd://1 \-chapter 5\-7
.fi
.
.PP
.B 只播放第 5, 6, 7 标题:
.nf
mplayer dvd://5\-7
.fi
.
.PP
.B 播放多视角 DVD:
.nf
mplayer dvd://1 \-dvdangle 2
.fi
.
.PP
.B 从不同的 DVD 设备播放:
.nf
mplayer dvd://1 \-dvd\-device /dev/\:dvd2
.fi
.
.PP
.B 从目录中的 VOB 文件播放 DVD 视频:
.nf
mplayer dvd://1 \-dvd\-device /path/\:to/\:directory/
.fi
.
.PP
.B 复制 DVD 标题到硬盘, 保存文件名为 "title1.vob":
.nf
mplayer dvd://1 \-dumpstream \-dumpfile title1.vob
.fi
.
.PP
.B 使用 dvdnav 播放一张 /dev/sr1: 路径下的 DVD 碟片
.nf
mplayer dvdnav:////dev/sr1
.fi
.
.PP
.B 播放 HTTP 流:
.nf
mplayer http://mplayer.hq/example.avi
.fi
.
.PP
.B 播放 RTSP 流:
.nf
mplayer rtsp://server.example.com/streamName
.fi
.
.PP
.B 转换字幕为 MPsub 格式:
.nf
mplayer dummy.avi \-sub source.sub \-dumpmpsub
.fi
.
.PP
.B 转换字幕为 MPsub 格式但不播放:
.nf
mplayer /dev/\:zero \-rawvideo pal:fps=xx \-demuxer rawvideo \-vc null \-vo null \-noframedrop \-benchmark \-sub source.sub \-dumpmpsub
.fi
.
.PP
.B 从标准的 V4L 输入:
.nf
mplayer tv:// \-tv driver=v4l:width=640:height=480:outfmt=i420 \-vc rawi420 \-vo xv
.fi
.
.PP
.B 回放 Zoran 卡 (旧方法, 废弃):
.nf
mplayer \-vo zr \-vf scale=352:288 file.avi
.fi
.
.PP
.B 回放 Zoran 卡 (新方法):
.nf
mplayer \-vo zr2 \-vf scale=352:288,zrmjpeg file.avi
.fi
.
.PP
.B 以直通模式播放 DTS-CD：
.nf
mplayer \-ac hwdts \-rawaudio format=0x2001 \-cdrom\-device /dev/cdrom cdda://
.fi
.br
你可以使用 \-afm hwac3 代替 \-ac hwdts。
调整‘/dev/cdrom’使其与你系统中的 CD-ROM 设备相适应。
如果你的外部的接收设备支持解码原始 DTS 音频流，那么你可以通过 cdda://
直接播放，而不用设置格式，hwac3 或 hwdts。
.
.PP
.B 只用两个扬声器播放 6-声道 AAC 文件:
.nf
mplayer \-rawaudio format=0xff \-demuxer rawaudio \-af pan=2:.32:.32:.39:.06:.06:.39:.17:-.17:-.17:.17:.33:.33 adts_he-aac160_51.aac
.fi
.br
你可能想用 pan 值播放片断 (例如用放大值) 以增加音量或者避免剪切。
.
.PP
.B 使用geq滤镜产生的颠倒的棋盘：
.nf
mplayer \-vf geq='128+(p(X\,Y)\-128)*(0.5\-gt(mod(X/SW\,128)\,64))*(0.5\-gt(mod(Y/SH\,128)\,64))*4'
.fi
.
.
.SH "MENCODER的使用范例"
.
.PP
.B 编码 DVD 标题 #2 中选择的场景:
.nf
mencoder dvd://2 \-chapter 10\-15 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mpeg4
.fi
.
.PP
.B 编码 DVD 标题 #2, 缩放到 640x480:
.nf
mencoder dvd://2 \-vf scale=640:480 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mpeg4
.fi
.
.PP
.B 编码 DVD 标题 #2, 缩放到 512xHHH (保持宽高比):
.nf
mencoder dvd://2 \-vf scale \-zoom \-xy 512 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mpeg4
.fi
.
.PP
.B 同上, 但使用比特率 1800kbit 和优化的 macroblocks:
.nf
mencoder dvd://2 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mpeg4:mbd=1:vbitrate=1800
.fi
.
.PP
.B 同上, 但使用 MJPEG 压缩:
.nf
mencoder dvd://2 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mjpeg:mbd=1:vbitrate=1800
.fi
.
.PP
.B 编码当前目录下的所有 *.jpg 文件:
.nf
mencoder "mf://*.jpg" \-mf fps=25 \-o output.avi \-ovc lavc \-lavcopts vcodec=mpeg4
.fi
.
.PP
.B 从电视调谐器编码 (指定格式用 \-vf format):
.nf
mencoder \-tv driver=v4l:width=640:height=480 tv:// \-o tv.avi \-ovc raw
.fi
.
.PP
.B 从管道编码:
.nf
rar p test-SVCD.rar | mencoder \-ovc lavc \-lavcopts vcodec=mpeg4:vbitrate=800 \-ofps 24 \-
.fi
.
.
.\" --------------------------------------------------------------------------
.\" 错误, 作者, 标准声明
.\" --------------------------------------------------------------------------
.
.SH "程序错误"
不要惊慌。
如果你发现错误, 报告我们, 但请首先确认你已阅读了所有的文档。
也要小心那些表情符号 :)
许多错误是不正确的设置和参数使用引起的。
错误报告的文档一节
(http://www.mplayerhq.hu/\:DOCS/\:HTML/\:en/\:bugreports.html)
解释了如何创建有用的错误报告。
.
.
.
.SH "程序的作者"
MPlayer 最初由 Arpad Gereoffy 制作。
其它许多贡献者的部分清单, 请参见 AUTHORS(作者) 文件。
.PP
MPlayer 是 (C) 2000\-2009 The MPlayer Team (MPlayer 团队) 所有
.PP
本(英文)手册页主要由 Gabucino, Jonas Jermann 和 Diego Biurrun 编写,
由 Diego Biurrun 维护。
视频滤镜、通用编解码器选项、特定编解码器专用选项三个章节由
JRaSH <jrash06 AT 163.com> 重新翻译
参于翻译本中文手册页的有: JRaSH<jrash06 At 163.com>,
Sheldon Jin <jinsh2 AT yahoo.com>, Lu Ran <hephooey AT fastmail.fm> 等。
有关本文的联系请发送邮件到 MPlayer-DOCS 邮件列表。
与翻译相关的邮件属于 MPlayer-translations 邮件列表。
.\" end of file
